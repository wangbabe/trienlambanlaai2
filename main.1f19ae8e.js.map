{"version":3,"sources":["../node_modules/three/build/three.core.js","../node_modules/three/build/three.module.js","../../src/controls/OrbitControls.ts","../../src/loaders/FontLoader.ts","../../src/geometries/TextGeometry.ts","main.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_readOnlyError","_classCallCheck","_defineProperties","_toPropertyKey","key","_createClass","_toPrimitive","toPrimitive","String","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","RGBDepthPacking","RGDepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","LinearTransfer","SRGBTransfer","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","reject","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","setTimeout","toNormalizedProjectionMatrix","projectionMatrix","toReversedProjectionMatrix","isPerspectiveMatrix","LINEAR_REC709_TO_XYZ","XYZ_TO_LINEAR_REC709","createColorManagement","ColorManagement","enabled","workingColorSpace","spaces","convert","color","sourceColorSpace","targetColorSpace","transfer","SRGBToLinear","primaries","toXYZ","fromXYZ","LinearToSRGB","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","colorSpace","getTransfer","getLuminanceCoefficients","luminanceCoefficients","colorSpaces","assign","_getMatrix","targetMatrix","_getDrawingBufferColorSpace","outputColorSpaceConfig","drawingBufferColorSpace","_getUnpackColorSpace","workingColorSpaceConfig","unpackColorSpace","REC709_PRIMARIES","REC709_LUMINANCE_COEFFICIENTS","D65","_defineProperty","whitePoint","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","dataReady","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_this","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_callSuper","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","pmremVersion","_inherits","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","setFromMatrixPosition","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_this2","options","isRenderTarget","depth","scissor","scissorTest","viewport","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","setSize","il","WebGLRenderTarget","_RenderTarget","_this3","isWebGLRenderTarget","DataArrayTexture","_Texture","_this4","isDataArrayTexture","wrapR","layerUpdates","Set","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","_WebGLRenderTarget","_this5","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_this6","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_this7","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","x0","r1","r2","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","_EventDispatcher3","_this8","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxInstanceCount","_maxInstanceCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","_v40","_v41","_v42","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","getInterpolatedAttribute","attr","i3","barycoord","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","concat","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_this9","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","onBuild","MeshBasicMaterial","_Material","_this10","isMeshBasicMaterial","_superPropGet","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","Uint8BufferAttribute","_BufferAttribute2","Uint8ClampedBufferAttribute","_BufferAttribute3","Int16BufferAttribute","_BufferAttribute4","Uint16BufferAttribute","_BufferAttribute5","Int32BufferAttribute","_BufferAttribute6","Uint32BufferAttribute","_BufferAttribute7","Float16BufferAttribute","_BufferAttribute8","_this11","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_id$1","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_this12","isBufferGeometry","indirect","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setIndirect","getIndirect","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_this13","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","_BufferGeometry","_this14","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_this15","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_this16","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","_Camera","_this17","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","renderTarget","_this18","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","needsPMREMUpdate","CubeTexture","_Texture3","_this19","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget3","_this20","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","FogExp2","density","isFogExp2","Fog","isFog","Scene","_Object3D4","_this21","backgroundBlurriness","backgroundIntensity","backgroundRotation","environmentIntensity","environmentRotation","overrideMaterial","__THREE_DEVTOOLS__","CustomEvent","detail","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$7","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","SpriteMaterial","_Material3","_this22","isSpriteMaterial","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D5","_this23","isSprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D6","_this24","_currentLevel","levels","isLOD","autoUpdate","level","addLevel","hysteresis","removeLevel","removedElements","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_vector3","_matrix4","_vertex","_sphere$5","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_this25","bindMatrixInverse","applyBoneTransform","bind","calculateInverses","pose","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","bones","boneInverses","Bone","_Object3D7","_this26","isBone","DataTexture","_Texture4","_this27","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","boneTexture","init","inverse","bone","computeBoneTexture","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute10","_this28","meshPerAttribute","isInstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$4","InstancedMesh","_Mesh2","_this29","morphTexture","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","objectInfluences","dataIndex","raycastTimes","instanceId","setColorAt","fill","setMorphAt","morphInfluencesSum","morphBaseInfluence","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$3","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","ascIdSort","sortOpaque","sortTransparent","MultiDrawRenderList","pool","list","item","_matrix$1","_whiteColor","_frustum","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","copyArrayContents","BatchedMesh","_Mesh3","_this30","customSort","_instanceInfo","_geometryInfo","_availableInstanceIds","_availableGeometryIds","_nextIndexStart","_nextVertexStart","_visibilityChanged","_multiDrawCounts","_multiDrawStarts","_multiDrawCount","_multiDrawInstances","_indirectTexture","_initMatricesTexture","_initIndirectTexture","matricesArray","indirectArray","indirectTexture","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstArray","dstAttribute","indexArray","_validateGeometry","batchGeometry","Boolean","validateInstanceId","instanceInfo","validateGeometryId","geometryId","geometryInfoList","setCustomSort","func","geometryIndex","getBoundingBoxAt","getBoundingSphereAt","addInstance","atCapacity","drawId","sort","shift","addGeometry","reservedVertexCount","reservedIndexCount","geometryInfo","vertexStart","indexStart","indexCount","hasIndex","setGeometryAt","dstIndex","srcIndex","deleteGeometry","deleteInstance","optimize","nextVertexStart","nextIndexStart","elementDelta","copyWithin","iv","setVisibleAt","getVisibleAt","setGeometryIdAt","getGeometryIdAt","getGeometryRangeAt","setInstanceCount","availableInstanceIds","multiDrawCounts","multiDrawStarts","setGeometrySize","validRanges","filter","info","requiredVertexLength","requiredIndexLength","oldGeometry","batchId","_objectSpread","bytesPerElement","BYTES_PER_ELEMENT","multiDrawCount","culled","shadowCamera","depthMaterial","LineBasicMaterial","_Material4","_this31","isLineBasicMaterial","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","_Object3D8","_this32","computeLineDistances","lineDistances","threshold","params","localThreshold","localThresholdSq","isLineSegments","checkIntersection","isLineLoop","thresholdSq","distSq","_start","_end","LineSegments","_Line","_this33","LineLoop","_Line2","_this34","PointsMaterial","_Material5","_this35","isPointsMaterial","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D9","_this36","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","Group","_Object3D10","_this37","isGroup","VideoTexture","_Texture5","video","_this38","isVideoTexture","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture6","_this39","isFramebufferTexture","CompressedTexture","_Texture7","_this40","isCompressedTexture","CompressedArrayTexture","_CompressedTexture","_this41","isCompressedArrayTexture","CompressedCubeTexture","_CompressedTexture2","_this42","isCompressedCubeTexture","CanvasTexture","_Texture8","_this43","isCanvasTexture","DepthTexture","_Texture9","_this44","isDepthTexture","compareFunction","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_this45","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","aRadius","_this46","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_this47","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","k","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_this48","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_this49","isCubicBezierCurve3","LineCurve","_Curve5","_this50","isLineCurve","LineCurve3","_Curve6","_this51","isLineCurve3","QuadraticBezierCurve","_Curve7","_this52","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_this53","isQuadraticBezierCurve3","SplineCurve","_Curve9","_this54","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_this55","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","resolution","pts","Path","_CurvePath","_this56","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry2","_this57","phiStart","phiLength","initNormals","inverseSegments","vertex","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_this58","capSegments","radialSegments","path","CircleGeometry","_BufferGeometry3","_this59","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry4","_this60","radiusTop","radiusBottom","openEnded","halfHeight","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_this61","PolyhedronGeometry","_BufferGeometry5","_this62","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_this63","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry6","_this64","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","hash","reverseHash","index0","_edgeData$key","Shape","_Path","_this65","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry7","_this66","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","layer","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_this67","OctahedronGeometry","_PolyhedronGeometry3","_this68","PlaneGeometry","_BufferGeometry8","_this69","width_half","height_half","segment_width","segment_height","RingGeometry","_BufferGeometry9","_this70","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_this71","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_this72","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_this73","TorusGeometry","_BufferGeometry12","_this74","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_this75","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_this76","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_this77","edges","ol","isUniqueEdge","hash1","hash2","has","Geometries","ShadowMaterial","_Material6","_this78","isShadowMaterial","RawShaderMaterial","_ShaderMaterial","_this79","isRawShaderMaterial","MeshStandardMaterial","_Material7","_this80","isMeshStandardMaterial","MeshPhysicalMaterial","_MeshStandardMaterial","_this81","isMeshPhysicalMaterial","ior","sheenColorMap","sheenRoughnessMap","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","MeshPhongMaterial","_Material8","_this82","isMeshPhongMaterial","MeshToonMaterial","_Material9","_this83","isMeshToonMaterial","MeshNormalMaterial","_Material10","_this84","isMeshNormalMaterial","MeshLambertMaterial","_Material11","_this85","isMeshLambertMaterial","MeshDepthMaterial","_Material12","_this86","isMeshDepthMaterial","depthPacking","MeshDistanceMaterial","_Material13","_this87","isMeshDistanceMaterial","MeshMatcapMaterial","_Material14","_this88","isMeshMatcapMaterial","LineDashedMaterial","_LineBasicMaterial","_this89","isLineDashedMaterial","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","time","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","frame","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","lastIndex","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_this90","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","trim","startTime","endTime","nKeys","to","validate","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","ColorKeyframeTrack","_KeyframeTrack2","NumberKeyframeTrack","_KeyframeTrack3","QuaternionLinearInterpolant","_Interpolant4","QuaternionKeyframeTrack","_KeyframeTrack4","StringKeyframeTrack","_KeyframeTrack5","VectorKeyframeTrack","_KeyframeTrack6","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","morphTargets","animationToMorphTargets","pattern","morphTarget","parts","match","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","response","_this91","_wrapNativeSuper","FileLoader","_Loader","_this92","cached","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","status","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","controller","readData","read","_ref","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","CompressedTextureLoader","_Loader3","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","urls","DataTextureLoader","_Loader6","texData","TextureLoader","_Loader7","Light","_Object3D11","_this93","intensity","groundColor","decay","penumbra","shadow","HemisphereLight","_Light","skyColor","_this94","isHemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","bias","normalBias","blurSamples","mapSize","mapPass","_frameExtents","_viewportCount","_viewports","getViewportCount","getFrustum","updateMatrices","light","shadowMatrix","getViewport","viewportIndex","getFrameExtents","SpotLightShadow","_LightShadow","_this95","isSpotLightShadow","SpotLight","_Light2","_this96","isSpotLight","power","_projScreenMatrix","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_this97","isPointLightShadow","_cubeDirections","_cubeUps","PointLight","_Light3","_this98","isPointLight","OrthographicCamera","_Camera2","_this99","isOrthographicCamera","scaleW","scaleH","DirectionalLightShadow","_LightShadow3","_this100","isDirectionalLightShadow","DirectionalLight","_Light4","_this101","isDirectionalLight","AmbientLight","_Light5","_this102","isAmbientLight","RectAreaLight","_Light6","_this103","isRectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coefficients","zero","getAt","coeff","getIrradianceAt","sh","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_this104","isLightProbe","MaterialLoader","_Loader8","_this105","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","replace","InstancedBufferGeometry","_BufferGeometry16","_this106","isInstancedBufferGeometry","instanceCount","BufferGeometryLoader","_Loader9","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_loadAsync","_asyncToGenerator","_callee","_callee$","_context8","parseAsync","_x5","_x6","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","_parseAsync","_callee2","_callee2$","_context9","parseImagesAsync","_x7","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee4","_deserializeImage","_deserializedImage2","_callee4$","_context11","_deserializeImage3","_callee3","_url","_callee3$","_context10","_deserializeImage2","_x9","_x8","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_this107","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","setContext","AudioLoader","_Loader12","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","cameraL","cameraR","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","ArrayCamera","_PerspectiveCamera","_this108","isArrayCamera","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_this109","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_this110","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_this111","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","setValue","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","objects","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","mode","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher6","_this112","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher7","_this113","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_this114","isInstancedInterleavedBuffer","GLBufferAttribute","elementSize","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","Matrix2","isMatrix2","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_this115","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_this116","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","sphereSize","_this117","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_this118","GridHelper","_LineSegments2","_this119","PolarGridHelper","_LineSegments3","_this120","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_this121","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_this122","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_this123","Box3Helper","_LineSegments6","_this124","PlaneHelper","_Line3","_this125","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_this126","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_this127","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","Controls","_EventDispatcher8","_this128","domElement","state","mouseButtons","touches","ONE","TWO","contain","imageAspect","cover","getByteLength","typeByteLength","getTextureTypeByteLength","TextureUtils","WebGLMultipleRenderTargets","_WebGLRenderTarget4","_this129","isWebGLMultipleRenderTargets","revision","__THREE__","_threeCore","require","asyncGeneratorStep","_next","_throw","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_assertThisInitialized","ReferenceError","valueOf","_setPrototypeOf","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","WebGLAttributes","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","updateBuffer","bufferSubData","mergeIndex","previousRange","deleteBuffer","delete","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphinstance_vertex","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowIntensity","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundCube","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMapTransform","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","_e1$1","WebGLBackground","cubemaps","cubeuvmaps","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","getBackground","usePMREM","forceClear","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","setTest","setMask","autoClearColor","autoClearDepth","autoClearStencil","addToRenderList","renderList","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","vao","bindVertexArray","deleteVertexArrayObject","deleteVertexArray","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","enableVertexAttribArray","vertexAttribDivisor","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","materialDefaultAttributeValues","locationSize","ARRAY_BUFFER","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","setMode","drawArrays","renderInstances","primcount","drawArraysInstanced","renderMultiDraw","starts","counts","drawCount","extension","multiDrawArraysWEBGL","elementCount","renderMultiDrawInstances","multiDrawArraysInstancedWEBGL","WebGLCapabilities","utils","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","textureFormatReadable","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","textureTypeReadable","textureType","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","reverseDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","maxSamples","MAX_SAMPLES","isWebGL2","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","_oldXrEnabled","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","currentPMREMVersion","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","drawElementsInstanced","multiDrawElementsWEBGL","multiDrawElementsInstancedWEBGL","WebGLInfo","calls","lines","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","WebGLMorphtargets","capabilities","morphTextures","morph","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphNormal","morphColor","disposeTexture","getUniforms","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","join","_m0","getEncodingComponents","encodingMatrix","getShaderErrors","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","getLuminanceFunction","generateVertexExtensions","chunks","extensionClipCullDistance","extensionMultiDraw","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","envMapCubeUVHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customVertexExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","shaderType","shaderName","batching","batchingColor","instancing","instancingColor","instancingMorph","useFog","fogExp2","normalMapObjectSpace","normalMapTangentSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","decodeVideoTexture","decodeVideoTextureEmissive","opaque","useDepthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","_activeChannels","SUPPORTS_VERTEX_TEXTURES","shaderIDs","getChannel","getParameters","shadows","shaderID","customVertexShaderID","customFragmentShaderID","getReversed","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_DISPERSION","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","supportsVertexTextures","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","UniformsCache","halfWidth","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","shadowUniforms","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","transmissionRenderTarget","WebGLRenderStates","renderStates","renderStateArray","renderState","fragment","WebGLShadowMap","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","_previousType","activeCubeFace","_state","setBlending","setScissorTest","toVSM","fromVSM","shadowFrameExtents","pars","viewportCount","vp","renderObject","VSMPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","onMaterialDispose","kl","shadowMaterial","reversedFuncs","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","reversed","currentDepthMask","currentDepthFunc","currentDepthClear","setReversed","ext","clipControlEXT","LOWER_LEFT_EXT","ZERO_TO_ONE_EXT","NEGATIVE_ONE_TO_ONE_EXT","oldDepth","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","COLOR_ATTACHMENT0","BACK","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","factorToGL","ZERO","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_imageDimensions","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsNewCanvas","maxSize","getDimensions","VideoFrame","textureNeedsGenerateMipmaps","generateMipmap","getTargetType","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RG_INTEGER","RG8UI","RG16UI","RG32UI","RG8I","RG16I","RG32I","RGB_INTEGER","RGB8UI","RGB16UI","RGB32UI","RGB8I","RGB16I","RGB32I","RGBA_INTEGER","RGBA8UI","RGBA16UI","RGBA32UI","RGBA8I","RGBA16I","RGBA32I","RGB","UNSIGNED_INT_5_9_9_9_REV","RGB9_E5","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getInternalDepthFormat","useStencil","depthType","glInternalFormat","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","getMipLevels","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","sourceProperties","workingPrimaries","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","mipmap","useTexStorage","allocateMemory","layerByteLength","layerData","subarray","_iterator3","_step3","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__renderTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","glAttachmentType","DEPTH_STENCIL_ATTACHMENT","DEPTH_ATTACHMENT","isUseMultisampledRTT","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__boundDepthTexture","__depthDisposeCallback","disposeEvent","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","targetType","invalidationArrayRead","invalidationArrayDraw","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","depthStyle","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","invalidateFramebuffer","__useRenderToTexture","naturalWidth","naturalHeight","displayWidth","displayHeight","WebGLUtils","ALPHA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","jointRadius","indexTip","thumbTip","distanceToPinch","handedness","gripSpace","getPose","targetRaySpace","jointName","_occlusion_vertex","_occlusion_fragment","WebXRDepthSensing","depthNear","depthFar","depthData","texProps","getMesh","cameraXR","depthColor","depthWidth","depthHeight","getDepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","glBinding","glProjLayer","glBaseLayer","xrFrame","depthSensing","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","layerInit","depthFormat","glDepthFormat","projectionlayerInit","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","scaleFactor","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","ignoreDepthValues","setFoveation","requestReferenceSpace","_x2","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","updateUserCamera","getCamera","getFoveation","fixedFoveation","hasDepthSensing","getDepthSensingMesh","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","enabledFeatures","includes","getDepthInformation","isValid","detectedPlanes","_e1","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","refreshMaterialUniforms","pixelRatio","refreshUniformsCommon","refreshUniformsToon","refreshUniformsPhong","refreshUniformsStandard","refreshUniformsPhysical","refreshUniformsMatcap","refreshUniformsDistance","refreshUniformsLine","refreshUniformsDash","refreshUniformsPoints","refreshUniformsSprites","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","uniformArray","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","indexString","cachedObject","chunkSize","chunkOffset","chunkPadding","boundary","chunkStart","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","_parameters$reverseDe","isWebGLRenderer","_alpha","WebGLRenderingContext","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","_outputColorSpace","toneMappingExposure","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_currentProjectionMatrix","_vector4","_emptyScene","_renderBackground","getTargetPixelRatio","contextName","contextAttributes","onContextLost","onContextRestore","onContextCreationError","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","depthSensingMesh","projectObject","opaqueObjects","transmissiveObjects","camera2","renderTransmissionPass","renderScene","transparentObjects","renderObjects","activeViewport","currentToneMapping","currentCameraViewport","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","readPixels","readRenderTargetPixelsAsync","_ref2","glBuffer","currFramebuffer","PIXEL_PACK_BUFFER","STREAM_READ","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","getBufferSubData","deleteSync","_x3","_x4","copyFramebufferToTexture","levelScale","copyTexSubImage2D","_srcFramebuffer","_dstFramebuffer","copyTextureToTexture","srcTexture","dstTexture","srcRegion","dstPosition","srcLevel","dstLevel","dstX","dstY","dstZ","glTarget","currentUnpackRowLen","UNPACK_ROW_LENGTH","currentUnpackImageHeight","UNPACK_IMAGE_HEIGHT","currentUnpackSkipPixels","UNPACK_SKIP_PIXELS","currentUnpackSkipRows","UNPACK_SKIP_ROWS","currentUnpackSkipImages","UNPACK_SKIP_IMAGES","isSrc3D","isDst3D","srcTextureProperties","dstTextureProperties","srcRenderTargetProperties","dstRenderTargetProperties","copyTexSubImage3D","copyTextureToTexture3D","initRenderTarget","resetState","drawingBufferColorspace","panLeft","panUp","pan","THREE","_interopRequireWildcard","_OrbitControls","_FontLoader","_TextGeometry","_getRequireWildcardCache","__esModule","default","getOwnPropertyDescriptor","innerWidth","innerHeight","appendChild","controls","OrbitControls","enableDamping","ambientLight","directionalLight","floorGeometry","floorMaterial","columnMaterial","wallHeight","columnHeight","boardWidth","boardHeight","centerWall","leftRectColumn","rightRectColumn","leftColumn","rightColumn","boardMaterial","board","rightWall","newRightRectColumn","newRightColumn","tableMaterial","tableGeometry","table","legMaterial","legGeometry","cylinderLegs","tableLength","tableWidth","offsetZ","tableY","leg","doorMaterial","doorGeometry","door","doorFrameMaterial","doorFrameGeometry","doorFrame","blackBoardMaterial","blackBoard","boardFrameMaterial","verticalPoleRight","verticalPoleLeft","horizontalPole","newTable","newCylinderLegs","animate"],"mappings":"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,GAAmB,CAAC,MAAA,EAAgB,QAAA,KAAA,CAAuB,MAAA,GAAS,QAAA,GAAY,QAAA,IAAY,QAAA;AAElG,AGPA,EFPS,ECmBG,ACZNC,CDYM,CFLN,ACdG,CACL,GAAA,CCmBO,CDlBP,IEKc,EFLd,CDYE,AGPe,CFJjB,GEIqBf,KHOG,AGPE,CAACzpF,CFJ3B,EACA,OAAA,EACM,AEEiC,CAAC,QHOhB,AGPwB,CHOR,CGPU,GAAG,CAAC;AAC1Dr0C,EHoGE,ECtGE,CEEC,CDaO,ACbN/0C,GAAG,CFFC,AEEA4zK,EDaE,CFuFV,CAAY,ECtGJ,ECeE,CDfO,CDsGL,CEvFO,CFuFyC,AGpGxC,CFFC,AEEA,EDaF,CAAK,MFuFoC,EAA0B,MEvF9D,ADfH,CCekB,ADfP,ICeO,ADfP,CAAK,CCeQ,IAAA,EAAM,ADfP,CAAA;AEI9C,IHmGU,ACrGC,AEELC,IDWiD,CFwF7C,CAAA,ACrGC,CDqGD,ACrGC,OCa4C,ADb5C,CAAQ,CEEG,GFFH,AEEM,CFFD,GEEKhB,CFFD,CAAA,GEEM,CAAC7pF,gBAAgB,CAAC,QAAQ,EAAE,GAAG,CAAC;AAClE6qF,IHIE,ACNS,ICYwD,EDZxD,CAAA,KEEK,CHId,AGJejqJ,CHIf,IAAA,EAAA,CGJuB,CAACrrB,CFFf,CAAiB,CEEC,CAAC,CAAC,CHI7B,ACN0B,CDM1B,ACN+B,AEEA,CAAC,EAAE,EAAE,CAAC,OFFO,CAAA;AEG9Cw2C,IHIE,ACNS,CEEN,CDS8D,ACT7D/0C,CDS4E,CAAA,CCTzE,CFFE,AEED6zK,CFFC,MDMT,CAAA,IAAA,EAAA,EGJwB,CAAC,EFFhB,CAAmB,IAAA,CAAK,CDMjC,CAAA,aCNgD,CAAA;IDQhD,ACNS,ECUC,IDVD,CCUC,ADVD,CCUC,GDVD,CACL,ECSM,CDTN,CCSc,CDRb,QAAA,IAAa;AEApB,IHIE,ECHM,ECOc,EDPV,CCOa,IAAA,EFJvB,ACHiB,CDGjB,IAAA,EAAA,CCHiB,KAAa,GDG9B,EAAU,GCHoB,CDGpB,CAAA,ACHoC,MAAA,IAAI,KAAA,CAAM,uBAAuB,CAAA;AEAjF,IHKE,AGLIC,EFEQ,ECKiB,IDLjB,IAAA,CEFK,EFEE,CCKU,ACPT,GFED,CAAK,AEFAjB,KFEA,AEFK,CFEC,AEFA7oG,QFEQ,CAAA,IEFK,CAAC,EAAE,EAAE,EAAE,CAAC;AACrD,IHIE,AGJI+pG,EFGQ,ECG+B,IDH/B,IAAA,CDCZ,AEE2C,ACN1B,CHIjB,CCDmB,CEHC,EHIpB,CCDmB,CDCnB,ACDwB,AEHAlB,KFGA,AEHK,CFGC,AEHAhkG,EHI9B,EAAS,ACDyB,CAAA,GDCrB,YGJqC,CAAC,CHItC,CAAA,CAAA,CAAA;EGJwC5kE,EHMrD,ECDU,CELgD,CDMJ,CCNM,CFKlD,MAAA,EAAQ,ICCoC,EDDpC,CAAO,IAAI,CAAA;AELwC,CAAC,CAAC,EHMvE,ACAI,CAAA,EACA,CCDkE,KAAA,EAAO,EFA7E,ACCI,CDDJ,CCEI,GDFJ,EAAA,ECEI,CAAA,UDFJ,EAAc,CAAA,CAAA;AGLhB,EFSE,EDHA,AGNIzN,EDKyE,CAAQ,CAAA,CCL5E,GAAG,IAAIq2K,CHMhB,CAAA,GGNqB,CHMrB,AGNsB7mI,EHMtB,EGN0B,CAAC8nI,UHM3B,EAAc,CGN0B,EAAEC,KHM5B,CAAA,OGNyC,CAAC;AAC1Dv3K,EFUE,EDHA,AEFE,CCLC,CAACwK,KFUJ,CAAU,EEVE,CFUF,AEVG3L,CAAC,CFUS,EEVN,CAACjB,IAAI,CAACC,EFUA,AEVE,EFU0D,CEVvD,CAAC;AAC/B06C,IHME,AEAE,ADKO,CEXN,CAAC/0C,EDMF,CAAK,ACNA,CAACxD,CFWC,ECLF,ECNM,CDMC,ADKL,AEXK,CHMd,ACKe,CDLf,IAAA,EAAA,ECKe,CAAU,GCLX,ADKW,EAAK,CDL9B,EAAU,CAAA,CAAA,KCK8B,CAAA;ECJxC,ADKA,EDLA,aAAA,CAAA,IAAA,EAAA,SAAA,EAAU,QAAA,CAAA;AECZ,ACNA,EFYS,EDJP,GCIO,CAAM,IAAA,EAAsB;ACNrC,ACLA,IHOE,ACKS,AEZLw3K,GDKN,CAAA,GDOW,IAAI,GEZK,CFYL,CCPf,ADOoB,CEZG,EDKvB,CDOwB,CAAA,AEZGnB,KDK3B,ACLgC,CDKhC,ACLiChkG,kBDKjC,ECLqD,CDKrD,ACLsD,YDKtD;EDQE,AEbsD5kE,EHOt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AAAJ,CAAA,CAAA2E,WAAA,KAAAvE,MAAA,IAAAJ,CAAA,KAAAI,MAAA,CAAAP,SAAA,qBAAAG,CAAA,KAAA0C,OAAA,CAAA1C,CAAA;AAAA,AKiDA,IHKE,ACuBE,AE5BEgvL,KLjDN9oL,CG6EU,KAAA,GAAQ,AE5BE,GAAG,ILjDvB7F,AKiD2BktL,CLjD3B,EAAAztL,CG6EkB,AH7ElB,CG6E8B,AE5BE,CAAC4mD,GF4BH,CE5BO,CF4BD,AE5BE,GLjDtCrmD,CG6EoC,AH7EpC,AKiD0CktL,EF4BA,GE5BK,CF4BL,AE5BMvlI,CF4BD,IAAA,CH7E/CloD,CG6EqD,AH7ErD,IKiD2D,CAAC,EF4BA,CAAA,CE5BI,EAAE8uL,ELjDlEnrL,SAAA,CKiD8E,EAAE,GAAG,CAAC,EAAEirL,cAAc,CAAC;ALjDrG,AKkDAM,IHIE,ACwBE,KAAA,AH9EJ7oL,IG8Ea,CAAA,AE5BC,CAACm+B,EHIb,ACwBe,CDxBf,ACwBe,EAAG,EDxBlB,ACwBkB,CE5BG,CHIrB,AGJsBrrB,CF4BC,EH9EzBxZ,AKkD2B,CLlD3B,AKkD4B,CAAC,CF4BJ,AH9EzBE,CG8E+B,AH9E/B,CKkDgC,EAAEivL,EHIhC,CCwB6B,CDxBhB,CCwBwB,CAAA,EDxBxB,CAAA,ACwB4B,CH9E3ClvL,CG8E2C,AH9E3C,CKkD8C,CF4BC,CAAA,CE5BE,CF4BF,AE5BG,CLlDlDA,CG8EoD,AH9EpD,AKkDoD,CAAC,ELlDrDC,CAAA,AKkDwD,CLlDxD6E,AKkDyD,MLlDzD,EAAA9E,CAAA,UAAAM,CAAA,GAAAL,CAAA,CAAAD,CAAA,GAAAM,CAAA,CAAAY,UAAA,GAAAZ,CAAA,CAAAY,UAAA,QAAAZ,CAAA,CAAAa,YAAA,kBAAAb,CAAA,KAAAA,CAAA,CAAAc,QAAA,QAAAlB,MAAA,CAAAK,cAAA,CAAAR,CAAA,EAAA2G,cAAA,CAAApG,CAAA,CAAAqG,GAAA,GAAArG,CAAA;AAAA,AKmDAyvD,IHIE,CGJG,CF4BO,AE5BN/0C,GLnDNpU,AKmDS,CAAC0oL,CF4BE,CAAA,KDxBV,CAAA,GCwBU,CDxBV,ACwBoB,AH/EtBvvL,CAAA,CEuDE,AGJsB,CLnDxBE,AKmDyB,CF4BH,AH/EtB,CG+E2B,CH/E3BD,CAAA,GG+E2B,CAAM,EDxB/B,EAAY,CAAA,CAAA,ACwBmB,CH/EjCC,CG+EyC,AH/EzC,IAAAwG,CG+EyC,CAAM,CAAC,CAAA,CAAE,QAAA,CAAS,GH/E3D,CAAA1G,CG+EgE,AH/EhE,CG+EiE,AH/EjEI,CG+EiE,QH/EjE,EAAAF,CAAA,GAAAD,CAAA,IAAAyG,iBAAA,CAAA1G,CAAA,EAAAC,CAAA,GAAAE,MAAA,CAAAK,cAAA,CAAAR,CAAA,iBAAAqB,QAAA,SAAArB,CAAA;AAAA,IEyDE,ACuBE,KHhFJ2G,eAAA1G,CAAA,QAAAS,CAAA,GAAAoG,YAAA,CAAA7G,CAAA,gCAAAgD,OAAA,CAAAvC,CAAA,IAAAA,CAAA,GAAAA,CAAA;AAAA,AKqDA,IHIE,ACwBS,KHjFXoG,EGiFW,MDxBT,ACwBS,CDxBT,IAAA,AFzDF7G,CAAA,CEyDE,CFzDFC,CAAA,YEyDE,EAAe,IAAA,CAAA,CFzDjB+C,OAAA,CAAAhD,CAAA,MAAAA,CAAA,SAAAA,CAAA,MAAAD,CAAA,GAAAC,CAAA,CAAAU,MAAA,CAAAoG,WAAA,kBAAA/G,CAAA,QAAAU,CAAA,GAAAV,CAAA,CAAA8B,IAAA,CAAA7B,CAAA,EAAAC,CAAA,gCAAA+C,OAAA,CAAAvC,CAAA,UAAAA,CAAA,YAAAsD,SAAA,yEAAA9D,CAAA,GAAA8G,MAAA,GAAAC,MAAA,EAAAhH,CAAA;AADA,AKuDA,EF4BE,EDxBA,AGJIuvL,aHIJ,CAAA,CGJmB,GHInB,AGJsB,EHItB,EGJ0B1B,KAAK,CAAC7mI,IAAI,CHIpC,AGJqC,EHIvB,CAAA,CAAA,AGJ2B6mI,KAAK,CAACvlI,WAAW,CAAC,IAAI,EAAE4mI,YAAY,EAAE,GAAG,CAAC,EAAEF,cAAc,CAAC;AF6BtG,AHnFA,AKuDAO,IHKE,WGLa,CAAC3qJ,QAAQ,CAACrrB,GAAG,CAAC,GAAG,EAAE21K,YAAY,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC;AF4BzD,AHlFA,AKuDAn/H,IHIE,CGJG,CAAC/0C,CF2BN,CAAA,CE3BS,CAACu0K,EF2BV,GAAA,EDvBE,CAAA,CCuBF,GDvBE,EAAA,CGJuB,CAAC,SHIxB,EAAY,IAAA,CAAA;ACOZ,AHjEF,IE2DE,SCMA,CAFW,GDJX,CAAA,ACIW,EAEG,EDNd,EAAA,ICMc,CAAA,KDNd,EAAW,CAAA,CAAA;ACOX,AHjEF,AKuDA,IHIE,SCMA,CAHW,GDHX,CAAA,ACGW,EAGG,EDNd,EAAA,ECMc,CAAA,iBDNd,EAAqB,IAAA,CAAA;ACuBvB,AHjFA,AKuDA,IHIE,AF3DItoL,AKuDAuoL,KF0BG,GHjFK,EKuDE,CLvDFtoL,EKuDK,GF0BV,CAAY,AE1BE2mL,CLvDT,CAAA5mL,EGiFO,CE1BO,CF0BO,AE1BN+/C,IF0BM,AHjFrB,AKuDmB,CAAC,CF0Be,CHjFhC,EKuDqB6mI,CF0BW,EAAgB,AHjF3C,EKuDqB,CAAC54G,IF0BqB,EAA+B,UE1BpC,CAAC,GAAG,EAAE,GAAG,EAAEi6G,YAAY,EAAE,EAAE,CAAC,EAAEF,cAAc,CAAC;ALrDzG,AKsDAQ,EF0BQ,EDvBN,AFzDIroL,IGgFE,CHhFG,CKsDD,CAACy9B,CLtDA19B,CGgFH,GAAQ,CDvBd,CAAA,CFzDS,AKsDQ,CLtDRC,AKsDSoS,CF0BJ,CDvBd,ACuBoB,CE1BC,CHGrB,AGHsB,CLtDb,AKsDc,CF0BH,CAAK,CHhFb,AKsDc,EAAE21K,CF0BC,CAAA,KDvB7B,EAAc,CAAA,CAAA,CGH0B,GAAG,CAAC,EAAE,CAAC,CAAC;AAClDn/H,EF0BQ,AHjFQ3oD,EE0Dd,CGHG,CLvDe,AKuDd4T,EF0BE,AHjFc,CAAC,AKuDd,CAACw0K,GF0BF,GAAQ,IAAA,AE1BI,CAAC,EF0BE,IAAA,CAAK,UAAA;EACpB,AHlFiBnoL,EE0DvB,ICwBM,AHlFuB,EAAE,CAAC,ME0DhC,CAAA,CCwBM,GDxBN,ACwBM,CAAe,CDxBrB,GCwBqB,CAAK,UDxB1B,CCwB0B,CDxBX,ACwBuB,IAAA,CDxBvB,CAAA,CCwB8B,IAAA,CAAK,WAAA,CAAY,IAAA,GAAO,IAAA,CAAK,kBAAA,IAAsB,KAAA;AEzBlG,EF2BE,AHpFkCC,EE6DlC,GF7DuC,CGoFjC,CHpFmC,CAAC,GGoFpC,GAAqB,EAAA;AE1B7B,EF4BM,AHtFwCC,EE6D5C,AGHIkoL,EF4BA,EHtF8C,EAAE,CAAC,EGsFjD,EE5BW,CF4BD,CAAA,CE5BI,IAAI5B,KAAK,CAAC7mI,IAAI,CAAC,IAAI6mI,KAAK,CAAC54G,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAEi6G,YAAY,EAAE,EAAE,CAAC,EAAEF,cAAc,CAAC;AAC1GS,EL3DyDjoL,EE6DvD,AC0BE,GHvF0D,EAAE,CAAC,CGuF7D,AE5BO,CAACo9B,EF4BE,CAAA,ED1BZ,CAAA,EGFkB,CAACrrB,CHEnB,EAAA,AGFsB,CAAC,GAAG,EAAE21K,MHE5B,EAAa,IGF2B,CHE3B,CAAA,CGF8B,CAAC,EAAE,CAAC,CAAC;AAClDn/H,EF6BE,AHzFiEtoD,EE8DjE,CF9DoE,AK4DjE,CAACuT,CF6BJ,AHzFsE,EK4D/D,CAACy0K,CF6BC,CAAA,GAAI,CAAA,CD3Bb,CAAA,AC2BgB,CAAA,EE7BG,CHEnB,AC2BoB,AE7BA,EHEpB,GC2BoB,CAAM,MAAA,EAAQ,CAAA,EAAA,ED3BlC,AC2BuC,ED3BrB,CAAA,CAAA;AF9DsD,CAAC,GE+DzE,AC2BQ,MAAA,IAAA,GAAO,KAAA,CAAM,CAAC,CAAA;AHzFxB,AK6DA,IHCE,AC6BE,AH3FE/nL,IG2FE,CH3FG,GG2FH,AH3FGR,KE8DT,AC6Be,CD7Bf,CF9DS,CAAAQ,CG2FM,CD7Bf,CC6BqB,CD7BrB,CF9DS,GAAG,UE8DZ,EAAe,KAAA,CAAA;AGAjB,EL9DgBH,EE+Dd,AGDImoL,EF8BU,EH5FM,EAAE,CAAC,EG4FT,GAAA,CAAA,AE9BG,GAAG,IAAI7B,KAAK,CAAChkG,oBAAoB,CAAC;EL9D1BpiF,AK8D4Bwd,EHCrD,CF/D4B,CG6FxB,CH7F0B,AK8D4B,CL9D3B,CK8D6B,IF+BxD,ID9BJ,AC8Be,CD9Bf,IAAA,EAAA,IC8Be,GAAc,OAAA,CAAQ,SD9BrC,CC8BqC,CD9BZ,KAAA,CAAA;AGD4C,CAAC,CL9DrCtd,AK8DsC,EHEvE,AC6BqC,CAAA,MAC5B,AH9FiC,EAAE,CAAC;AK+D/C,EL/DiDC,EEgE/C,AGDI+nL,EFgCA,GEhCK,GFgCC,AEhCE,EL/D+C,CG+FjD,CH/FmD,AK+D7C9B,CHChB,CAAA,AC+BgB,GEhCK,CHCrB,AGDsB7mI,EHCtB,EGD0B,CAAC,CFgCX,CAAW,EEhCI6mI,EFgCJ,EAAM,CEhCG,CAACvlI,GFgCJ,EAAO,ID/BxC,EAAuB,AGDyB,CFgCR,AEhCS6mI,EFgCA,ED/B1B,CAAA,IC+B0B,CEhCU,CFgCD,CEhCGC,GFgCC,CAAA,OEhCU,EAAE,GAAG,CAAC,EAAEM,aAAa,CAAC;AL/D/B,AKgEjEC,CLhEkE,GEkEhE,CGFG,CFgCC,AEhCA/qJ,IFgCI,GAAA,CEhCI,CFgCC,AEhCArrB,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;AL/DjC,AKgEAw2C,IHCE,AFjEIloD,CKgED,CAACmT,EFgCa,CEhCV,CAAC20K,KFgCS,AEhCJ,CLhEG,AKgEF,GFgCG,AHhGDzoL,GGgGC,CAAI,GHhGL,CAAAW,GGgGK,GAAU,MHhGf,CGgGe,CAAQ,CHhGpB,CAAC,WGgGmB;AH/FzC,IEgEE,AFhEIC,IGgGQ,KAAA,CAAA,EHhGI,CEgEhB,CAAA,ACgCY,CAAK,AHhGDZ,GEgEhB,ACgCiB,CAAI,CDhCrB,EFhEgB,CGgGS,AHhGTY,CGgGS,EDhCzB,EAAO,OFhES,GAAG,CAAC;AACtB,AKgEA,ILhEMC,EE+DK,ACiCL,IDjCK,EAAM,KF/DE,GAAAb,GE+DF,IF/DE,CAAAa,aAAA,GAAG,CAAC;AACvB,AKgEA,IFgCI,AHhGEC,AKgEA4nL,EHFwB,EAAA,EAAI,GGEnB,GAAG,GHFgB,CGEZ/B,CLhEC,GAAA3mL,CKgEI,CAAC8/C,IAAI,CLhET,AKgEU,CLhEVh/C,GKgEc6lL,KAAK,CAACvlI,QLhEpB,GAAG,AKgE4B,CLhE3B,AKgE4B,EAAE,EAAE2mI,UAAU,EAAE,GAAG,CAAC,EAAED,cAAc,CAAC;AL/D5F,AKgEAY,EFgCE,EHhGI3nL,EE6DuC,GGGpC,CAAC28B,CHHmC,EAAO,KF7DhC,AKgEF,CAACrrB,ELhECrS,CKgEE,CAAC,EHH6B,AGG3B,EAAE+nL,CLhEP,CAAAhnL,QKgEiB,GAAG,CAAC,ELhErB,AKgEuB,CAAC,ELhErB,CAAC,AKgEuB,CAAC;AL/DhD,AKgEA8nD,EFiCS,EHjGH7nD,CKgED,CHJ6D,AGI5D8S,GFiCG,AEjCA,CAAC40K,EHJwD,EAAQ,ACqCjE,EHjGS,GAAA1oL,AKgEC,CAAC,MLhEF,CAAAgB,YAAA,GAAG,CAAC;AGkGtB,AHjGA,IE2D0E,AF3DpEC,CE2DoE,CAAA,cF3DpD,GAAAjB,OAAA,CAAAiB,gBAAA,GAAG,CAAC;AGmG1B,AHlGA,AKgEA,IHJE,AF5DIC,KGkGG,OHlGS,GGkGT,AHlGSlB,CGmGhB,IAAA,EACA,AHpGgB,CAAAkB,IGoGhB,EACA,MHrGgB,CGqGhB,EACA,AHtGmB,CAAC,MGsGpB,EACA,IAAA,EACkD;AHvGpD,AKgEA,EFwCE,ED7CA,AF3DIC,AKgEAwnL,IFwCE,KAAA,AHxGO,GGwGC,AHxGD3oL,CE2Db,CAAA,EC6Cc,CAAK,CD7CnB,AGKsB,CLhET,CE2Db,AF3DamB,CKgEY,EFwCN,CAAO,CExCGwlL,GFwCC,CAAA,AHxGjB,CKgEqB,CAAC7mI,CLhEnB,CGwGmB,AHxGlB,CE2DjB,CGKuC,CHDlC,AGCmC,CFwCL,CAAK,EExCI6mI,IFwCJ,CAAO,AExCE,CAACvlI,EFwCA,CAAA,QExCW,CAAC,IAAI,EAAE4mI,YAAY,EAAE,GAAG,CAAC,EAAEF,cAAc,CAAC;AL/DzG,AKgEAa,EFyCE,EHzGIvnL,EE+DF,AC0CE,CAAC,GD1CH,EAAM,AC0CH,AHzGO,EGyGA,CHzGApB,GKgEI,CAAC09B,GLhEL,CAAAt8B,CE+DJ,CAAM,EGCW,CAACiR,GHDZ,AF/DF,AKgEiB,CAAC,ELhEf,CAAC,CKgEkB,EAAE21K,YAAY,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC;AL/D7D,AKgEAn/H,IFyCI,AHzGExnD,CKgED,CHDD,AGCEyS,GAAG,CAAC60K,CFyCN,CD1CA,AC0CQ,ED1CA,AF/DI,GGyGJ,AHzGI3oL,CGyGE,MHzGF,CAAAqB,CE+DJ,CAAM,CGCU,CAAC,GHDX,GF/DF,GAAG,CAAC,IGyGF,GAA4B,IAAA,GAAO,mCAAA,GAAsC,IAAA,CAAK,UAAA,GAAa,GAAG,CAAA;AHxGhH,IGyGI,AHzGEC,EE+DF,KAAA,EAAO,CF/DK,GAAAtB,OAAA,CE+DL,AF/DKsB,CE+DC,SF/DD,GAAG,CAAC;AACpB,AKgEA,EFyCE,ED3Ce,AF9DXC,CE8DW,CAAA,YF9DG,GAAAvB,OAAA,CAAAuB,cAAA,GAAG,CAAC;AACxB,AKgEA,EF0CQ,ED1CN,AFhEIC,AKgEAonL,IF0CE,IAAA,GAAO,GE1CK,CF0CD,CH1GG,CKgEC,ELhED5oL,EKgEK2mL,KLhEL,AKgEU,CLhEVnlL,AKgEWs+C,IF0Cd,AE1CkB,CF0ClB,AE1CmB,CF0CnB,GE1CuB6mI,KAAK,CAAC54G,CLhE1B,GAAG,CAAC,WKgEsC,CAAC,GAAG,EAAE,GAAG,EAAEi6G,YAAY,EAAE,EAAE,CAAC,EAAEF,cAAc,CAAC;AL/D7G,AKgEAc,EF2CE,ED5CA,AF/DInnL,EG2GA,CAAA,EAAG,CAAA,EAAG,EE3CE,CF2CF,AE3CGi8B,EHDb,AC4Ce,CD5Cf,EC4Ce,ED5Cf,AC4CoB,CH3GG,AKgEF,CHDrB,AGCsBrrB,EF2CF,AH3GGrS,CKgEE,CF2CC,AE3CA,IF2CA,AE3CI,CHD9B,AF/DuB,CG2GS,AH3GTyB,AKgESumL,CHE3B,GCyC2B,EAAM,IAAA,EE3CM,GAAG,CAAC,EAAE,CLhE3B,AKgE4B,CAAC,ELhE1B,CAAC;AAC7B,AKgEAn/H,EF4CE,EH5GInnD,CKgED,CHCI,AC2CH,AE5CAoS,GHCG,AGDA,CAAC80K,CHCI,AC2CR,CAAM,CAAA,EAAG,KH5GO,GEiER,AFjEQ5oL,CEiEF,AGDI,CAAC,KHCL,AFjEE,CAAA0B,gBAAA,GAAG,CAAC;AAC1B,IG4GU,AH5GJC,EEgEsB,GAAA,CC4ClB,CD5CuB,MC4CvB,CH5GU,EG4GA,CH5GA3B,EEgEa,CAAM,CC4CnB,CAAM,EH5GN,CAAA2B,WG4GM,GH5GN,EG4GyB,CH5GtB,CAAC,GG4GqB,CAAM,cAAA,GAAiB,KAAA,CAAM,CAAA,CAAE,KAAA,CAAM,GAAG,CAAA,CAAA;AH3GrF,AKgEA,IHDuC,AC8CnC,AH7GEC,CE+DiC,CAAA,GC8CnC,IAAS,CAAA,CH7GI,EG6GA,CAAA,AH7GA5B,EG6GG,CAAA,GAAI,CH7GP,CAAA4B,KG6GO,CAAQ,KH7Gf,CG6Ge,EAAQ,AH7GpB,CG6GoB,EH7GjB,CG6GqB,CAAA,GAAK;AH5GjD,AKgEA,IHDE,AF/DIC,AKgEAgnL,EF6CM,MAAA,KD9CV,AGCiB,CHDjB,AC8CU,EH7GU,AKgEA,CF6CD,CD9CnB,CF/DoB7oL,CE+DpB,AGCwB2mL,IF6CL,CAAQ,AE7CE,CF6CF,AH7GP,AKgEUhkG,CLhEV9gF,CG6GU,CD9C9B,AC8C8B,CD9C9B,aF/DoB,GAAG,AKgE2B,CAAC,ELhEzB;AAC5B,EK+DuDkc,EHArD,AF/DIjc,EG8GA,CE/CsD,EAAE,KF+ChD,GD/CZ,CAAA,EC+CY,ED/CZ,EAAA,GF/D2B,GAAA9B,KE+D3B,CAAA,CF/D2B,CAAA8B,uBAAA,GAAG,GAAG;AACnC,AK8DuE,CAAC,CAAC,CAAC,CHCxE,AF/DIC,AK8DqE,IFgDnE,KAAK,EH9GI,CG8GJ,CD/CX,CAAA,AF/De/B,IE+Df,EAAA,CF/De,CAAA+B,KE+Df,CAAA,KF/De,GAAG,GAAG;AACvB,AK8DA,IHEE,AFhEIC,AK8DA8mL,MFgDI,CAAA,GAAI,CH9GG,EK8DE,CL9DF9oL,EK8DK,EFgDR,CAAS,CEhDG2mL,CL9DT,CAAA3kL,GK8Dc,CFgDR,AEhDSo/C,CFgDD,CAAA,EAAG,CAAC,CAAA,CH9GlB,EG8GsB,CH9GnB,CK8DuB,CAAC,CL9DrB,CG8GgB,CEhDQ,EFgDA,AEhDE,GAAG,EAAG,EFgDR,CEhDW,CAAC,CAAC,CAAC;AL7D7D,AK8DA,IHCE,AF/DIn/C,AK8DA8mL,KAAK,CFgDD,CAAA,CEhDI,EFgDA,AH9GE,EK8DEpC,CHChB,AF/Dc3mL,CE+Dd,GGDqB,CHCrB,AC+CY,AEhDU8/C,CFgDD,CD/CrB,AF/Dc,CAAA79C,CK8DY,CAAC6mL,GFgDN,CAAQ,CAAA,EAAG,CAAC,AH9GnB,CG8GmB,EH9GhB,CG8GoB,CEhDG,CL9DpB,CK8DsBD,EFgDL,ED/CrC,CC+C6C,CD/CjB,IAAA,CAAA,CC+CiB,CEhDU,CAAC;AL7D1D,AK8DAE,IHEE,AFhEI7mL,CK8DD,CAACw7B,IFiDS,GH/GA,CG+GA,AEjDD,CFiDC,AEjDArrB,CL9DArS,CEgEb,CAAA,AGFgB,CAAC,CAAC,CFiDL,CD/Cb,AC+CoB,AEjDA,CFiDA,AH/GP,CEgEb,AFhEakC,CG+GU,CAAC,AEjDA,CFiDA,CEjDE,CAAC,GAAG,CL9DjB,AK8DkB,GL9Df,GEgEhB,AFhEmB,CEgEnB;AF/DF,AK8DA2mD,IHEE,AFhEI1mD,CK8DD,CAAC2R,GAAG,CFkDC,AElDAi1K,KAAK,CAAC,CHEd,CAAA,AFhEkB,GAAA/oL,CEgElB,EAAA,IFhEkB,CAAAmC,cEgElB,AFhEkB,CEgElB,EFhEqB,GAAG;AAC1B,IEgEE,AFhEIC,IGiHE,KAAK,GAAA,CDjDX,CAAA,IAAA,EAAA,EFhE0B,GAAApC,OAAA,CAAAoC,EEgE1B,CAAA,mBFhE0B,GAAG,GAAG;AAClC,AK8DA,IHEE,AFhEIC,MGiHI,CAAA,GAAI,GDjDZ,CAAA,AFhEkB,GAAArC,CEgElB,ACiDY,CAAS,CDjDrB,IFhEkB,CAAAqC,CGiHG,CAAQ,CAAA,EAAG,CAAC,CAAA,GAAI,IDjDrC,AFhEkB,CEgElB,ACiDqC,EHjHhB,CGiHwB,EHjHrB,KGiHqB;AHhH/C,AK8DA,IHEE,AFhEIC,AK8DA0mL,MFmDI,CAAA,GAAI,CEnDG,EHEf,CAAA,AGFkB,IHElB,ACiDY,AEnDUrC,CFmDD,CDjDrB,EFhE0B,CK8DC,CAAChkG,CL9DF3iF,CGiHL,CAAQ,CAAA,EAAG,CAAC,CAAA,AHjHP,CEgE1B,AFhE0BsC,CEgE1B,CCiDqC,KAAA,GAAQ,CEnDG,CAAC,KFmDJ,KHjHnB,GAAG,GAAG;AAClC,EK6DqDyb,EHInD,AFjEIxb,GK6DoD,EAAE,CFqD7C,IAAA,CAAA,GHlHK,GGkHL,AHlHKvC,CGkHE,CAAA,EAAG,CAAC,CAAA,CHlHN,CAAAuC,cAAA,GAAG,GAAG;AAC1B,AK4DqE,CAAC,CAAC,EHIrE,AFhEIC,MGmHI,ODnDR,CAAA,IAAA,EAAA,EFhE0B,GAAAxC,OAAA,CAAAwC,CEgE1B,CAAA,oBFhE0B,GAAG,GAAG;AAClC,AK4DA,IHKE,AFjEIC,AK4DAwmL,IFwDE,KAAK,EExDI,CFwDJ,CDnDX,CAAA,AFjEkB,AK4DA,GL5DAjpL,CEiElB,AGLsB2mL,EHKtB,GGL2B,CL5DT,AK4DU54G,CL5DVtrE,cEiElB,AFjEkB,CEiElB,AGL4C,CAAC,CL5DxB,GAAG,AK4DyB,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AL3DtE,AK4DA,IHKE,AFjEIC,AK4DAwmL,MFwDI,GAAA,GAAM,AExDE,CHKhB,CAAA,CGLmB,CACjB,EHIF,EAAA,ACmDc,AEvDRvC,CFuDiB,CHpHG,GAAA3mL,AK6Df,CAAC8/C,EFuDW,CAAQ,CAAA,AEvDf,CAACmpI,CFuDiB,AHpHR,CGoHS,AHpHTvmL,CGoHS,GAAI,KAAA,AEvDX,CHI5B,CAAA,AGJ8BsmL,CFuDiB,OAAA,GHpHrB,AK6De,CAAC,EL7Db,GAAG;AAClC,AK4D8C,IHK5C,AFjEIrmL,MGoHI,GAAA,GAAM,CDnDd,CAAA,IAAA,EAAA,ACmDc,CAAS,CHpHG,GAAA3C,GGoHH,CAAQ,CAAA,CDnD/B,CAAA,ACmDkC,AHpHR,CGoHS,AHpHT2C,CGoHS,GAAI,KAAA,GAAQ,OAAA,GHpHrB,GAAG,GAAG;AAClC,AK4DI,IHKF,AFjEIC,AK4DE+jL,KAAK,CFwDH,AExDI7mI,IFwDJ,AExDQ,CAACmpI,EHKjB,ACmDe,CDnDf,IAAA,CFjEuB,CEiEvB,CCmDe,CAAS,AHpHDjpL,AK4DK,EAAEgpL,GHK9B,CAAA,CCmDwB,AHpHD,CGoHS,AHpHTpmL,CGoHS,EAAG,CAAC,CAAA,AExDK,CAAC,EFwDF,KAAA,GAAQ,GHpHzB,GAAG,CGoHsB,EHpHnB;AAC/B,AK2D8C,IHM5C,AFjEIC,MGoHI,IAAA,GDnDR,ACmDe,CDnDf,IAAA,EAAA,CCmDe,CAAS,KHpHO,CEiE/B,CAAA,ACmDwB,CAAQ,AHpHD7C,CGoHC,EAAG,CAAC,CAAA,EHpHL,CGoHS,AHpHT6C,KGoHS,GAAQ,OAAA,YHpHjB,GAAG,GAAG;AACvC,AK2DI,IHMF,AFjEIC,AK2DE6jL,KAAK,CF0DH,AE1DI7mI,IF0DJ,AE1DQ,CF0DH,AE1DImpI,EHMjB,CAAA,IAAA,CFjEuB,CEiEvB,EFjEuBjpL,AK2DK,EAAEgpL,GF0DjB,CAAiB,CDpD9B,AFjEuB,CEiEvB,AFjEuBlmL,EGqHO,EAAM,CE1DK,CAAC,EF0DN,EAAM,GAAA,EAAK,GAAG,CAAA,AHrH3B,GAAG,GAAG;AAC/B,AK0D8C,IHO5C,AFjEIC,MGsHI,ODrDR,CAAA,IAAA,EAAA,OFjE+B,EEiE/B,CAAA,AFjE+B/C,OAAA,CAAA+C,2BAAA,GAAG,GAAG;AACvC,AK0DI,IHSF,AFnEIC,AK0DE2jL,IF6DA,CE7DK,CAAC7mI,GF6DD,CHvHG,AK0DE,CAACmpI,CF6DN,CHvHGjpL,OAAA,CAAAgD,CK0Dc,EAAEgmL,OL1DhB,GAAG,CAAC,AK0DuB,CAAC,CAAE;ALzD9C,AKyD8C,CAC7C,GHQC,AFlEI/lL,MGuHI,GAAA,EHvHO,CGuHD,CDrDd,CAAA,AFlEejD,IEkEf,EAAA,ACqDc,CAAS,AHvHR,CAAAiD,MGuHQ,CDrDvB,ACqD+B,CDrD/B,ACqD+B,EAAG,CAAC,AHvHpB,CGuHoB,EHvHjB,CGuHqB,AHvHpB,KGuHoB,GAAQ,OAAA;AHtHjD,IEmEE,AFnEIC,MGuHI,GAAA,AHvHK,GGuHC,AHvHDlD,OAAA,CGuHC,AHvHDkD,CGuHU,OAAA,CAAQ,AHvHlB,CGuHkB,EAAG,AHvHlB,CGuHmB,AHvHlB,CGuHkB,GAAI,KAAA,GAAQ,OAAA;AHtHjD,AK0DA,IHQE,AFlEIC,MGuHI,IAAA,GDrDR,ACqDe,CDrDf,AFlEkB,GAAAnD,CEkElB,EAAA,CCqDe,CAAS,EHvHN,CAAAmD,IGuHM,CDrDxB,ACqDgC,CDrDhC,ACqDgC,EAAG,CAAC,CAAA,GAAI,CHvHtB,GAAG,CGuHmB,AHvHlB,GGuH0B,OAAA;AHtHlD,AK0DA,IHSE,AFnEIC,AK0DA+lL,MF6DI,IAAA,AHvHM,CK0DC,EF6DA,AHvHDnpL,CK0DI,GAAG,CAAC,CAAC,CL1DT,CGuHC,AHvHDoD,CGuHU,OAAA,CAAQ,CAAA,AHvHlB,EGuHqB,CAAC,AHvHnB,CGuHmB,AHvHlB,GGuHsB,KAAA,GAAQ,OAAA;AHtHlD,AK0DA,IHQE,AFlEIC,AK0DA+lL,MF6DI,IAAA,AE7DM,GHQd,ACqDe,AE7DE,CHQjB,EGRoB,CL1DC,AK0DA,CHQrB,AGRuB,EHQvB,AFlEqBppL,CGuHN,CAAS,KHvHH,CAAAqD,CGuHG,CDrDxB,ACqDgC,CDrDhC,ACqDgC,EAAG,CAAC,CAAA,GAAI,KAAA,EHvHnB,CGuH2B,EHvHxB,CAAC,IGuHuB;AHtHlD,AK0DA,IHSE,AFnEIC,AK0DA8jD,MF6DI,CE7DG,GF6DH,AE7DM+hI,EL1DE,CGuHD,EHvHCnpL,MGuHD,AE7DU,CF6DD,AHvHR,CAAAsD,CK0DY,CAAC,GAAG,CF6DR,CAAQ,CAAA,AE7DG,CAAC,CF6DD,AE7DE,CF6DD,CAAA,AHvHpB,GGuHwB,AHvHrB,CAAC,IGuHoB,GAAQ,OAAA;AHtHlD,AK0DA,IHQE,AFlEIC,AK0DA8lL,MF8DI,CE9DG,GF8DH,AE9DMD,CF8DD,EDtDb,AFlEiB,CEkEjB,EFlEiBppL,EEkEjB,EAAA,AGRwB,GL1DP,AK0DU,CF8Dd,AHxHIuD,AK0DW,CF8DD,EE9DI,EF8DJ,CDtD3B,AGRkC,CHQlC,ACsDiC,AE9DE,CAAE,GF8DJ,EAAM,AHxHtB,GAAG,CGwHmB,AHxHlB,EGwHwB,IAAA,EAAM,GAAA,EAAK,GAAG,CAAA;AHvH7D,AK0DA,IHaI,AFvEEC,AK0DA8lL,IHaF,CAAK,CCkDC,AE/DE,GAAG,EHaN,EGbU,CHaD,EGbI,CL1DC,AK0DA,CAAC,CAAe,CHarB,AFvEKtpL,OAAA,CAAAwD,iBAAA,GAAG,CAAC;AAC3B,IEuEI,AFvEEC,EGyHA,EDlDF,CAAK,OFvES,GEuET,AFvESzD,GEuEI,IFvEJ,CAAAyD,KEuEI,OFvEJ,GAAG,CAAC;AACtB,AK0DA,IHeS,ACgDL,AHzHEC,IEyEG,CAAA,OAAA,AFzES,GEyEC,AFzED1D,IEyEC,CAAK,EFzEN,CAAA0D,GEyEM,CAAO,KAAA,CAAM,CAAA,CFzEnB,GAAG,CAAC;AACtB,AK0DAwlL,EF+DE,EDhDE,AFzEEvlL,IEyEF,CAAK,GGfG,CAAC,CAAC,CAAC,CAAC+5B,CL1DG,CEyEV,EFzEU19B,CEyEE,GGfG,CHeH,AGfIqS,CHeC,CFzEP,CAAA1O,AK0DS,CAAC,CAAC,EHeJ,CAAO,AGfAyjD,OAAO,CHeP,AFzEd,CEyEuB,AGfAkiI,EL1DpB,CAAC,EEyEmB,CAAM,AGfA,CHeA,CGfE,CAAC,GAAG,GAAGD,OAAO,CAAC,CAAC,CAAE;ALzDpE,AK0DAH,EFgEE,EDjDO,AFzEHtlL,IEyEG,CAAA,ACiDA,GEhEG,CAAC,CHeJ,AGfK,CAAC,CAAC85B,CHeC,IAAA,AFzEM,CEyED,EFzEC19B,AK0DC,CAACqS,GHeH,AGfM,CHeC,AGfA,CAAC,CL1DP,CAAAzO,CEyEM,AGfIwjD,OAAO,EAAEkiI,MAAM,CL1DzB,CK0D2B,CAAC,CL1DzB,CAAC,CK0D2B,GAAGD,OAAO,CAAC,CAAC,CAAE;ALzDpE,AK0DAH,IHoBS,AC2CE,AHzHLrlL,IE8EG,CAAA,EC2CE,CE/DC,CF+DQ,AE/DP,CAAC,CAAC,CAAC65B,EF+DI,CAAM,EAAA,CD3CjB,CF9EgB,CGyHM,AE/DP,CHoBC,AGpBArrB,CL1DArS,EK0DG,CF+DG,AE/DF,CAAC,CHoBS,EF9Ed,AK0DQonD,CL1DRvjD,ME8Ec,AGpBC,CHoBS,CGpBPylL,EHoBO,IGpBD,EAAE,CAAC,EL1D1B,CK0D6B,EL1D1B,CAAC,AK0D4BD,OAAO,CAAC,CAAC,CAAE;ALzDpE,AK0DAH,IHqBS,ACyC6B,AHxHhCplL,IE+EG,CAAA,GGrBG,CAAC,CAAC,CAAC,CAAC45B,KL1DO,GAAA19B,AK0DC,CAACqS,CHqBhB,EGrBmB,CHqBC,AGrBA,CAAC,CL1DP,CAAAvO,CK0DUsjD,EHqBU,KGrBH,EAAEkiI,EHqBC,CAAU,GGrBL,CL1DzB,CE+E8B,AGrBH,CAAC,CL1DzB,CAAC,CK0D2B,GAAGD,OAAO,CAAC,CAAC,CAAE;ALzDpE,AK0DA,EF6D2C,CAAA,CDvClC,AFhFHtlL,IEgFG,CAAA,aAAA,GAAiB,AFhFC,GAAA/D,EEgFD,IAAwB,CFhFvB,CAAA+D,qBAAA,GAAG,CAAC;AGwH/B,AHvHA,AK0DAmlL,IL1DMllL,EEiFA,IAAI,EGvBE,CHuBF,AGvBGtI,GHuBG,IGvBI,CL1DG,AK0DF,GL1DEsE,OAAA,AK0DDupL,CHuBN,AFjFOvlL,CEiFU,CGvBR,IHuBQ,EAAO,CAAA,GAAI,IAAA,CAAK,AFjF1B,EEiF4B,CAAA,AFjFzB,CAAC;AAC3B,EKyDyB,ELzDnBC,EEiFA,GGxBwB4kD,CHwBpB,IGxByB,CAAC/0C,GLzDhB,AKyDmB,CAACy1K,CHwB9B,CFjFUvpL,CKyDuB,CHwBpB,AGxBqB,KLzDxB,CAAAiE,GEiFG,CAAU,GAAA,OFjFb,GAAG,CAAC;AACxB,AKwD4C,EAAC,ELxDvCC,EEmFA,IAAI,UAAA,EFnFc,CEmFD,CAAA,CFnFClE,CEmFE,MFnFF,CAAAkE,GEmFE,IAAc,CAAA,GAAI,IAAA,CAAK,EAAA,AFnFzB,GAAG,CAAC;AAC5B,IAAMC,EEmFA,IAAI,GAAA,GAAM,CAAA,EAAG,CFnFG,EEmFH,CFnFGnE,GEmFI,CAAA,GAAI,AFnFR,CAAAmE,GEmFQ,CAAK,EAAA,UFnFb,GAAG,UAAU;AACnC,AKwDA,ILxDMC,EEmFA,IAAI,OAAA,GAAU,AFnFE,GAAApE,CEmFF,CAAK,GAAA,CAAI,CFnFP,CAAAoE,CEmFO,GAAM,UAAU,CAAA,CFnFvB,GAAG,UAAU;AAEnC,AKuDA,ILvDMC,AKuDAmlL,EH2BA,IAAI,CAAA,EFlFK,CEkFD,EFlFCxpL,AKuDG,EH2BJ,CAAK,AG3BE,EH2BF,EFlFJ,AKuDU2mL,CH2BD,AFlFTtiL,IKuDe,CAACs+E,EH2BP,EFlFT,CEkFmB,EFlFhB,GAAG,EEkFa,EAAS,MG3BQ,CAAC;ALtDpD,EKsDsD5kE,ELtDhDzZ,GKsDqD,CH4BnD,CG5BqD,GH4BjD,GAAA,GAAM,OFlFS,GEkFT,AFlFStE,EEkFG,KFlFH,CAAAsE,qBAAA,GAAG,GAAG;AACjC,AKqDsE,CAAC,CAAC,ELrDlEC,MEkFI,GAAA,IAAO,CAAA,GAAI,IAAA,AFlFM,CEkFD,EAAA,AFlFCvE,OAAA,CAAAuE,qBAAA,GAAG,GAAG;AACjC,AKqDA,ILrDMC,AKqDAilL,IH4BoB,CAAA,MACX,CG7BG,GAAG,IAAI9C,KAAK,CAACvlI,OLrDO,GAAAphD,CKqDI,CAAC,GAAG,ELrDR,AKqDU,CLrDVwE,EKqDa,EAAE,IAAI,CAAC,uBLrDpB,GAAG,GAAG;AAC5C,AKqDA,ILrDMC,AKqDAilL,IAAI,EH6BA,CG7BG,IAAI/C,KH6BP,AG7BY,CAAC7mI,GH6BC,CAAA,AG7BG,CAAC2pI,EH6BA,IAAA,CAAK,EAAA,CFlFK,EKqDE,CLrDFzpL,CKqDIwpL,MLrDJ,CAAA/kL,KKqDgB,CAAC,0BLrDjB,GAAG,GAAG;AAC5C,AKqDAilL,ILrDMhlL,AKqDF,CAACg5B,GH6BG,KG7BK,CAACrrB,GAAG,CAAC,IAAI,EAAE,GLrDK,AKqDF,EAAE,CLrDArS,AKqDC,GAAG,CAAC,GLrDL,CAAA0E,uBAAA,GAAG,GAAG;AACnC,AKqDAmkD,ILrDMlkD,CKqDD,CH6BC,AG7BAmP,GAAG,CAAC41K,IAAI,CAAC,GLrDK,GAAA1pL,OAAA,CAAA2E,cAAA,GAAG,IAAI;AAC3B,AKsDA,ILtDMC,AKsDA+kL,EH4BA,cAAA,CAAe,AG5BE,ELtDE,CEkFJ,AG5BK,ELtDD3pL,CEkFE,CG5BG2mL,EH4BH,GAAM,AFlFR,AKsDU,CLtDV/hL,AKsDW+9E,SH4BH,UFlFR,CKsD+B,CAAC,CLtD7B,IAAI;AAChC,EKqD2D5kE,ELrDrDlZ,EEkFA,CG7B0D,EAAE,EH6B5D,CAAM,MAAA,CAAO,CAAA,MFlFS,GAAA7E,OAAA,CAAA6E,sBAAA,GAAG,IAAI;AACnC,AKoD2E,CAAC,CAAC,EH6B1D,AFjFbC,CEiFa,YFjFA,GAAA9E,OAAA,CAAA8E,aAAA,GAAG,IAAI;AAC1B,AKoDA,IH+BS,AFnFHC,AKoDA6kL,IH+BG,CAAA,YG/Bc,GAAG,EH+BjB,EG/BqBjD,CH+BA,CFnFE,GAAA3mL,AKoDG,CH+BL,AG/BMohD,IH+BkB,EFnFtB,CAAAr8C,IKoDe,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,MLpD/B,GAAG,IAAI;AACvC,AKoDA,ILpDMC,AKoDA6kL,EHgCA,IAAI,GGhCK,EHgCL,CGhCQ,EHgCA,EGhCIlD,KAAK,CAAC7mI,ILpDI,AKoDA,CAAC8pI,ELpDD5pL,CEoFd,CAAiB,KAAA,AFpFH,CAAAgF,CEoFU,CAAA,GAAI,EGhCI,EHgCJ,AGhCM2kL,CHgCD,EAAE,CAAA,aFpFrB,AKoDqC,CAAC,ELpDnC,IAAI;AACvC,AKoDAE,ILpDM5kL,EEoFA,GGhCG,CHgCC,AGhCAy4B,QAAQ,CAACrrB,GHgCT,AGhCY,CAAC,EHgCE,EGhCE,ELpDI,AKoDF,GLpDErS,AKoDC,EHgCP,AGhCS,CHgCC,AGhCA,GAAG,CLpDP,AKoDQ,CHgCJ,AFpFJiF,yBAAA,GAAG,IAAI;AACtC,AKoDA4jD,ILpDM3jD,CKoDD,CHkCC,AGlCA4O,GAAG,CHkCC,AGlCA+1K,SAAS,CAAC,EHkCV,GAAe,CAAA,EAAG,CFtFG,GAAA7pL,OAAA,CEsFH,AFtFGkF,IEsFa,CAAA,GAAI,IAAA,CAAK,EAAA,UFtFtB,GAAG,IAAI;AACtC,IAAMC,EEsFA,IAAI,KAAA,CFtFQ,EEsFA,CAAA,AFtFAnF,EEsFG,KAAA,AFtFH,CAAAmF,GEsFY,CAAA,GAAI,IAAA,CAAK,AFtFrB,EEsFqB,CFtFlB,IAAI;AACzB,AKoDA,ILpDMC,EEsFA,IAAI,SAAA,GAAY,IAAA,CAAK,EFtFI,CEsFJ,CAAI,CFtFApF,IEsFA,GAAQ,AFtFR,CAAAoF,WEsFoB,CAAA,aFtFpB,GAAG,IAAI;AACtC,AKoDA,ILpDMC,AKoDAykL,EHkCA,IAAI,CAAA,GAAI,IAAA,CAAK,EAAA,CGlCK,EHkCA,CGlCG,ILpDI,AKoDAnD,GLpDA3mL,CEsFP,CGlCY,CAAC2iF,CHkCD,GFtFL,CAAAt9E,KEsFK,EAAW,QGlCU,CAAC,SLpD3B,GAAG,IAAI;AACtC,EKmD4D0Y,ELnDtDzY,GKmD2D,CHmCzD,CGnC2D,GHmCvD,KAAA,GAAQ,QFtFU,GAAAtF,CEsFV,EAAc,IFtFJ,CAAAsF,wBAAA,GAAG,IAAI;AACrC,AKkD4E,CAAC,CAAC,CAAC,CLlDzEC,AKkD0E,MHoCtE,KAAA,IAAS,CAAA,GAAI,IAAA,CAAK,AFtFE,EEsFF,CFtFEvF,OAAA,CAAAuF,wBAAA,GAAG,IAAI;AACrC,AKkDA,ILlDMC,AKkDAukL,IHmCsB,CAAA,KGnCZ,CHoCD,EGpCI,GLlDG,CKkDCpD,ELlDD3mL,GKkDM,CAAC8/C,GLlDP,CAAAt6C,AKkDW,CAC7B,IAAImhL,KAAK,CAACvlI,KLnDQ,GAAG,GKmDA,CLnDI,AKmDH,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;ALlDxC,AKkD0C,ILlDpC37C,MEsFI,EFtFI,GAAAzF,OEsFJ,AFtFI,CAAAyF,GEsFY,CAAA,GAAI,CFtFhB,GEsFgB,AFtFb,CEsFkB,EAAA,CFtFd;AACrB,AKkDIqkL,ILlDEpkL,IEsFE,KFtFO,GAAA1F,EKmDf,CAAC,ILnDc,CAAA0F,SAAA,GAAG,IAAI;AACtB,IAAMC,EEsFA,eFtFiB,GAAA3F,OAAA,CAAA2F,iBAAA,GAAG,IAAI;AAC9B,AKmDA,ILnDMC,EEsFA,KFtFO,GAAA5F,MEsFP,CAAe,AFtFR,CAAA4F,IEsFQ,GAAQ,AFtFhB,GAAG,EEsFa,EFtFT,CEsFiB,YAAA;AFrFrC,AKmDA,ILnDMC,EEsFA,KAAA,CAAM,MAAA,CAAO,AFtFE,CEsFF,EFtFE7F,OAAA,CAAA6F,eAAA,GAAG,IAAI;AAC5B,AKmDAkkL,IHkCmB,AFrFbjkL,CEqFa,KGlCT,CAAC43B,ELnDI,GAAA19B,GKmDI,CAACqS,GLnDL,AKmDQ,CLnDRvM,AKmDS,IAAI,EAAE,GLnDf,AKmDkB,EAAE,CLnDjB,AKmDkB,GAAG,CLnDjB,AKmDkB;ALlDxC,AKmDA+iD,IHoCI,AFvFE9iD,CKmDD,CAAC+N,EHoCF,CAAK,AGpCA,CAACi2K,OLnDS,GEuFV,AFvFU/pL,AKmDC,CAAC,EHoCE,IFvFJ,CAAA+F,CEuFkB,KAAA,CAAM,MAAA,AFvFxB,CEuF+B,EFvF5B,IAAI,EEuFwB,CAAS,UAAA,CAAW,KAAA,CAAM,MAAM,CAAA;AFtFlF,IEwFS,AFxFHC,IEwFG,CAAA,gBFxFkB,CEwFlB,EFxFkBhG,CEwFGkrH,MFxFH,CAAAllH,IEwFGklH,IAAkC,aFxFrC,GAAG,IAAI;AAClC,AKmDA,ILnDMjlH,EEwFAilH,WAAAA,CAAW,OFxFU,GAAAlrH,MEwFV,CAAiB,AFxFP,CAAAiG,QEwFO,EAAW,SAAS,CAAA,CFxF3B,GAAG,IAAI;AAClC,AKmDA,ILnDMC,AKmDA8jL,EHqCA,IAAA,CAAK,WFxFa,AKmDA,GLnDAhqL,AKmDG,IAAI2mL,EHqCpB,CFxFa,CAAAzgL,CEwFUglH,AGrCE,CAACvoC,UHqCHuoC,MFxFV,GAAG,CKmD8B,CAAC,ELnD3B;AAC/B,EKkD4DntG,EHqC1B,AFvF5B5X,CEuF4B,EGrC+B,EAAE,cLlD1C,GAAAnG,OAAA,CAAAmG,mBAAA,GAAG,KAAK;AACjC,AKiD4E,CAAC,CAAC,CAAC,CHwC3E,AFzFEC,AKiD0E,IHwC5E,CAAK,MFzFQ,GAAApG,OAAA,CAAAoG,IEyFR,GAAwB,IFzFhB,EEyF4B,CFzFzB,IAAI;AACxB,IAAMC,EEyFK,IAAA,CAAA,EFzFI,GAAArG,OAAA,CAAAqG,OEyFJ,CAAqB,CFzFjB,GAAG,IAAI,WEyFU,CAAoB,SAAA,EAAW,SAAS,CAAA;AFxFxE,AKiDA,ILjDMC,EEyFA,IAAA,CAAK,GFzFK,GAAAtG,OAAA,CAAAsG,MEyFL,GAAuB,CFzFlB,GEyFkB,AFzFf,IAAI;AACvB,AKiDA,IHuCkC,AFxF5BC,AKiDA0jL,CHuC4B,cFxFb,EKiDE,CLjDFjqL,EKiDK,IAAI2mL,CLjDT,CAAApgL,GKiDc,CAACu5C,IAAI,CACtC,IAAI6mI,ELlDe,GAAG,AKkDb,CAACvlI,GLlDgB,QKkDL,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;ALjDtC,AKiDwC,IHyCpC,AF1FE56C,IE0FF,CAAK,SAAA,GAAY,GF1FK,GE0FO,AF1FPxG,OAAA,CAAAwG,oBAAA,GAAG,IAAI;AACjC,AKiDEwjL,ILjDIvjL,EE0FM,KAAA,CAAA,GF1FK,GAAAzG,AKkDjB,CHwCY,AGxCX,CHwCmB,IAAA,CAAK,AF1FR,CAAAyG,IE0FQ,CAAM,MAAM,AF1FpB,CE0FoB,EF1FjB,IAAI;AACxB,AKkDAwjL,ILlDMvjL,EE0FA,KAAA,CAAM,KGxCK,CAACg3B,GHwCN,CAAU,AF1FE,GAAA19B,CE0FF,AGxCI,CHwCC,AGxCAqS,GAAG,CAAC,CHwCJ,AF1FH,CE0FS,AF1FT3L,EKkDW,EAAE,EHwCJ,CAAO,AGxCA,EAAE,CAAC,IAAI,CHwCC,AGxCA,CHwCA,AGxCC,CAAC,CLlD1B,GAAG,IAAI;AAC/B,AKkDAmiD,ILlDMliD,CKkDD,CHwCO,AGxCNmN,GAAG,CAACm2K,CHwCE,CAAA,CF1FG,GAAAjqL,CE0FH,GAAQ,GF1FL,CAAA2G,CE0FK,CAAM,CGxCC,CAAC,IHwCF,CAAO,AF1FlB,GAAG,CE0Fe,GF1FX;AACtB,IEyFiC,AFzF3BC,CEyF2B,eFzFX,GAAA5G,OAAA,CAAA4G,gBAAA,GAAG,IAAI;AAC7B,AKkDA,IHyCI,AF3FEC,IE2FF,CAAK,GF3FK,EE2FL,CF3FK7G,EE2FG,KF3FH,CE2Fe,AF3Ff6G,QAAA,GAAG,IAAI;AACrB,AKkDA,ILlDMC,AKkDAojL,EHyCM,KAAA,CAAA,MAAA,CAAO,AF3FE,CKkDC,ELlDDlqL,CE2FF,AGzCM,CHyCD,GGzCK2mL,EHyCL,AF3FH,CE2FS,AF3FT7/K,EKkDa,CAACg5C,IHyCE,AGzCE,CHyCF,AGxCnC,IAAI6mI,GLnDe,EKmDV,CLnDa,AKmDZvlI,ILnDgB,OKmDL,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;ALlDtC,AKkDwC,ILlDlCr6C,EE2FA,KAAA,CAAM,MAAA,CAAO,CF3FG,GAAA/G,IE2FH,CAAS,EF3FN,CAAA+G,CE2FM,CAAK,KAAA,CAAM,QF3FjB,CE2F0B,CAAA,CF3FvB,IAAI;AAC7B,AKkDEijL,ILlDIhjL,EE2FM,KAAA,CAAA,MAAA,AGxCZ,CHwCmB,AGxClB,ELnDsB,EE2FJ,CF3FIhH,EE2FG,KAAA,AF3FH,CE2FS,AF3FTgH,KE2FS,YF3FT,GAAG,IAAI;AAE9B,AKkDAkjL,ILlDMjjL,EE0FA,KAAA,CAAM,IGxCI,CAACy2B,CHwCL,CAAO,KF1FO,CKkDD,CAACrrB,CLlDArS,EKkDG,CAAC,ILlDJ,AKkDQ,CLlDRiH,CKkDU,GAAG,EHwCpB,AGxCsB,CHwCtB,AGxCuB,CHwCvB,GGxC2B,CAAC,CAAC,CAAC,MLlDvB,GAAG,KAAK;AAClC,AKkDA4hD,ILlDM3hD,CKkDD,CH0CC,AG1CA4M,GAAG,CAACo2K,CH0CJ,CAAM,aAAA,AF5Fe,CE4FD,AG1CA,CAAC,CLlDAlqL,OAAA,CAAAkH,CE4FU,CAAA,mBF5FV,GAAG,KAAK;AACnC,IAAMC,EE6FA,KAAA,CAAM,MAAA,CAAO,CAAA,KF7FQ,GAAAnH,OAAA,CAAAmH,qBAAA,GAAG,KAAK;AACnC,AKkDA,ILlDMC,EE8FA,KAAA,GAAQ,KAAA,CAAM,IAAA,CF9FO,GAAApH,OAAA,CAAAoH,qBAAA,GAAG,KAAK;AACnC,AKkDA,IH2CoB,AF7FdC,AKkDA8iL,CH2Cc,aG3CA,GAAG,IAAIxD,ELlDE,GAAA3mL,AKkDG,CAAC8/C,IAAI,CACjC,CLnDyB,CAAAz4C,EKmDrBs/K,KAAK,CAACvlI,WAAW,CAAC,GLnDG,AKmDA,EAAE,CLnDC,EKmDE,EAAE,CLnDC,EKmDE,CAAC;ALlDxC,AKkD0C,IH8CtC,AFhGE95C,IEgGF,CAAK,MAAA,GAAA,CAAU,MAAoB,EFhGV,GAAAtH,OAAA,CAAAsH,uBAAA,GAAG,KAAK;AACrC,AKkDI0iL,ILlDEziL,EEgGM,MAAA,MAAA,AG7CZ,CAAC,EH6CoB,IAAI,GFhGK,GAAAvH,OAAA,CEgGL,AFhGKuH,CEgGL,CAAA,sBFhGK,GAAG,KAAK;AACtC,AKmDA4iL,ILnDM3iL,EEgGA,MAAM,EAAA,AG7CE,CAACk2B,EH6CE,IAAI,EG7CE,CAACrrB,GAAG,CLnDG,AKmDF,GLnDErS,CKmDE,EAAE,CH6Cb,CAAQ,CAAA,AG7CQ,CLnDP,CEgGE,AFhGFwH,AKmDS,CH6CP,AG7CQ,EH6CL,CAAC,AG7CO,CH6CP,AG7CQ,CAAC,CAAC,iBLnDhB,GAAG,KAAK;AACtC,AKmDAqhD,ILnDMphD,CKmDD,CH+CC,AG/CAqM,GAAG,CAACq2K,EH+CE,IAAA,GAAO,AFlGE,GAAAnqL,CEkGE,CG/CC,CAAC,ILnDJ,CAAAyH,UEkGE,CAAA,CAAA,CAAa,EFlGf,GAAG,KAAK,QEkGO,CAAmB,MAAA,CAAO,EAAA,EAAI,EAAE,CAAA;AFjGpE,IAAMC,EEkGA,MAAM,OFlGS,GAAA1H,CEkGT,GAAc,GFlGL,CEkGK,AFlGL0H,CEkGU,KAAA,CAAM,CAAA,CAAE,MAAA,AFlGlB,CEkGyB,CAAA,CFlGtB,KAAK;AAC7B,AKmDA,ILnDMC,EEmGM,MAAA,YAAA,AFnGc,GEmGC,AFnGD3H,IEmGK,GFnGL,CAAA2H,UEmGK,CAAA,CAAA,QFnGL,GAAG,KAAK;AAClC,AKmDAoiL,ILnDMniL,EEmGM,IGhDF,CAAC81B,CHgDC,OGhDO,CAAC1iC,CAAC,GLnDK,AKmDF,EHgDZ,CFnGcgF,AKmDC,CAAC,CHgDC,AGhDA,IHgDI,CFnGP,CAAA4H,eEmGO,CAAA,CAAA,GFnGP,GAAG,KAAK;AAClC,IAAMC,EEoGM,MAAA,KAAA,GAAQ,CAAA,GAAI,AFpGE,GAAA7H,CEoGF,CAAK,EAAA,GFpGH,CAAA6H,oBAAA,GAAG,KAAK;AAClC,AKmDA,ILnDMC,EEqGA,OAAO,SAAS,EFrGI,GAAA9H,CEqGJ,CAAA,EAAkB,GFrGd,CAAA8H,oBAAA,GAAG,KAAK;AAClC,AKmDA,ILnDMC,AKmDAqiL,IHkDQ,IGlDA,EHkDA,CGlDG,IAAIzD,GHkDP,EFrGY,AKmDA,CHkDD,AGlDE7mI,ELnDD9/C,EKmDK,CHkDN,AGlDO8oL,CHkDD,GFrGL,CAAA/gL,EEqGK,CAAO,KGlDO,EAAE8gL,CHkDT,SFrGZ,GAAG,AKmD+B,CAAC,ILnD3B;AAClC,AKmDAuB,ILnDMpiL,IEuGO,AGpDL,CAAC01B,GHoDI,CAAA,IGpDI,CAACrrB,GAAG,CAAC,ELnDI,AKmDF,EAAE,CLnDArS,GKmDI,CHoDjB,CAAmB,AGpDA,CAAC,CLnDP,AKmDQ,CLnDRgI,AKmDS,CAAC,EHoDJ,CAAO,EAAA,EAAI,EAAE,CAAA,SFvGnB,GAAG,KAAK;AAClC,AKmDAoiL,ILnDMniL,IEuGc,AGpDZ,CAAC6S,QAAQ,CAAC9f,CHoDE,AGpDD,CHoDC,EGpDEkT,EHoDF,AFvGM,CEuGD,CGpDC,CLnDAlO,AKmDCmO,EHoDE,AGpDA,CHoDA,CAAE,CGpDC,CAAC,CLnDP,AKmDQ,CLnDRlG,AKmDS,EHoDJ,CAAO,CAAA,gBFvGZ,GAAG,KAAK;AAClC,AKmDA4gD,I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CAAE;ALhDrE,AKiDAijI,ILjDMnhL,MEkHQ,IAAA,AFlHE,CKiDD,CAAC,CHiEF,AFlHElJ,AKiDC,CAAC,CAAC09B,CHiEC,CAAC,GFlHL,CEkHK,AFlHLx0B,CEkHU,CGjEC,CHiED,AGjEEmJ,EHiES,CGjEN,CAAC,CHiEK,CGjEH,CLjDlB,EEkHqB,AGjEAg3K,CLjDlB,IEkHkB,AFlHd,CEkHc,CGjEO,EAAEC,EHiET,IAClB,AGlEiC,EAAE,CHkEnC,AGlEoC,GHkE9B,AGlEiCliI,IHkEjC,CAAK,EAAA,AGlEmC,CAAC,CHkEzB,AGlE0B,CAAE,EHkE5B,IAAA,KAAA;AFlHzC,IAAMj+C,MEoHQ,IAAA,EFpHI,CEoHJ,EFpHInJ,CEoHE,CAAC,IAAA,CAAK,AFpHR,CAAAmJ,CEoHQ,EAAW,GAAA,IAAA,EFpHnB,GEoHmB,AFpHhB,CEoHgB,GFpHZ,EEoHY,IAClB,GAAA,GAAM,IAAA,CAAK,EAAA,EAAW,GAAA,IAAA,KAAA;AFpHzC,AKiDA,ILjDMC,MEsHI,IAAI,GAAA,IAAO,EFtHI,CEsHJ,EAAK,AFtHDpJ,OAAA,CAAAoJ,mBAAA,GAAG,IAAI;AAChC,AKiDAihL,ILjDMhhL,QEsHgB,GGrEP,CAAC3N,KHqEM,AFtHC,CEsHD,CGrEC,CLjDAsE,AKiDC,GHqEF,GAAQ,CFtHP,CAAAqJ,EEsHO,AGrELkgL,CHqEU,EGrEP,CHqEO,CAAI,GAAA,EAAK,IAAA,CAAK,AFtH1B,GEsH0B,AFtHvB,CEsH2B,GAAA,AFtHvB,EEsH4B,SAAA,CAAU,KAAK,CAAC,CAAA;AFrH1E,EKgD4B,ELhDtBjgL,KKgD2Bu/C,CHqEyC,CAAA,GGrEpC,CAAC/0C,EHsEtB,CGtEyB,CAACy1K,ELhDpB,CKgDuB,CAAC,CLhDxBvpL,OAAA,CAAAsJ,iBAAA,GAAG,IAAI;AAC9B,AK+C+C,EAAC,EL/C1CC,QEsHM,SAAA,CAAU,CFtHG,GAAAvJ,CEsHH,GACR,GFvHW,CAAAuJ,KEuHX,CAAU,KAAA,GAAA,CAAS,GAAA,CFvHR,EEuHc,CFvHX,EEuHW,EFvHP,EEuHc,CAAA,GAAI,IAAA,CAAK,GAAA,CAAI,GAA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KAAK,CAAE,yBAA0B,CAAC;EAE9C,IEoHK,KAAA,CAAM,MAAA,CAAO,CAAA;AFlHnB,IEmHI;AFjHJ,IEmHI,KFnHK6W,IEmHI,KFnHKA,CAAE1Z,KAAK,EEmHZ,AFnHcwU,CEmHA,IFnHK,CEmHL,CFnHQ,CEmHc;EFjHhD,IEkHK,IAAI,AFlHAA,KAAK,CAAC/P,KEkHN,GAAc,GFlHG,EEkHH;IFhHtB,EEkHI,GFlHC0U,KEkHO,KAAA,CAAM,CFlHD,GEkHC;MFhHjB,EEiHK,KAAK,AFjHHnZ,KEiHG,AFjHE,CEiHI,IAAA,CAAK,EAAA;IF/GtB,KAAKoZ,CEgHO,GAAA,CAAA,CAAA,EAAG,GFhHC,EEgHD,CAAM,WAAW,CAAA;MF9G/B,IE+GqB,GF/GdxE,IAAI,CAAC+E,GE+GS,EF/GJ,CE+GI,AF/GF3Z,IE+GE,CF/GG,GAAG,YAAa,CAAC;IAE1C,KAAKqZ,CE8GG,UF9GQ;MAEf,EE8GK,KAAK,AF9GHzE,IAAI,CE8GD,AF9GE+E,CE8GI,IAAA,AF9GC,CE8GI,AF9GF3Z,KAAK,CE8GH,EF9GM,OAAQ,CAAC;IAErC,KAAKsZ,CE6GO,GAAA,CAAA,CAAA,EAAG,CAAC,CF7GD,IE6GC,CAAM,WAAW,CAAA;MF3GhC,IE4GqB,GF5Gd1E,IAAI,CAAC+E,GE4GS,EF5GJ,CE4GI,AF5GF3Z,IE4GE,CF5GG,GAAG,KAAM,CAAC;IAEnC,KAAKuZ,CE2GG,SF3GO;MAEd,EE2GK,KAAK,AF3GH3E,IAAI,CE2GD,AF3GE+E,CE2GI,IAAA,AF3GC,CE2GI,AF3GF3Z,IE2GE,CF3GG,GAAG,YAAa,CAAC;IAE1C,KAAKwZ,CE0GO,GAAA,CAAA,KAAA,AF1GG,CE0GG,WAAA,EAAa,CAAC,CAAA;MFxG/B,IEyGqB,GFzGd5E,IAAI,CAAC+E,GEyGS,EFzGJ,CEyGI,AFzGF3Z,IEyGE,CFzGG,GAAG,OAAQ,CAAC;IAErC,KAAKyZ,CEwGG,QFxGM;MAEb,EEwGK,KAAK,AFxGH7E,IAAI,CEwGD,AFxGE+E,CEwGI,IAAA,AFxGC,CEwGI,AFxGF3Z,KEwGE,AFxGG,GAAG,KAAM,CAAC;IAEnC,MEuGY,GAAA,CAAA,CAAC,K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,ACziGpB,CAAC,IDyiGwB,EAALA,ACziGb,KDyiGkB;MAAEC,ECviG1B7lB,IDuiGgC,ACviG5B,EDuiGsB6lB,CCviGnB7D,EAAE,CAAC+xG,EDuiGsB,YCviGR;MDuiGUxnG,ACriGnC,KDqiGwC,EAALA;IAAM,ACniG1C,CDmiG2C,ACniG1C,MAAM,IAAKlZ,KAAK,YAAYgF,UAAU,EAAG;IDqiG1CsV,ECniGC3tB,IDmiGD,ACniGK,CDmiGAmoB,ECniGGnG,EAAE,CAACgyG,IDmiGG,CCniGE,EDmiGC3pH,aAAa;IAC9BsjB,ACliGA,CAAC,KDkiGD,CAAKvF,ACliGE,IAAK/U,KDkiGE,ACliGG,GDkiGAhJ,SCliGY4N,IDkiGC,OCliGU,EAAG;IDoiG3C0V,ECliGC3tB,IDkiGD,ACliGK,CDkiGA6tB,ECliGG7L,EAAE,CDkiGA,ACliGCiyG,GDkiGE9pH,SCliGU,UDkiGS;IAEhCwjB,ACliGA,CAAC,KDkiGD,CAAK3E,ACliGE,IAAK3V,KAAK,MDkiGG,GAAG,GCliGM+E,EDkiGD,QCliGW,EAAG;IDmiG1CuV,ECjiGC3tB,IDiiGD,ACjiGK,CDiiGAkpB,ECjiGGlH,EAAE,CDiiGA,ACjiGCkyG,GDiiGE,ACjiGC,KDiiGI;IAClBvmG,AChiGA,CAAC,KDgiGD,CAAKxE,AChiGE,IAAK9V,KAAK,MDgiGG,GAAG,CAAC,EChiGKiF,SAAS,EAAG;IDkiGzCqV,EChiGC3tB,IDgiGD,AChiGK,CDgiGA8tB,EChiGG9L,EAAE,CAACmyG,IAAI,GDgiGE,GAAG,IAAIpmG,GAAG,CAAC,CAAC;IAAC,AC9hG9B,CAAC,MD8hG6BJ,AC9hGvB,IAAKta,ED8hGkB,GC9hGb,YAAY8E,UAAU,EAAG;EDgiG3C,IC9hGEnY,IAAI,GAAGgiB,EAAE,CAACoyG,aAAa;ED8hGxB5qG,EC5hGA,CAAC,MD4hGD,AC5hGO,CD4hGPiE,GC5hGYpa,KAAK,QD4hGjB,EAAAqa,EC5hG6BxM,MD4hG7B,WC5hG8C,EAAG;ED4hGjD,IC1hGClhB,GD0hGDiF,CC1hGK,GAAG+c,EAAE,CAACoyG,KD0hGX,CAAA3mG,OC1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B,oBAAoB,EAAE,UAAU;ADgnDhC,IC/mDAI,oBAAoB,EAAE,UAAU;ADizDlC,IAAMz2C,AChzDJ+4C,cDgzDkB,GAAG,CChzDH,EAAE,QAAQ;EDgzDL,EC/yDvBpoB,SD+yDkC,EAAE,MC/yDnB,ED+yD2B,AC/yDzB,OAAO;ED+yDoB,EC9yD9CwoB,YD8yD4D,EAAE,IC9yD5C,EAAE,ED8yDkD,MC9yD1C;ED8yD4C,EC7yDxErmB,ID6yD8E,EAAE,QAAQ,AC7yD1E,EAAE,QAAQ;ED6yDkE,EC5yD1F+iB,UD4yDsG,EAAE,EC5yD1F,EAAE,ID4yDgG,IC5yDxF;ED4yD0F,EC3yDlHn2B,KD2yDyH,EAAE,OC3yD7G,CD2yDqH,CC3yDnH;ED4yDjB,AC3yDA,CAAC,MD2yDM,EAAE,QAAQ;EAAE,ACzyDnB,QDyyD2B,CCzyDlB27F,CDyyDoB,QAAQ,CCzyDlBA,CAAEruJ,KAAK,EAAG;EDyyDU,ECvyDtCkuJ,KDuyD6C,EAAE,QAAQ,ACvyDxC,CAAC1zI,GAAG,CAAExa,KAAM,CAAC;EDuyD6B,ECryDzD,IAAKA,KAAK,KDqyD+D,ACryD1D,CAAC,CDqyD2D,CCryDxD,ODqyDgE,ACryDzD,IAAI;EDqyDuD,ECnyDrF,IDmyD2F,EAAE,MCnyD7F+0C,EDmyDqG,ICnyDrG,CAAa/0C,KAAK;EDmyDqF,ACjyDxG,YDiyDoH,EAAE,QAAQ;EAC9H,AChyDA,ODgyDO,EAAE,AChyDAsuJ,QDgyDQ,KChyDKA,CAAE3+G,QAAQ,EAAEub,MAAM,EAAEqjG,OAAO,EAAEh/F,KAAK,EAAE12B,MAAM,EAAG;EDgyDhD,EC9xDlB,IAAMkkB,GAAG,ED8xDoB,CC9xDjBwS,CD8xDmB,IC9xDd,CAACxS,GD8xDqB,AC9xDlB;ED8xDoB,EC7xDzC,IAAMtjB,KD6xD8C,EAAE,CC7xDxC,GAAGZ,ID6xD6C,EC7xDvC,CAACY,QAAQ;ED6xDgC,EC5xDhE,IAAMyV,MD4xDsE,EAAE,GC5xD7D,GAAGS,ED4xDkE,MC5xD1D,CAAC65C,sBAAsB,GAAGj6B,KAAK,CAACrgB,WAAW,GAAG,IAAI;ED4xDU,EC1xDxF,IAAMsM,KD0xD6F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E,GC9rD9G,GAAGnhH,ED8rDmH,MC9rD3G,CAAC8M,SAAS,GAAG,CAAC;ED+rD7C,EC7rDC,IAAMs0G,QD6rDO,EAAE,GC7rDI,GAAG,CAAC,CD6rDA,AC7rDEphH,QAAQ,CAACwG,SAAS;ED6rDlB,EC3rDzB,IAAM66G,UD2rDmC,EAAE,EC3rDvB,GAAG,CAAC,CAAErhH,CD2rDyB,OC3rDjB,CAACyb,UAAU;ED2rDQ,ECzrDrD,IAAIm9E,WDyrDkE,ACzrDvD,EDyrDyD,CCzrDtDl+H,ODyrD8D,iBCzrDjD;EDyrDmD,ECvrDlF,IAAKslC,QAAQ,CAACyI,IDurDuF,EAAE,ICvrD/E,EAAG,EDurDoF;EAAE,ICrrDhH,IAAK8R,SDqrD4H,EAAE,QAAQ,ACrrDnH,KAAK,IAAI,IAAIA,mBAAmB,CAACG,gBAAgB,KAAK,IAAI,EAAG;EDsrDvF,MCprDGk+E,WDorDc,ACprDH,EDorDK,CCprDFt+E,ODorDU,CCprDF,CAACs+E,WAAW;EDorDR,IClrD3B,UDkrDyC,EAAE,QAAQ;EAAE,EChrDtD,SDgrDiE,EAAE,QAAQ;EAAE,EC9qD7E,IAAMl5F,KD8qDkF,EAAE,GC9qD1E,GAAG,ED8qD+E;EAAE,IC5qDnGm/G,MD4qD6G,EAAE,AC5qDvG,EAAEA,MD4qD6G,EC5qDrG;ED4qDuG,IC3qDzH1G,SD2qDsI,CC3qD5H,CD2qD8H,CC3qD5Hn4G,OD2qDoI,CC3qD5H,CAACxuC,IAAI;ED4qD3B,IC3qDE4mJ,ED2qDI,EAAE,MC3qDI,ED2qDI,AC3qDFp4G,QAAQ,CAACjrC,IAAI;ED2qDT,ICzqDhBsmD,KDyqDyB,EAAE,KCzqDf,EAAEA,CDyqDqB,WCzqDT;EDyqDW,ICxqDrCC,GDwqD4C,EAAE,QAAQ,CCxqDxC,EAAEA,cAAc;EDwqD0B,ICvqDxDH,ODuqDmE,ACvqD5D,EDuqD8D,ACvqD5Dnb,QDuqDoE,ACvqD5D,CAACmb,OAAO;EDuqDsD,ICrqD/E2jG,IDqqDuF,EAAE,QAAQ,MCrqD7E,EAAEA,oBAAoB;EDqqDyD,ICpqDnGC,ODoqD8G,EAAE,QAAQ,KCpqDlG,EAAEA,sBAAsB;EDoqD4E,IClqD1HtlE,IDkqDkI,EAAE,QAAQ,KClqDzH,EAAEz5C,QAAQ,CAACy5C,mBAAmB,KAAK,IAAI;EDmqD5D,IClqDE19B,WDkqDa,AClqDF,EDkqDI,AClqDF/b,QDkqDU,AClqDF,CAAC+b,WAAW;EDkqDR,IChqDzB9T,ODgqDoC,EAAE,AChqD7B,EAAEA,MDgqDmC,GChqD1B;EDgqD4B,IC9pDhDowG,QAAQ,EAAE6G,CD8pDqD,EAAE,QAAQ,GC9pDjD;ED8pDmD,IC7pD3E5G,WD6pD0F,EAAE,AC7pD/E,EAAE4G,MD6pDqF,QC7pDvE,IAAIh2H,MAAM,CAAC4V,cAAc,KAAK,IAAI;ED6pDuC,IC5pDtGy5G,QD4pDkH,EAAE,AC5pD1G,EAAE0G,MD4pDgH,UC5pDhG;ED4pDkG,IC3pD9HzG,OD2pDyI,EAAE,MC3pD5H,ED2pDoI,AC3pDlIyG,gBAAgB,IAAI/1H,MAAM,CAAC0T,aAAa,KAAK,IAAI;ED4pDpE,IC3pDE67G,ED2pDI,EAAE,QAAQ,GC3pDC,EAAEwG,gBAAgB,IAAI/1H,MAAM,CAACigC,YAAY,KAAK,IAAI;ED2pDjD,ICzpDhBm4F,EDypDsB,EAAE,QAAQ,UCzpDV,EAAE9C,wBAAwB;EDypDd,ICxpDlC/jG,EDwpDwC,EAAE,QAAQ,ICxpDlC,EAAIF,mBAAmB,KAAK,IAAI,GAAKD,QAAQ,CAACG,gBAAgB,GAAKF,mBAAmB,CAACG,gBAAgB,KAAK,IAAI,GAAGH,mBAAmB,CAAC77B,OAAO,CAAChJ,UAAU,GAAGpU,+BAAsB;EDwpD9I,ICvpDpDgnC,QDupDgE,EAAE,KCvpDnD,EAAE,CDupDyD,ACvpDxD,CAAEtI,QAAQ,CAACsI,eAAe;EDupDgC,ICrpD5E5K,GAAG,CDqpDiF,CCrpD/EyhH,CDqpDiF,MCrpD1E,EDqpDkF;EAAE,ICppDhG10G,MAAM,EAAE20G,GDopDuG,EAAE,KCppD/F,GDopDuG;EAAE,ICnpD3HvzG,CDmpDgI,EAAE,GCnpD5H,EAAEwzG,GDmpDkI,OCnpDxH;EDmpD0H,IClpD5ItI,ODkpDuJ,EAAE,CClpD/I,EAAEsI,KDkpDqJ,KClpD3I,IAAIxzG,MAAM,CAACtyB,OAAO;EDmpD1C,IClpDE+9H,ODkpDS,EAAE,QAAQ,CClpDD,EAAEA,kBAAkB;EDkpDjB,ICjpDrBzsG,KAAK,EAAEy0G,EDipD2B,EAAE,KCjpDpB,GDipD4B;EAAE,IChpD9C30G,IDgpDsD,EAAE,EChpDhD,EAAE40G,IDgpDsD,QChpD1C;EDgpD4C,IC/oDlEx0G,OAAO,CD+oDuE,CC/oDrEy0G,CD+oDuE,QAAQ,EC/oDpE;ED+oDsE,IC9oD1Fv0G,MD8oDoG,EAAE,CC9oD7F,EAAEw0G,KD8oDmG,QC9oDtF;ED8oDwF,IC7oDhHr0G,MD6oD0H,EAAE,OC7oD7G,CD6oDqH,CC7oDnHozG,wBAAwB,IAAIkB,mBAAmB;ED8oDlE,IC7oDEj0G,ID6oDM,EAAE,KC7oDG,EAAEk0G,CD6oDG,cC7oDY;ED6oDV,IC3oDlB/G,ID2oD0B,EAAE,QAAQ,MC3oDhB,EAAE6G,aAAa,IAAIz/G,QAAQ,CAACkL,aAAa,KAAK/pC,+BAAoB;ED2oDhD,IC1oDtC03I,KD0oD+C,EAAE,QAAQ,MC1oDpC,EAAE4G,aAAa,IAAIz/G,QAAQ,CAACkL,aAAa,KAAKhqC,gCAAqB;ED0oD7B,ICxoD3DsqC,ODwoDsE,EAAE,GCxoD5D,EAAEo0G,GDwoDkE,aCxoDlD;EDwoDoD,ICvoDlFr0G,ODuoD6F,EAAE,GCvoDnF,EAAEs0G,GDuoDyF,aCvoDzE;EDuoD2E,ICroDzG/lI,ODqoDoH,EAAE,CCroD5G,EAAEgmI,KDqoDkH,SCroDpG;EDqoDsG,ICpoDhIt1G,EDooDsI,EAAE,QAAQ,CCpoDnI,EAAE41G,iBAAiB;EDqoDlC,ICnoDEz2G,SDmoDW,ACnoDF,EDmoDI,ACnoDFo2G,QDmoDU,KCnoDG;EDmoDD,ICloDvBl2G,ODkoDkC,EAAE,GCloDxB,EAAEw2G,GDkoD8B,aCloDd;EDkoDgB,ICjoD9Ct2G,CDioDmD,EAAE,QAAQ,OCjoD3C,EAAEu2G,uBAAuB;EDioDoB,IChoD/Dx2G,EDgoDqE,EAAE,QAAQ,SChoD1D,EAAEy2G,0BAA0B;EDgoDgC,IC9nDjFt2G,KD8nD0F,EAAE,GC9nDlF,EAAE+1G,GD8nDwF,WC9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prD,ACl/CA,CAAC,GDk/CG,GAAG,IAAI,CAACA,IAAI;MACpD,ECj/CE8T,EDi/CG,IAAI,CAAC7T,GCj/CA,CAACvxB,KAAK,CAAClK,EDi/CK,ECj/CD,CAAEkK,EDi/CI,GCj/CE,CDi/CE,ACj/CD,CAACzJ,CDi/CG4M,IAAI,CAACouB,QCj/CM,CAAE0pD,GDi/CI,GAAG,GCj/CG,CDi/CC,ACj/CA;MDm/C1D,ECj/CE71C,EDi/CG,IAAI,CAAC5T,GCj/CA,CAACg9G,GDi/CM,GAAG,CAAC,EAAGrrI,ACj/CJ,CAAC7O,GDi/CO,ACj/CJ,CDi/CKk9B,ACj/CHkrD,KAAK,CAACp6E,CDi/CI,GAAG,CCj/CF,GDi/CM,ACj/CH,CDi/CIkvB,ECj/CD,EAAE,GDi/CM,ACj/CH,EAAE,GAAI,CAAC;MDk/CvD,ECj/CE4T,EDi/CG,IAAI,CAAC3T,GCj/CA,CAAC6+B,ODi/CU,GCj/CA,CAACh8D,CDi/CI,ECj/CD,CAAE,CDi/CG,EAAG6O,ACj/CH,EAAEu5E,EDi/CK,CAACjrD,ECj/CD,CAAClvB,MAAM,EDi/CK,CCj/CF,EDi/CK,CCj/CF,EAAE,CDi/CI,ECj/CA,CAAC;MDm/CzD,ECj/CE6qG,EDi/CG,GCj/CE,CDi/CE,ACj/CDu/B,CDi/CEh7G,OCj/CM,CDi/CE,ACj/CAw9G,KDi/CK7qJ,SCj/CS,CAAE,GAAG8gD,CDi/CA,EAAGjiC,IAAI,CAACwuB,ECj/CA,MDi/CQ,GAAG,IAAI,CAACA,QAAQ;MACrE,ECh/CEw9G,EDg/CG,IAAI,CAACv9G,OCh/CM,CDg/CE,CCh/CC,IDg/CIrtC,sBAAsB,EAAG4e,IAAI,CAACyuB,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC7E,AC/+CC,CAAC,GD++CG,GC/+CG,CD++CC,CAACC,EC/+CG6qD,KAAK,CAAC0B,KD++CI,KAAKv6F,EC/+CG,EAAG,OD++CK,EAAGsf,IAAI,CAAC0uB,aAAa,GAAG,IAAI,CAACA,aAAa;MACjF,EC9+CE,ED8+CG,EC9+CGuT,ED8+CC,CAACtT,OC9+CM,GAAGxG,GD8+CI,EC9+CC,CAACh2B,ED8+CG,CC9+CA,CAA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9G,ED49CA,CAACv9G,OC59CS,CD49CD,EC59CI,CD49CDvsB,AC59CE,MD49CI,CAACusB,QAAQ;IC39C/B,ED49CA,EC59CIw9G,ED49CA,CAACv9G,QAAQ,GAAGxsB,AC59CE,GAAG,CAAC,ED49CA,CAACwsB,QAAQ;IC39C/B,ED49CA,EC59CIw9G,ED49CA,CAACv9G,OC59CS,GAAG,CAAC,ED49CA,GAAGzsB,MAAM,CAACysB,aAAa;IC19CzC,ED29CA,EC39CM86F,ED29CF,CAAC76F,OC39CW,GAAGzgB,GD29CD,GAAGjM,AC39CI,CAACkM,KD29CC,CAACwgB,YC39CgB,CD29CH;ICz9CzC,ED09CA,GC19CM,CD09CF,CAACC,EC19CKv2C,IAAC,GAAG,CAAC,EAAEsB,CD09CC,AC19CA,GD09CGsoB,AC19CAqhC,MD09CM,AC19CA,CD09CC1U,AC19CAlyC,MAAM,EAAErE,IAAC,CD09CI,EC19CDsB,CAAC,EAAEtB,IAAC,EAAG,EAAG;MD29ClD,ACz9CC,IDy9CG,ACz9CGkhG,CDy9CF1qD,ICz9CO,GAAGyU,MAAM,CAAEjrD,IDy9CA,ACz9CC,CAAE,EDy9CA4pB,MAAM,CAAC4sB,kBAAkB;MACnD,ACx9CC,IDw9CG,ACx9CE0qD,CDw9CDzqD,ICx9CM,CAACitD,KDw9CG,CAACppF,IAAI,CAAEsP,MAAM,CAAC6sB,ACx9CC,EAAG,QDw9CO,CAAC;MACzC,ECv9CE,EDu9CE,CAACC,CCv9CGkT,QAAQ,CDu9CD,ECv9CIgoE,CDu9CDhoG,ICv9CM,CAACqnI,CDu9CD,CAACv6G,SCv9CW,CDu9CD,ACv9CG88G,iBAAiB,CAAE;MDy9CzD,ECv9CE5pG,EDu9CE,CAACjT,KCv9CK,CAACjZ,GDu9CG,GAAG9T,GCv9CG,CAACoD,EDu9CE,CAAC2pB,SAAS,SCv9CS,CAAEuqD,KAAK,CAACjrE,WAAY,CAAC;MDw9C/D,ECv9CEs+H,EDu9CE,CAAC39G,ICv9CI,CAAC5pB,IDu9CI,GAAGpD,MAAM,CAACgtB,OCv9CO,CAAEsqD,CDu9CA,ICv9CK,CAAC5sF,MAAM,CAAC2hB,WAAY,CAAC;MDw9C3D,ECv9CE2zB,EDu9CE,CAAC/S,KCv9CK,CAACnZ,IDu9CI,GAAG9T,ECv9CE,CAACjP,GDu9CG,ACv9CA,CDu9CCk8B,ACv9CC09G,OAAQ,CAAC,EDu9CA;MAEnC,ECx9CE3qG,EDw9CE,CAAC9S,KCx9CK,CAACpZ,SAAS,CDw9CC,ACx9CAxH,GDw9CGtM,MAAM,CAACktB,QCx9CQ,CAAEq6F,ODw9CM,GCx9CK,CAAC;MDy9CrD,ECv9CEqiB,EDu9CE,CAACz8G,WAAW,GAAGntB,ACv9CA,EAAG,IDu9CG,CAACmtB,WAAW;MACrC,ACt9CC,CAAC,GDs9CE,CAACC,ECt9CG,IAAKkqD,IDs9CE,CCt9CG,CAACY,CDs9CDl4E,MAAM,CAACotB,GCt9CK,EAAG,KDs9CE;MACnC,ECr9CE,EDq9CE,CAACC,CCr9CG2S,UAAQ,GAAGgoE,CDq9CC,GAAGhoG,CCr9CC,CAACsnI,IDq9CI,ACr9CA,CDq9CCj6G,ACr9CCy8G,UAAU,CAAE,IDq9CE;MAC7C,ECp9CE9pG,EDo9CE,CAAC1S,OCp9CK,CAAC/S,GDo9CK,GAAGva,ECp9CA,CAACoD,GDo9CK,CAACkqB,WAAW,MCp9CI,CAAEgqD,KAAK,CAACjrE,WAAY,CAAC;MDq9C9D,ECp9CE2zB,EDo9CE,CAACzS,OCp9CK,CAAChT,IDo9CM,GAAGva,CCp9CD,CAACgC,IDo9CM,CAACurB,OCp9CK,CAAEg6F,IDo9CK,MCp9CM,CAAC;MDq9C9C,ECn9CEvnF,EDm9CE,CAACxS,OCn9CK,CAAC1Z,IDm9CM,GAAG9T,ECn9CA,CAACoD,GDm9CK,CAACoqB,YAAY,KCn9CG,CAAE8pD,KAAK,CAACjrE,WAAY,CAAC;MDo9C/D,ECn9CEs+H,EDm9CE,CAACl9G,ICn9CI,CAACrqB,ODm9CO,GAAGpD,MAAM,CAACytB,ICn9CI,CAAE6pD,KAAK,CAAC5sF,CDm9CA,KCn9CM,CAAC2hB,WAAY,CAAC;MDq9C3D,ECp9CE2zB,EDo9CI7M,QCp9CI,CDo9CK,ACp9CJrf,GDo9CO9T,MAAM,ACp9CJ,CDo9CK0tB,ACp9CJ38B,GAAG,CAAE45I,OAAQ,CAAC,EDo9CI;MACvC,ECp9CE3qG,EDo9CE5M,QCp9CM,CDo9CG,ACp9CFtf,GDo9CK,IAAI,ECp9CA,CAACxH,kBAAkB,CAAEi7G,UAAW,CAAC;MDs9CrD,ECp9CEuiB,EDo9CG32G,QCp9CO,CDo9CE,CCp9CC,IDo9CI,IAAI,EAAG;MCl9CzB,CAAC,CDo9CD,IAAMp9C,CAAC,ACp9CA,GDo9CGo9C,CCp9CEmkD,KAAK,CAACgD,EDo9CC,CAAC7/F,MAAM,MCp9CO,EAAG;QDq9CpC24C,ACn9CC,IAAM4M,KDm9CE,GAAG,ECn9CG,EDm9CCrhC,CCn9CEqpG,IDm9CG,CAAEjyH,ACn9CA,CDm9CE,ACn9CDwxJ,CDm9CE,OCn9CM,CAAEwC,cAAc,CAAE;QDq9ClD,ACn9CC/pG,KDm9CK,IAAI5pD,CAAC,ACn9CF,CAACmkC,EDm9CI,CAAC,EAAEnkC,CAAC,ECn9CA,CAACgtB,EDm9CIrtB,CAAC,EAAE,EAAGK,CAAC,EAAG,WCn9CO,CAAEkhG,KAAK,CAACjrE,WAAY,CAAC;QAC5D2zB,EDo9CA5M,QCp9CQ,CDo9CC,ACp9CA7Y,CDo9CEnkC,CAAC,CAAE,GAAG+8C,ECp9CA,CAACnxB,MDo9CQ,CAAE5rB,CAAC,CAAE,CAACqa,ECp9CF,CAAE82H,EDo9CK,CAAC,CAAC,MCp9CI,CAAC;QDs9C7C;MAED,ECt9CE;MDw9CF,ECv9CEqjB,EDu9CE,CAACl9G,KCv9CK,CAAC94B,QDu9CQ,ACv9CA,CAAC,CAAC,CDu9CCw+B,SAAS;MAC/B,ECv9CEh8B,EDu9CE,CAACu2B,ICv9CI,CAACj9B,IAAI,CAAE4mF,KAAK,CDu9CA,ACv9CCjrE,GDu9CErM,MAAM,CAAC2tB,CCv9CG,CAAC,cDu9CY;MAC/C,ECv9CEv2B,EDu9CE,CAACw2B,ICv9CI,CAACv4B,MDu9CM,GAAG2K,ECv9CE,CAAEunH,GDu9CE,CAAC35F,MCv9CQ,CAAC,IDu9CE;MAErC,ECx9CEg9G,EDw9CE,CAAC/8G,KCx9CK,CAACvW,IDw9CI,GAAGtX,MAAM,CAAC6tB,CCx9CC,CAAEz2B,OAAQ,CDw9CD,ACx9CE;MD09CrC,ECx9CE4oC,EDw9CE,CAAClS,OCx9CK,CAACs7G,EDw9CI,GAAGppI,ICx9CE,CAAC9Q,CDw9CG,CAAC4+B,CCx9CD,CAAEwpD,KAAK,CAACp6E,EDw9CG,GCx9CE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAI,CAAC;MD09CvD,ECz9CE8iC,EDy9CE,CAACjS,OCz9CK,CAACm9B,CDy9CG,GAAGlrD,MAAM,ACz9CF,CDy9CG+tB,ACz9CF7+B,GAAG,CAAE,GAAG,EDy9CG,ACz9CDooF,KAAK,CAACn6E,MAAM,GAAG,GAAG,EAAE,GAAI,CAAC;MD29CzD,ECz9CE6iC,EDy9CE,CAAChS,OCz9CK,CAACo7G,KDy9CO,GAAGppI,CCz9CD,CAACgC,IDy9CM,CAACgsB,OCz9CK,CAAE48G,KDy9CM,GCz9CG,CAAC;MD09C7C,ECz9CE5qG,EDy9CE,CAAC/R,OCz9CK,CAACi9B,UAAU,CDy9CG,ACz9CFlpD,GDy9CKhC,MAAM,CAACiuB,ECz9CA,CAAE28G,QAAS,CAAC,ODy9CO;MACrD,ECx9CEb,EDw9CE,CAAC77G,WCx9CW,EAAG,KDw9CI,GAAGluB,MAAM,CAACkuB,kBAAkB;MAEnD,ACx9CC,CAAC,GDw9CE,CAACC,ECx9CG,IAAKmpD,GDw9CC,ECx9CI,CDw9CDt3E,ACx9CEg5E,MDw9CI,CAAC7qD,KCx9CO,EAAG,EDw9CD;MAEjC,ECx9CE,EDw9CE,CAACyE,CCx9CGoN,QDw9CM,ECx9CE,CDw9CChgC,ECx9CEgoG,IDw9CI,CAACp1E,ACx9CA,CAACrjB,KAAK,CAAEs6H,EDw9CC,SCx9CU,CAAE;MDy9C7C,ECv9CE7pG,EDu9CE,CAAC1T,OCv9CK,CAAC/R,CDu9CG,GAAGva,ICv9CE,CAACoD,CDu9CG,CAACkpB,SAAS,UCv9CQ,CAAEgrD,KAAK,CAACjrE,WAAY,CAAC;MDw9C9D,ECv9CE2zB,EDu9CE,CAAC5R,OCv9CK,CAAC7T,ODu9CS,CCv9CD,CAACvY,CDu9CGhC,MAAM,CAACouB,ICv9CE,CAAEm5F,UDu9CW,ACv9CA,CAAC;MDw9C9C,ECt9CEsiB,EDs9CE,CAACx7G,QCt9CQ,EAAG,QDs9CO,GAAGruB,MAAM,CAACquB,kBAAkB;MACnD,ACr9CC,CAAC,GDq9CE,CAACC,ECr9CG,IAAKgpD,KAAK,CAAChB,GDq9CC,GAAGt2E,MAAM,CAACsuB,ICr9CM,EAAG,SDq9CM;MAE7C,ECr9CE,EDq9CE,CAACtP,CCr9CGghB,MDq9CI,GAAGhgC,CCr9CC,GAAGgoG,EDq9CE,CAAChpF,ECr9CE,CAACwoH,IDq9CI,ACr9CA,CAAEwC,UAAU,CAAE;MDu9C3C,ECr9CEhqG,EDq9CE,CAACzR,OCr9CK,CAACza,EDq9CI,GAAG9T,ICr9CE,CAACoD,CDq9CG,CAACmrB,UAAU,SCr9CO,CAAE+oD,KAAK,CAACjrE,WAAY,CAAC;MDu9C/D,ECt9CE2zB,EDs9CE,CAACt/B,OCt9CK,CDs9CG,ACt9CFoT,GDs9CK9S,IAAI,CAACC,CCt9CD,CAACqL,GDs9CK,CAAEtL,IAAI,CAACE,SAAS,ACt9CH,CDs9CKlB,ACt9CHunH,MDs9CS,CAAC7mH,GCt9CC,CAAC,IDs9CO,CAAE,CAAC;MAE/D,ECt9CEspI,KDs9CK,IAAI,CCt9CC,EAAG;IDw9ChB,ECt9CE;EDs9CD,ECp9CA;EAED,EDk9CC1tJ,GAAA;ECh9CD,EDg9CCnG,KAAA,ACh9CM,EDk9CP,SAAAorB,OAAOA,CAAA,EAAG;ICj9CTi+G,EDm9CA,GCn9CK,CDm9CD,CAACh1H,ACn9CEg1H,KAAK,QDm9CM,CAAE;ICl9CpB2rB,IDk9CsB7zJ,IAAI,CCl9CjB,CDk9CmB,CCl9CjB6zJ,SAAS;IACpBnjC,EDi9CsC,CAAE,CAAC,CCj9CpC,EAAEA;EACR,CAAC,CDk9CD;ACh9CD,EDg9CE;AC98CF,ID88CE1rH,GAAA,EC98CO8uJ,gBAAgBA,CAAE7pG,UAAU,EAAG;EAEvC,ED48CCryC,EC58CKmyC,CD48CL,EAED,GC98CY,GAAG,GD88CfnyC,CC98CmBw6I,GD88CFvzJ,KAAK,EAAG,CC98CK,CAAEorD,UAAW,CAAC;EAE5C,ID88CC,AC98CK8pG,ID88CAl1J,KAAK,EC98CM,GD88CD,AC98CI,EAAE,ED88CF,EAAG,IAAI,CAACioB,OAAO,EAAG;EC78CtC,ED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IAAI,CAAC03C,GAAI,CAAC,GAAG,IAAI,CAACG,IAAI;ICryBjE,EDsyBA,IAAIxlC,MAAM,GAAG,CAAC,GAAGme,GAAG;ECpyBrB,IDqyBC,IAAIpe,KAAK,GAAG,IAAI,CAACulC,MAAM,GAAGtlC,MAAM;ECnyBjC,IDoyBC,ACpyBK0oJ,IDoyBDzqI,IAAI,GAAG,CAAE,GAAG,GAAGle,GCpyBO,EDoyBF,CCpyBK,EAAE;EAChC,IDoyBC,ACpyBK4oJ,IDoyBCjjH,IAAI,GAAG,IAAI,CAACA,IAAI,CCpyBI,GAAG,EAAE;EAEhC,IDoyBC,IAAK,CCpyBGkjH,GDoyBC,CAACljH,IAAI,KAAK,IAAI,IAAI,IAAI,CAACA,GCpyBKkjH,CDoyBD,ACpyBGxhH,CDoyBF/pC,OAAO,EAAG,ECpyBI,EAAG;IAEtD,IDoyBC,ACpyBI+pC,IDoyBER,QCpyBU,CDoyBD,ACpyBEz/B,GDoyBCu+B,IAAI,ACpyBE,CDoyBDkB,ECpyBI,CAAC,EAAG,IDoyBC;MClyBhC,IDmyBCC,ACnyBI0/G,UDmyBM,GAAG7gH,IAAI,CAACmB,ACnyBI,CAAEO,SDmyBI,GCnyBS,CAAC,KAAK,KAAK,EAAG;QDqyBpDnpB,ACnyBC,IDmyBG,ACnyBGha,IDmyBCyhC,IAAI,ACnyBG,CDmyBFoB,ECnyBKM,KDmyBE,GAAGrnC,ICnyBO,CDmyBF,ACnyBGkE,GDmyBA2iC,KCnyBQ,IDmyBC;QACxCzoB,ACnyBC,GDmyBE,CCnyBIpe,GDmyBA2lC,ECnyBK,EDmyBD,CAACqB,ACnyBGK,ODmyBI,GAAGpnC,ECnyBK,CAACD,GDmyBA,ECnyBK,CDmyBF8mC,UAAU;QACzC9mC,ACnyBC,IAAMC,CDmyBF,IAAI0lC,CCnyBI,GDmyBA,ACnyBG0B,CDmyBFrnC,KAAK,GAAG6mC,GCnyBM,CAAC5mC,KDmyBE,CCnyBI;QDoyBnCA,ACnyBC,IAAIsf,EDmyBC,ECnyBG,EDmyBComB,CCnyBE62G,GDmyBE,ACnyBC,CDmyBAv8I,ACnyBC6oJ,MDmyBK,GAAGhiH,OCnyBQ,GDmyBE;MAEnC,ECpyBE,IAAMiiH,UAAU,GAAG1hH,YAAY,CA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AG;ECzuB5D,IAAI,CAAC2nI,CD2uBH,IAAI,CAAC3nI,gBAAgB,CC3uBK,ED2uBF0kB,CC3uBKijH,OD2uBG,CAAC3nI,eC3uBmB,CD2uBH;EC1uBnD,IAAI,CAACgoI,CD4uBH,IAAI,CAAC1+G,YC5uBgB,GAAG0+G,OD4uBG,CAAC,CAAC,SC5uBa;AAE7C,MD4uBE;AC1uBF,MD4uBE,GC5uBOiD,CD4uBPhhH,SC5uBiBghH,CAAErtJ,EAAE,ED4uBrB,AC5uBuBioC,GD4uBvB4D,OC5uBiC,EAAG,KD4uBpC,CAAuE,IAAI,CAAC70B,QAAQ;EC1uBrF,MD0uBSo0B,GC1uBA/pC,KD0uBQ,EC1uBDA,CD0uBCgrC,AC1uBC3tD,CAAC,EAA8B,WD0uBhC;IC1uBgC,ID0uB9B2sD,AC1uBEnpC,QD0uBM,EC1uBI,CD0uBJmqC,EC1uBI/4C,SAAA,CAAAnS,ED0uBJ,IC1uBI,QAAAmS,SAAA,QAAA5C,SAAA,GAAA4C,SAAA,MAAG1F,uBAAY;IAE7C,IDwuB4B09C,ACxuBxBu+E,QDwuBgC,CCxuBvB,EDwuBuBx9E,cAAA;ICtuBpC,IDsuBsCd,ACtuBhC9pC,QDsuBwC,ACtuBhC,GDsuBgC4qC,ACtuB7BprC,cDsuB6B,YCtuBd,CAACkB,WAAW,CAAED,UAAW,CAAC;IAE1D,IDouBgDspC,ACpuB3C9sD,CAAC,KAAKqK,EDouB6C,GAAAsjD,cAAA,QCpuB7B,EAAG,OAAOrsC,EAAE,CAACoyG,aAAa;IACrD,IDmuB0D3mE,ACnuBrD/sD,CAAC,KAAK6K,EDmuBuD,GAAA8iD,cAAA,aCnuBlC,EAAG,OAAOrsC,EAAE,CAACukJ,sBAAsB;IACnE,EDouBA,ECpuBK7lK,CAAC,CDouBAqoD,ICpuBKv9C,eDouBc,GAAGs9C,QAAQ,CAACE,KCpuBL,EAAG,OAAOhnC,CDouBU,CAAC,ACpuBT,CDouBU,ACpuBTykJ,sBAAsB;IACnE,EDouBA,ECpuBK/lK,CAAC,CDouBA4tD,ICpuBK5iD,iBDouBgB,GAAGo9C,QAAQ,CAACyF,CCpuBT,EAAG,OAAOvsC,EAAE,CAACikJ,IDouBa,CAAC,CAAC,kBCpuBS;IAEnE,EDmuBA,ECnuBKvlK,CAAC,CDmuBA8tD,ICnuBKxjD,mBAAQ,CDmuBW,CCnuBR,EDmuBW89C,KCnuBJ9mC,EAAE,CDmuBU,ACnuBTmyG,CDmuBU1lE,GCnuBN,iBDmuB0B,CAAC,CAAC;ICluBhE,EDouBA,ECpuBK/tD,CAAC,CDouBAguD,ICpuBKzjD,YDouBW,GAAG69C,KCpuBL,EAAG,CDouBU,CAAC6F,EAAE,CAACzrC,ECpuBPlB,EAAE,CAACgyG,EDouBW,GCpuBN;IACtC,EDquBAlrE,ECruBKpoD,CAAC,KDquBE,ACruBGwK,CDquBFyjD,EAAE,CAACzrC,OAAO,GAAG,KAAK,SCruBC,EAAG,OAAOlB,EAAE,CAAC+xG,cAAc;IACvD,EDsuBA,ECtuBKrzH,CAAC,CDsuBAsoB,ICtuBK7d,WDsuBU,GAAG8hD,ICtuBN,EAAG,MDsuBe,CAAC//B,ACtuBTlL,EAAE,CAACkyG,GAAG,CDsuBU,CAAClrG,eAAe;ICruB5D,EDuuBAikC,ECvuBKvsD,CAAC,KAAK0K,IDuuBC,CAAC8hB,OAAO,CAAClE,aCvuBK,EDuuBU,ACvuBP,GDuuBU,ICvuBHhH,CDuuBQ,CCvuBN,CAACiyG,YAAY;IACnD,EDwuBAnrE,ECxuBKpoD,CAAC,KDwuBE,ACxuBG2K,CDwuBFujD,eAAe,CAAE3B,GCxuBN,EAAG,ODwuBe,ACxuBRjrC,EDwuBU,ACxuBR,CDwuBS,ACxuBR6xG,EDwuBU1mE,GCxuBL,cDwuBuB,CAAC;ICvuB9D,EDwuBArE,ECxuBKpoD,CAAC,KDwuBE,ACxuBG4K,CDwuBFujD,MAAM,CAAET,KAAK,EAAEhB,QAAS,CAAC,ACxuBV,EAAG,OAAOprC,EAAE,CAAC8xG,UAAU;IAE/C,EDwuBAhrE,ECxuBKpoD,CAAC,KDwuBE,ACxuBGiL,CDwuBFijD,eAAe,CAAE3B,KCxuBJ,EAAG,KDwuBa,EAAE,ACxuBRjrC,CDwuBS,CCxuBP,CDwuBSmrC,ACxuBRmiH,KAAK,YDwuBqB,CAAC;ICvuB9D,EDwuBAxmH,ECxuBKpoD,CAAC,KDwuBE,ACxuBGkL,CDwuBFijD,MAAM,CAAET,KAAK,EAAEf,KCxuB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uBC,IDguBK,CAAC;IC9tB/B+Y,ID+tBC7rB,CAAC,CC/tBF,CAAKs3K,CD+tBAt/J,SAAS,CAAEhY,CAAC,CC/tBC,CD+tBC,EC/tBE,ED+tBE,CAAC8S,KAAM,CAAC,CC/tBCL,KAAK,EAAG;MDiuBxC,AC/tBC,IAAIuoF,UAAU,GAAG87E,WAAW,CAAErkK,KAAK,CAAE;MDiuBtC,AC/tBC,ID+tBG,AC/tBEuoF,CD+tBD90E,IAAI,CAACpT,IC/tBM,CD+tBD,CAAEL,GC/tBIN,ED+tBC,GAAG,CAAC,CAAE,EC/tBE,CD+tBCgC,CAAC,AC/tBC;MDguBjC,EC9tBE6mF,ED8tBE,CAAC90E,IAAI,CAACpT,EC9tBE,GD8tBG,AC9tBA,CD8tBEL,GC9tBEigK,ED8tBG,GAAG,CAAC,CAAE,GAAG1yK,CAAC,IC9tBE,CAAC,CAAC;MDguBpC,EC/tBE82K,KD+tBK,IAAI,EC/tBE,CAAErkK,KAAK,CAAE,GAAGuoF,UAAU;IDiuBpC,EC/tBE;ED+tBD,IC7tBC,OAAOA,UAAU,CAACk4E,iBAAiB,CAAC,CAAC;ID6tBtCzuK,AC3tBA,CAAC,ED2tBD;IAAAnG,ACztBAutB,KDytBA,CCztBA,CD2tBD,AC3tBM0rJ,SD2tBNx5H,MAAMA,CAAEtrC,CC3tBe,GAAG,CD2tBb,EAAE0B,CAAC,EAAEnU,CAAC,EAAE8pB,CAAC,AC3tBerX,ED2tBZ,GC3tBiB,EAAG;MD6tB5CA,AC3tBC,IAAIuoF,CD2tBA,GAAGvoF,KAAK,CC3tBE,ED2tBC,CC3tBEqkK,GD2tBE,CAAC5wJ,IAAI,CAAC29B,EC3tBG,CAAEpxC,GD2tBC,EC3tBI,CD2tBD,AC3tBG,ID2tBC,CAACgJ,MAAM;MAE9C,AC3tBC,ID2tBI,AC3tBCu/E,ID2tBG,CAACh+C,KC3tBM,KD2tBI,AC3tBC7qC,ED2tBE,OC3tBO,EAAG;QD6tBhCgC,AC3tBC6mF,CD2tBA,GAAGhjF,MC3tBO,GD2tBE,AC3tBC,CD2tBC7D,CAAC,EAAE,AC3tBAu+J,ID2tBI,CAAC5/J,KAAM,CAAC,IC3tBG,CAAC,CAAC;QD4tBnC9S,AC3tBC82K,CD2tBA,GAAG9+J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GsB,CAAC,EAAEtB,CAAC,EAAG,EAAG;MCvevD,EDyeA,ECzeIkU,EDyeC+rD,GCzeI,GAAGzmC,MDyeK,CAAEx5B,CAAC,ACzeA,CDyeE,ACzeDkU,CDyeE84B,ICzeG,EDyeG,KAAK,KAAK,EAAG;MCxe1C,ED0eA,EC1eI65I,ED0eE1mH,SC1eS,CD0eC,EC1eE,CD0eCF,AC1eA,YD0eY,CAAEjgE,CAAC,CAAE,CAACugE,aAAa;MCxelD,EDyeA,ECzeK7wB,EDyeD,CAACqpB,KCzeQ,CAACtc,KDyeE,CAAEz8C,CAAC,EAAEg9D,ACzeE,KAAK,IDyeG,ACzeC,CDyeA,CCzeG;QD0enC,ACxeC9oD,IDweG,CAACssD,ACxeC,GAAGx0B,UAAU,CAACssG,EDweC,CAAEn4E,UAAU,EAAEhD,MAAO,ACxeD,CDweE,ACxeA3jC,CDweC5N,OCxeQ,CAAC,IDweG,CAAEoxC,SAAU,CAAC;QACrEljC,ACveC,IAAK5lB,KAAK,EDueA,CAAC+lB,ECveIrmB,GDueC,CAAEupD,KCveM,CDueC,CAAC,ACveC;MDye7B,ECveE0pH,WAAW,GAAG,CAAC;IDyelB,ECveE;EDueD;IAAA3gL,ECreC,CDqeD;IAAAnG,KAAA,EAED,SAAA8iD,qBAAqBA,CAAA,EAAG;MAEvB,ACveC,IDueI,ACveEb,IDueE,CAACtT,ICveM,GAAGlV,ODueK,CCveG,CAACwoB,GDueC,IAAI,EAAG,ACveC;MACpC,EDweA,ECxeM7d,EDweF,CAACuK,KCxeS,GAAGlV,MDweE,ECxeM,CDweH,ACxeIooB,IDweAplB,MAAM,ACxeI,CDweH,ACxeI2H,CDweH,OCxeW;MD0e9C,ACxeC,IAAI2iJ,SAAS,GAAG9kI,SAAS,CAAC/C,KAAK,GAAG4nI,WAAW;MD0e9C,ACzeC,IDyeKn4I,ACzeDq4I,OAAO,GAAG,CAAE/kI,GDyeG,GAAG,GCzeG,CDyeC,ACzeA/C,CDyeCvQ,ICzeI,GAAGsT,ODyeO,ECzeE,CAAC7zB,KAAK,IAAK04J,WAAW;MD0elE,ACxeC,IDweK5mH,ACxeA/b,KAAK,KAAK,EDweE,ECxeE,CDweC,CCxeE,GDweE,CAACia,aAAa;MAEvCzvB,ECxeEo4I,SAAS,GDweG,ACxeAnyK,CDweCujB,GCxeG,CAAC1iB,GAAG,CAAEsxK,CDweA,CAAC,CAAC,MCxeO,EAAE5iI,KAAK,CAACjF,KAAK,GAAG4nI,WAAY,CAAC;MDye9D,ECxeEE,GDweI,IAAI/mL,ACxeD,CDweE,ECxeC2U,CDweE,CAAC,EAAErT,ACxeD,CDweE,ACxeDiU,GDweI0qD,ACxeD,CAAE8mH,OAAO,EAAE,CAAE7iI,CDweA,CAAC7/C,GCxeI,CAAC46C,EDweC,EAAEj/C,CAAC,ACxeC,GDweEsB,ACxeC4iD,CDweA,EAAElkD,CAAC,CCxeE,CDweC,ACxeAmuB,EDweG,GCxeE,IAAK04J,WAAY,CAAC;MAE3E,EDweA,IAAK5mH,YAAY,CAAEjgE,CAAC,CAAE,CAACgtC,MAAM,KAAK,KAAK,EAAG;MCte1C,EDweA,ECxeK94B,EDweCisD,GCxeI,KAAK,EDweC,ECxeG,CDweAF,CCxeG,WDweS,CAAEjgE,CAAC,CAAE,CAACugE,aAAa;QAClD,ACveCumH,IDueG,CAAC/tH,ICveK,GAAGpkD,IDueG,ACveC,CDueC3U,ACveAwV,CDueC,EAAEwnD,ACveA,CAAE8pH,QDueQ,CAAC,ACveA,EAAE,CAAE,CAAC;QDwerC,ACveCC,IDueG,CAACtmH,ECveG,GAAG9rD,IAAI,CAACY,GAAG,CAAEwxK,KDueG,CAAE5mH,CCveE,EAAEjsD,KAAK,CAACia,CDueA,EAAEivC,ECveI,CAAC,MDueK,CAAC,CAACxxC,YAAY,CAAEoxC,SAAU,CAAC;MCre3E,CAAC,CDseDtuB,KCteO,IAAKvK,KDseE,CAAClK,ECteK,GDseA,CAAEmjC,CCteGxpD,QDseO,CAAC,ACteC,IAAIuwB,QAAQ,KAAK,IAAI,EAAG;MDwe3D,ECteE2iJ,SAAS,GAAGnyK,IAAI,CAACa,GAAG,CAAEsxK,SAAS,EAAE,CAAE,CAAC;IDwevC,ICveGC,OAAO,GAAGpyK,IAAI,CAACY,GAAG,CAAEwxK,OAAO,EAAE5iJ,QAAQ,CAAChW,KAAM,CAAC;EDue/C,ICreC;IDqeDjoB,ECneC,CDmeD,GCneO4mI,SAAS,GAAGi6C,OAAO,GAAGD,SAAS;IDmetC/mL,ECjeC,GDieD,CCjeM+sI,CDmeP,QCnegB,CDmehBpsE,ECnemB,CAAC,IAAIosE,IDmebpsE,CAAEP,ICneoB,KAAKpoC,CDmef,EAAG,KCneoB,EAAG;MDqehD,IAAM4oC,UAAU,GAAG,IAAI,CAACxC,aAAa,CAAC95D,MAAM,IAAI,IAAI,CAACupC,gBAAgB;MCnepE;MDqeD;MACA,ACpeCm7F,IDoeIpoE,SCpeS,CDoeC,ACpeAyoE,IDoeI,CCpeC,CAAExwG,EDoeC,CAACylC,GCpeI,EAAE3uB,QAAQ,EAAE25F,MDoeK,CAAChlI,ACpeC,EAAEm1B,IDoeG,ICpeK,CDoeA,CAAC,ACpeCtlB,EDoeE,GCpeI,CAAC;MAEjE,EDoeA,ECpeImJ,IDoeE,IAAIza,CCpeG,IDoeE,CAAE,gDAAiD,CAAC;MAEpE,ACreC,IAAIonD,QAAQ,GAAG06H,cAAc;MDue9B,ACreC,IDqeKzkH,ACreA/rD,KAAK,KAAK,EDqeE,ECreE,CDqeC,CCreE;QDsetB00B,ACpeCvrB,ODoeM,EAAE,ACpeC,GAAGukC,CDoeA,SCpeU,CAAC9nC,GAAG,CAAE5F,KAAM,CAAC;QDqepC84B,ACneCgd,MDmeK,EAAE,ACneC,GAAG26H,CDmeA,oBCneqB;QDoejCpkH,ACneCvW,QAAQ,CAAC9H,IDmeG,EAAEie,ECneG,CAAE9iD,SAAU,CAAC;MDoehC,ACleC,CDkeA;MAED,IAAIujD,MAAM,GAAG,IAAI;MClehB;MDoeD;MACA,ACneC,IDmeI,ACneChoC,IDmeG,CAACylC,CCneE,CAACzkC,MAAM,EAAG,WDmeS,CAACv1B,MAAM,GAAG,CAAC,EAAG;QAE5C,ACneC,IDmeG,ACneEqrC,CDmeD2uB,OCneS,CAAC5hB,SAAS,IDmeE,CAACokB,ACneE,IDmeE,ACneE,CDmeApE,CCneG,QDmeO,CAAC;QAE5CmE,ECneEgxD,IDmeI,CCneC,CAAC6vC,CDmeC,IAAI,CAACpjG,MCneM,CAAE3uB,QAAQ,CAACgN,KDmeI,CAACokB,KAAK,CAAC,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","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '171';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst RGBDepthPacking = 3202;\nconst RGDepthPacking = 3203;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\nfunction toNormalizedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\n\t// Convert [-1, 1] to [0, 1] projection matrix\n\tm[ 2 ] = 0.5 * m[ 2 ] + 0.5 * m[ 3 ];\n\tm[ 6 ] = 0.5 * m[ 6 ] + 0.5 * m[ 7 ];\n\tm[ 10 ] = 0.5 * m[ 10 ] + 0.5 * m[ 11 ];\n\tm[ 14 ] = 0.5 * m[ 14 ] + 0.5 * m[ 15 ];\n\n}\n\nfunction toReversedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\tconst isPerspectiveMatrix = m[ 11 ] === - 1;\n\n\t// Reverse [0, 1] projection matrix\n\tif ( isPerspectiveMatrix ) {\n\n\t\tm[ 10 ] = - m[ 10 ] - 1;\n\t\tm[ 14 ] = - m[ 14 ];\n\n\t} else {\n\n\t\tm[ 10 ] = - m[ 10 ];\n\t\tm[ 14 ] = - m[ 14 ] + 1;\n\n\t}\n\n}\n\nconst LINEAR_REC709_TO_XYZ = /*@__PURE__*/ new Matrix3().set(\n\t0.4123908, 0.3575843, 0.1804808,\n\t0.2126390, 0.7151687, 0.0721923,\n\t0.0193308, 0.1191948, 0.9505322\n);\n\nconst XYZ_TO_LINEAR_REC709 = /*@__PURE__*/ new Matrix3().set(\n\t3.2409699, - 1.5373832, - 0.4986108,\n\t- 0.9692436, 1.8759675, 0.0415551,\n\t0.0556301, - 0.2039770, 1.0569715\n);\n\nfunction createColorManagement() {\n\n\tconst ColorManagement = {\n\n\t\tenabled: true,\n\n\t\tworkingColorSpace: LinearSRGBColorSpace,\n\n\t\t/**\n\t\t * Implementations of supported color spaces.\n\t\t *\n\t\t * Required:\n\t\t *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\n\t\t *\t- whitePoint: reference white [ x y ]\n\t\t *\t- transfer: transfer function (pre-defined)\n\t\t *\t- toXYZ: Matrix3 RGB to XYZ transform\n\t\t *\t- fromXYZ: Matrix3 XYZ to RGB transform\n\t\t *\t- luminanceCoefficients: RGB luminance coefficients\n\t\t *\n\t\t * Optional:\n\t\t *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\n\t\t *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\n\t\t *\n\t\t * Reference:\n\t\t * - https://www.russellcottrell.com/photo/matrixCalculator.htm\n\t\t */\n\t\tspaces: {},\n\n\t\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\t\treturn color;\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = SRGBToLinear( color.r );\n\t\t\t\tcolor.g = SRGBToLinear( color.g );\n\t\t\t\tcolor.b = SRGBToLinear( color.b );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].primaries !== this.spaces[ targetColorSpace ].primaries ) {\n\n\t\t\t\tcolor.applyMatrix3( this.spaces[ sourceColorSpace ].toXYZ );\n\t\t\t\tcolor.applyMatrix3( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ targetColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = LinearToSRGB( color.r );\n\t\t\t\tcolor.g = LinearToSRGB( color.g );\n\t\t\t\tcolor.b = LinearToSRGB( color.b );\n\n\t\t\t}\n\n\t\t\treturn color;\n\n\t\t},\n\n\t\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t\t},\n\n\t\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t\t},\n\n\t\tgetPrimaries: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].primaries;\n\n\t\t},\n\n\t\tgetTransfer: function ( colorSpace ) {\n\n\t\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\t\treturn this.spaces[ colorSpace ].transfer;\n\n\t\t},\n\n\t\tgetLuminanceCoefficients: function ( target, colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn target.fromArray( this.spaces[ colorSpace ].luminanceCoefficients );\n\n\t\t},\n\n\t\tdefine: function ( colorSpaces ) {\n\n\t\t\tObject.assign( this.spaces, colorSpaces );\n\n\t\t},\n\n\t\t// Internal APIs\n\n\t\t_getMatrix: function ( targetMatrix, sourceColorSpace, targetColorSpace ) {\n\n\t\t\treturn targetMatrix\n\t\t\t\t.copy( this.spaces[ sourceColorSpace ].toXYZ )\n\t\t\t\t.multiply( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t},\n\n\t\t_getDrawingBufferColorSpace: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].outputColorSpaceConfig.drawingBufferColorSpace;\n\n\t\t},\n\n\t\t_getUnpackColorSpace: function ( colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].workingColorSpaceConfig.unpackColorSpace;\n\n\t\t}\n\n\t};\n\n\t/******************************************************************************\n\t * sRGB definitions\n\t */\n\n\tconst REC709_PRIMARIES = [ 0.640, 0.330, 0.300, 0.600, 0.150, 0.060 ];\n\tconst REC709_LUMINANCE_COEFFICIENTS = [ 0.2126, 0.7152, 0.0722 ];\n\tconst D65 = [ 0.3127, 0.3290 ];\n\n\tColorManagement.define( {\n\n\t\t[ LinearSRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: LinearTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\tworkingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t\t[ SRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: SRGBTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t} );\n\n\treturn ColorManagement;\n\n}\n\nconst ColorManagement = /*@__PURE__*/ createColorManagement();\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\t\tthis.w /= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\t\tthis.w = e[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\t\tthis.w = clamp( this.w, min.w, max.w );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\t\tthis.w = clamp( this.w, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y &&\n\t\t\tpoint.z >= this.min.z && point.z <= this.max.z;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y &&\n\t\t\tbox.max.z >= this.min.z && box.min.z <= this.max.z;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// make sure descendants are updated if required\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tchild.updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// make sure descendants are updated\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nconst _v40 = /*@__PURE__*/ new Vector4();\nconst _v41 = /*@__PURE__*/ new Vector4();\nconst _v42 = /*@__PURE__*/ new Vector4();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic getInterpolatedAttribute( attr, i1, i2, i3, barycoord, target ) {\n\n\t\t_v40.setScalar( 0 );\n\t\t_v41.setScalar( 0 );\n\t\t_v42.setScalar( 0 );\n\n\t\t_v40.fromBufferAttribute( attr, i1 );\n\t\t_v41.fromBufferAttribute( attr, i2 );\n\t\t_v42.fromBufferAttribute( attr, i3 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( _v40, barycoord.x );\n\t\ttarget.addScaledVector( _v41, barycoord.y );\n\t\ttarget.addScaledVector( _v42, barycoord.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\t// onBeforeRender and onBeforeCompile only supported in WebGLRenderer\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {\n\n\t\tconsole.warn( 'Material: onBuild() has been removed.' ); // @deprecated, r166\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.indirect = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetIndirect( indirect ) {\n\n\t\tthis.indirect = indirect;\n\n\t\treturn this;\n\n\t}\n\n\tgetIndirect() {\n\n\t\treturn this.indirect;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute === undefined ) {\n\n\t\t\tconst position = [];\n\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t} else {\n\n\t\t\tconst l = Math.min( points.length, positionAttribute.count ); // make sure data do not exceed buffer size\n\n\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tpositionAttribute.setXYZ( i, point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tif ( points.length > positionAttribute.count ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry.' );\n\n\t\t\t}\n\n\t\t\tpositionAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tconst barycoord = new Vector3();\n\t\tTriangle.getBarycoord( _intersectionPoint, _vA$1, _vB$1, _vC$1, barycoord );\n\n\t\tif ( uv ) {\n\n\t\t\tintersection.uv = Triangle.getInterpolatedAttribute( uv, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\tintersection.uv1 = Triangle.getInterpolatedAttribute( uv1, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\tintersection.normal = Triangle.getInterpolatedAttribute( normal, a, b, c, barycoord, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.barycoord = barycoord;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Copies the result into the target Vector2, where x is width and y is height.\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tremoveLevel( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0; i < levels.length; i ++ ) {\n\n\t\t\tif ( levels[ i ].distance === distance ) {\n\n\t\t\t\tconst removedElements = levels.splice( i, 1 );\n\t\t\t\tthis.remove( removedElements[ 0 ].object );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$5.copy( this.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$5 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$4 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ).fill( 1 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$3.center.set( 0, 0, 0 );\n\t\t_sphere$3.radius = 0.7071067811865476;\n\t\t_sphere$3.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction ascIdSort( a, b ) {\n\n\treturn a - b;\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( start, count, z, index ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\t\t\t\tindex: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = start;\n\t\titem.count = count;\n\t\titem.z = z;\n\t\titem.index = index;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\n// safely copies array contents to a potentially smaller array\nfunction copyArrayContents( src, target ) {\n\n\tif ( src.constructor !== target.constructor ) {\n\n\t\t// if arrays are of a different type (eg due to index size increasing) then data must be per-element copied\n\t\tconst len = Math.min( src.length, target.length );\n\t\tfor ( let i = 0; i < len; i ++ ) {\n\n\t\t\ttarget[ i ] = src[ i ];\n\n\t\t}\n\n\t} else {\n\n\t\t// if the arrays use the same data layout we can use a fast block copy\n\t\tconst len = Math.min( src.length, target.length );\n\t\ttarget.set( new src.constructor( src.buffer, 0, len ) );\n\n\t}\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxInstanceCount() {\n\n\t\treturn this._maxInstanceCount;\n\n\t}\n\n\tget instanceCount() {\n\n\t\treturn this._instanceInfo.length - this._availableInstanceIds.length;\n\n\t}\n\n\tget unusedVertexCount() {\n\n\t\treturn this._maxVertexCount - this._nextVertexStart;\n\n\t}\n\n\tget unusedIndexCount() {\n\n\t\treturn this._maxIndexCount - this._nextIndexStart;\n\n\t}\n\n\tconstructor( maxInstanceCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\t// stores visible, active, and geometry id per instance and reserved buffer ranges for geometries\n\t\tthis._instanceInfo = [];\n\t\tthis._geometryInfo = [];\n\n\t\t// instance, geometry ids that have been set as inactive, and are available to be overwritten\n\t\tthis._availableInstanceIds = [];\n\t\tthis._availableGeometryIds = [];\n\n\t\t// used to track where the next point is that geometry should be inserted\n\t\tthis._nextIndexStart = 0;\n\t\tthis._nextVertexStart = 0;\n\t\tthis._geometryCount = 0;\n\n\t\t// flags\n\t\tthis._visibilityChanged = true;\n\t\tthis._geometryInitialized = false;\n\n\t\t// cached user options\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\t// buffers for multi draw\n\t\tthis._multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\t\tthis._indirectTexture = null;\n\t\tthis._colorsTexture = null;\n\n\t\tthis._initMatricesTexture();\n\t\tthis._initIndirectTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initIndirectTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\tconst indirectArray = new Uint32Array( size * size );\n\t\tconst indirectTexture = new DataTexture( indirectArray, size, size, RedIntegerFormat, UnsignedIntType );\n\n\t\tthis._indirectTexture = indirectTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\t// Reserve last u16 index for primitive restart.\n\t\t\t\tconst indexArray = maxVertexCount > 65535\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `THREE.BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvalidateInstanceId( instanceId ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tif ( instanceId < 0 || instanceId >= instanceInfo.length || instanceInfo[ instanceId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid instanceId ${instanceId}. Instance is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\tvalidateGeometryId( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId < 0 || geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid geometryId ${geometryId}. Geometry is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddInstance( geometryId ) {\n\n\t\tconst atCapacity = this._instanceInfo.length >= this.maxInstanceCount;\n\n\t\t// ensure we're not over geometry\n\t\tif ( atCapacity && this._availableInstanceIds.length === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\tconst instanceInfo = {\n\t\t\tvisible: true,\n\t\t\tactive: true,\n\t\t\tgeometryIndex: geometryId,\n\t\t};\n\n\t\tlet drawId = null;\n\n\t\t// Prioritize using previously freed instance ids\n\t\tif ( this._availableInstanceIds.length > 0 ) {\n\n\t\t\tthis._availableInstanceIds.sort( ascIdSort );\n\n\t\t\tdrawId = this._availableInstanceIds.shift();\n\t\t\tthis._instanceInfo[ drawId ] = instanceInfo;\n\n\t\t} else {\n\n\t\t\tdrawId = this._instanceInfo.length;\n\t\t\tthis._instanceInfo.push( instanceInfo );\n\n\t\t}\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\t_matrix$1.identity().toArray( matricesTexture.image.data, drawId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tif ( colorsTexture ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, drawId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn drawId;\n\n\t}\n\n\taddGeometry( geometry, reservedVertexCount = - 1, reservedIndexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst geometryInfo = {\n\t\t\t// geometry information\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\treservedVertexCount: - 1,\n\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t\treservedIndexCount: - 1,\n\n\t\t\t// draw range information\n\t\t\tstart: - 1,\n\t\t\tcount: - 1,\n\n\t\t\t// state\n\t\t\tboundingBox: null,\n\t\t\tboundingSphere: null,\n\t\t\tactive: true,\n\t\t};\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tgeometryInfo.vertexStart = this._nextVertexStart;\n\t\tgeometryInfo.reservedVertexCount = reservedVertexCount === - 1 ? geometry.getAttribute( 'position' ).count : reservedVertexCount;\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tgeometryInfo.indexStart = this._nextIndexStart;\n\t\t\tgeometryInfo.reservedIndexCount = reservedIndexCount === - 1 ? index.count : reservedIndexCount;\n\n\t\t}\n\n\t\tif (\n\t\t\tgeometryInfo.indexStart !== - 1 &&\n\t\t\tgeometryInfo.indexStart + geometryInfo.reservedIndexCount > this._maxIndexCount ||\n\t\t\tgeometryInfo.vertexStart + geometryInfo.reservedVertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\t// update id\n\t\tlet geometryId;\n\t\tif ( this._availableGeometryIds.length > 0 ) {\n\n\t\t\tthis._availableGeometryIds.sort( ascIdSort );\n\n\t\t\tgeometryId = this._availableGeometryIds.shift();\n\t\t\tgeometryInfoList[ geometryId ] = geometryInfo;\n\n\n\t\t} else {\n\n\t\t\tgeometryId = this._geometryCount;\n\t\t\tthis._geometryCount ++;\n\t\t\tgeometryInfoList.push( geometryInfo );\n\n\t\t}\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\t// increment the next geometry position\n\t\tthis._nextIndexStart = geometryInfo.indexStart + geometryInfo.reservedIndexCount;\n\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( geometryId, geometry ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > geometryInfo.reservedIndexCount ||\n\t\t\tgeometry.attributes.position.count > geometryInfo.reservedVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry buffer data over\n\t\tconst vertexStart = geometryInfo.vertexStart;\n\t\tconst reservedVertexCount = geometryInfo.reservedVertexCount;\n\t\tgeometryInfo.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = reservedVertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = geometryInfo.indexStart;\n\t\t\tconst reservedIndexCount = geometryInfo.reservedIndexCount;\n\t\t\tgeometryInfo.indexCount = geometry.getIndex().count;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedIndexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, geometryInfo.reservedIndexCount );\n\n\t\t}\n\n\t\t// update the draw range\n\t\tgeometryInfo.start = hasIndex ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\t\tgeometryInfo.count = hasIndex ? geometryInfo.indexCount : geometryInfo.vertexCount;\n\n\t\t// store the bounding boxes\n\t\tgeometryInfo.boundingBox = null;\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tgeometryInfo.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tgeometryInfo.boundingSphere = null;\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tgeometryInfo.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn geometryId;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// delete any instances associated with this geometry\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].geometryIndex === geometryId ) {\n\n\t\t\t\tthis.deleteInstance( i );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometryInfoList[ geometryId ].active = false;\n\t\tthis._availableGeometryIds.push( geometryId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteInstance( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tthis._instanceInfo[ instanceId ].active = false;\n\t\tthis._availableInstanceIds.push( instanceId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\toptimize() {\n\n\t\t// track the next indices to copy data to\n\t\tlet nextVertexStart = 0;\n\t\tlet nextIndexStart = 0;\n\n\t\t// Iterate over all geometry ranges in order sorted from earliest in the geometry buffer to latest\n\t\t// in the geometry buffer. Because draw range objects can be reused there is no guarantee of their order.\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst indices = geometryInfoList\n\t\t\t.map( ( e, i ) => i )\n\t\t\t.sort( ( a, b ) => {\n\n\t\t\t\treturn geometryInfoList[ a ].vertexStart - geometryInfoList[ b ].vertexStart;\n\n\t\t\t} );\n\n\t\tconst geometry = this.geometry;\n\t\tfor ( let i = 0, l = geometryInfoList.length; i < l; i ++ ) {\n\n\t\t\t// if a geometry range is inactive then don't copy anything\n\t\t\tconst index = indices[ i ];\n\t\t\tconst geometryInfo = geometryInfoList[ index ];\n\t\t\tif ( geometryInfo.active === false ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// if a geometry contains an index buffer then shift it, as well\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\tif ( geometryInfo.indexStart !== nextIndexStart ) {\n\n\t\t\t\t\tconst { indexStart, vertexStart, reservedIndexCount } = geometryInfo;\n\t\t\t\t\tconst index = geometry.index;\n\t\t\t\t\tconst array = index.array;\n\n\t\t\t\t\t// shift the index pointers based on how the vertex data will shift\n\t\t\t\t\t// adjusting the index must happen first so the original vertex start value is available\n\t\t\t\t\tconst elementDelta = nextVertexStart - vertexStart;\n\t\t\t\t\tfor ( let j = indexStart; j < indexStart + reservedIndexCount; j ++ ) {\n\n\t\t\t\t\t\tarray[ j ] = array[ j ] + elementDelta;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tindex.array.copyWithin( nextIndexStart, indexStart, indexStart + reservedIndexCount );\n\t\t\t\t\tindex.addUpdateRange( nextIndexStart, reservedIndexCount );\n\n\t\t\t\t\tgeometryInfo.indexStart = nextIndexStart;\n\n\t\t\t\t}\n\n\t\t\t\tnextIndexStart += geometryInfo.reservedIndexCount;\n\n\t\t\t}\n\n\t\t\t// if a geometry needs to be moved then copy attribute data to overwrite unused space\n\t\t\tif ( geometryInfo.vertexStart !== nextVertexStart ) {\n\n\t\t\t\tconst { vertexStart, reservedVertexCount } = geometryInfo;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tfor ( const key in attributes ) {\n\n\t\t\t\t\tconst attribute = attributes[ key ];\n\t\t\t\t\tconst { array, itemSize } = attribute;\n\t\t\t\t\tarray.copyWithin( nextVertexStart * itemSize, vertexStart * itemSize, ( vertexStart + reservedVertexCount ) * itemSize );\n\t\t\t\t\tattribute.addUpdateRange( nextVertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tgeometryInfo.vertexStart = nextVertexStart;\n\n\t\t\t}\n\n\t\t\tnextVertexStart += geometryInfo.reservedVertexCount;\n\t\t\tgeometryInfo.start = geometry.index ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\n\t\t\t// step the next geometry points to the shifted position\n\t\t\tthis._nextIndexStart = geometry.index ? geometryInfo.indexStart + geometryInfo.reservedIndexCount : 0;\n\t\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingBox === null ) {\n\n\t\t\tconst box = new Box3();\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tgeometryInfo.boundingBox = box;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingBox );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingSphere === null ) {\n\n\t\t\tconst sphere = new Sphere();\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tgeometryInfo.boundingSphere = sphere;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingSphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tmatrix.toArray( matricesArray, instanceId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn matrix.fromArray( this._matricesTexture.image.data, instanceId * 16 );\n\n\t}\n\n\tsetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\tcolor.toArray( this._colorsTexture.image.data, instanceId * 4 );\n\t\tthis._colorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn color.fromArray( this._colorsTexture.image.data, instanceId * 4 );\n\n\t}\n\n\tsetVisibleAt( instanceId, value ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._instanceInfo[ instanceId ].visible === value ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis._instanceInfo[ instanceId ].visible = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].visible;\n\n\t}\n\n\tsetGeometryIdAt( instanceId, geometryId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tthis._instanceInfo[ instanceId ].geometryIndex = geometryId;\n\n\t\treturn this;\n\n\t}\n\n\tgetGeometryIdAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].geometryIndex;\n\n\t}\n\n\tgetGeometryRangeAt( geometryId, target = {} ) {\n\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\ttarget.vertexStart = geometryInfo.vertexStart;\n\t\ttarget.vertexCount = geometryInfo.vertexCount;\n\t\ttarget.reservedVertexCount = geometryInfo.reservedVertexCount;\n\n\t\ttarget.indexStart = geometryInfo.indexStart;\n\t\ttarget.indexCount = geometryInfo.indexCount;\n\t\ttarget.reservedIndexCount = geometryInfo.reservedIndexCount;\n\n\t\ttarget.start = geometryInfo.start;\n\t\ttarget.count = geometryInfo.count;\n\n\t\treturn target;\n\n\t}\n\n\tsetInstanceCount( maxInstanceCount ) {\n\n\t\t// shrink the available instances as much as possible\n\t\tconst availableInstanceIds = this._availableInstanceIds;\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tavailableInstanceIds.sort( ascIdSort );\n\t\twhile ( availableInstanceIds[ availableInstanceIds.length - 1 ] === instanceInfo.length ) {\n\n\t\t\tinstanceInfo.pop();\n\t\t\tavailableInstanceIds.pop();\n\n\t\t}\n\n\t\t// throw an error if it can't be shrunk to the desired size\n\t\tif ( maxInstanceCount < instanceInfo.length ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Instance ids outside the range ${ maxInstanceCount } are being used. Cannot shrink instance count.` );\n\n\t\t}\n\n\t\t// copy the multi draw counts\n\t\tconst multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tconst multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tcopyArrayContents( this._multiDrawCounts, multiDrawCounts );\n\t\tcopyArrayContents( this._multiDrawStarts, multiDrawStarts );\n\n\t\tthis._multiDrawCounts = multiDrawCounts;\n\t\tthis._multiDrawStarts = multiDrawStarts;\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\n\t\t// update texture data for instance sampling\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst colorsTexture = this._colorsTexture;\n\n\t\tindirectTexture.dispose();\n\t\tthis._initIndirectTexture();\n\t\tcopyArrayContents( indirectTexture.image.data, this._indirectTexture.image.data );\n\n\t\tmatricesTexture.dispose();\n\t\tthis._initMatricesTexture();\n\t\tcopyArrayContents( matricesTexture.image.data, this._matricesTexture.image.data );\n\n\t\tif ( colorsTexture ) {\n\n\t\t\tcolorsTexture.dispose();\n\t\t\tthis._initColorsTexture();\n\t\t\tcopyArrayContents( colorsTexture.image.data, this._colorsTexture.image.data );\n\n\t\t}\n\n\t}\n\n\tsetGeometrySize( maxVertexCount, maxIndexCount ) {\n\n\t\t// Check if we can shrink to the requested vertex attribute size\n\t\tconst validRanges = [ ...this._geometryInfo ].filter( info => info.active );\n\t\tconst requiredVertexLength = Math.max( ...validRanges.map( range => range.vertexStart + range.reservedVertexCount ) );\n\t\tif ( requiredVertexLength > maxVertexCount ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry vertex values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t}\n\n\t\t// Check if we can shrink to the requested index attribute size\n\t\tif ( this.geometry.index ) {\n\n\t\t\tconst requiredIndexLength = Math.max( ...validRanges.map( range => range.indexStart + range.reservedIndexCount ) );\n\t\t\tif ( requiredIndexLength > maxIndexCount ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Geometry index values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\t// dispose of the previous geometry\n\t\tconst oldGeometry = this.geometry;\n\t\toldGeometry.dispose();\n\n\t\t// recreate the geometry needed based on the previous variant\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tif ( this._geometryInitialized ) {\n\n\t\t\tthis._geometryInitialized = false;\n\t\t\tthis.geometry = new BufferGeometry();\n\t\t\tthis._initializeGeometry( oldGeometry );\n\n\t\t}\n\n\t\t// copy data from the previous geometry\n\t\tconst geometry = this.geometry;\n\t\tif ( oldGeometry.index ) {\n\n\t\t\tcopyArrayContents( oldGeometry.index.array, geometry.index.array );\n\n\t\t}\n\n\t\tfor ( const key in oldGeometry.attributes ) {\n\n\t\t\tcopyArrayContents( oldGeometry.attributes[ key ].array, geometry.attributes[ key ].array );\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( ! instanceInfo[ i ].visible || ! instanceInfo[ i ].active ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t_mesh.geometry.setDrawRange( geometryInfo.start, geometryInfo.count );\n\n\t\t\t// get the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._geometryInfo = source._geometryInfo.map( info => ( {\n\t\t\t...info,\n\n\t\t\tboundingBox: info.boundingBox !== null ? info.boundingBox.clone() : null,\n\t\t\tboundingSphere: info.boundingSphere !== null ? info.boundingSphere.clone() : null,\n\t\t} ) );\n\t\tthis._instanceInfo = source._instanceInfo.map( info => ( { ...info } ) );\n\n\t\tthis._maxInstanceCount = source._maxInstanceCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.data.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.data.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tthis._indirectTexture.dispose();\n\t\tthis._indirectTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst indirectArray = indirectTexture.image.data;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_matrix$1\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_matrix$1,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet multiDrawCount = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_matrix$1.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _matrix$1 );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _matrix$1 );\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( geometryInfo.start, geometryInfo.count, z, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ multiDrawCount ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ multiDrawCount ] = item.count;\n\t\t\t\tindirectArray[ multiDrawCount ] = item.index;\n\t\t\t\tmultiDrawCount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tmultiDrawStarts[ multiDrawCount ] = geometryInfo.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ multiDrawCount ] = geometryInfo.count;\n\t\t\t\t\t\tindirectArray[ multiDrawCount ] = i;\n\t\t\t\t\t\tmultiDrawCount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tindirectTexture.needsUpdate = true;\n\t\tthis._multiDrawCount = multiDrawCount;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: a,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tbarycoord: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tfaceIndex: null,\n\t\t\tbarycoord: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tif ( radiusTop > 0 || y !== 0 ) {\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( radiusBottom > 0 || y !== heightSegments - 1 ) {\n\n\t\t\t\t\t\tindices.push( b, c, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.intensity = 1;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.intensity = source.intensity;\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.intensity !== 1 ) object.intensity = this.intensity;\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = this.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tcreateMaterialFromType( type ) {\n\n\t\treturn MaterialLoader.createMaterialFromType( type );\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tbindLightTargets( object ) {\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\n\n\t\t\t\tconst uuid = child.target;\n\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\n\n\t\t\t\tif ( target !== undefined ) {\n\n\t\t\t\t\tchild.target = target;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.target = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn performance.now();\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop( delay = 0 ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop( this.context.currentTime + delay );\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\t\tthis._progress = 0;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.sourceType !== 'buffer' ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio source type cannot be copied.' );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.autoplay = source.autoplay;\n\n\t\tthis.buffer = source.buffer;\n\t\tthis.detune = source.detune;\n\t\tthis.loop = source.loop;\n\t\tthis.loopStart = source.loopStart;\n\t\tthis.loopEnd = source.loopEnd;\n\t\tthis.offset = source.offset;\n\t\tthis.duration = source.duration;\n\t\tthis.playbackRate = source.playbackRate;\n\t\tthis.hasPlaybackControl = source.hasPlaybackControl;\n\t\tthis.sourceType = source.sourceType;\n\n\t\tthis.filters = source.filters.slice();\n\n\t\treturn this;\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor( this.listener ).copy( this, recursive );\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = clamp( this.phi, EPS, Math.PI - EPS );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix2 {\n\n\tconstructor( n11, n12, n21, n22 ) {\n\n\t\tMatrix2.prototype.isMatrix2 = true;\n\n\t\tthis.elements = [\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n21, n22 );\n\n\t\t}\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( n11, n12, n21, n22 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 2 ] = n12;\n\t\tte[ 1 ] = n21; te[ 3 ] = n22;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Controls extends EventDispatcher {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\tthis.enabled = true;\n\n\t\tthis.state = - 1;\n\n\t\tthis.keys = {};\n\t\tthis.mouseButtons = { LEFT: null, MIDDLE: null, RIGHT: null };\n\t\tthis.touches = { ONE: null, TWO: null };\n\n\t}\n\n\tconnect() {}\n\n\tdisconnect() {}\n\n\tdispose() {}\n\n\tupdate( /* delta */ ) {}\n\n}\n\nfunction contain( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t} else {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction cover( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t} else {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction fill( texture ) {\n\n\ttexture.repeat.x = 1;\n\ttexture.repeat.y = 1;\n\n\ttexture.offset.x = 0;\n\ttexture.offset.y = 0;\n\n\treturn texture;\n\n}\n\n\n\n/**\n * Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.\n */\nfunction getByteLength( width, height, format, type ) {\n\n\tconst typeByteLength = getTextureTypeByteLength( type );\n\n\tswitch ( format ) {\n\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n\t\tcase AlphaFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceAlphaFormat:\n\t\t\treturn width * height * 2;\n\t\tcase RedFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RedIntegerFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGIntegerFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBFormat:\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAIntegerFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n\t\tcase RGB_S3TC_DXT1_Format:\n\t\tcase RGBA_S3TC_DXT1_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_S3TC_DXT3_Format:\n\t\tcase RGBA_S3TC_DXT5_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n\t\tcase RGB_PVRTC_2BPPV1_Format:\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\n\t\tcase RGB_PVRTC_4BPPV1_Format:\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\n\t\tcase RGB_ETC1_Format:\n\t\tcase RGB_ETC2_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_ETC2_EAC_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\n\t\tcase RGBA_ASTC_4x4_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x4_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x5_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x5_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x6_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x5_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_8x6_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x8_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x5_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_10x6_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_10x8_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x10_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x10_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x12_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\n\t\tcase RGBA_BPTC_Format:\n\t\tcase RGB_BPTC_SIGNED_Format:\n\t\tcase RGB_BPTC_UNSIGNED_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\n\t\tcase RED_RGTC1_Format:\n\t\tcase SIGNED_RED_RGTC1_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\n\t\tcase RED_GREEN_RGTC2_Format:\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t}\n\n\tthrow new Error(\n\t\t`Unable to determine texture byte length for ${format} format.`,\n\t);\n\n}\n\nfunction getTextureTypeByteLength( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase UnsignedByteType:\n\t\tcase ByteType:\n\t\t\treturn { byteLength: 1, components: 1 };\n\t\tcase UnsignedShortType:\n\t\tcase ShortType:\n\t\tcase HalfFloatType:\n\t\t\treturn { byteLength: 2, components: 1 };\n\t\tcase UnsignedShort4444Type:\n\t\tcase UnsignedShort5551Type:\n\t\t\treturn { byteLength: 2, components: 4 };\n\t\tcase UnsignedIntType:\n\t\tcase IntType:\n\t\tcase FloatType:\n\t\t\treturn { byteLength: 4, components: 1 };\n\t\tcase UnsignedInt5999Type:\n\t\t\treturn { byteLength: 4, components: 3 };\n\n\t}\n\n\tthrow new Error( `Unknown texture type ${type}.` );\n\n}\n\nconst TextureUtils = {\n\tcontain,\n\tcover,\n\tfill,\n\tgetByteLength\n};\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget { // @deprecated, r162\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tconsole.warn( 'THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the \"count\" parameter to enable MRT.' );\n\n\t\tsuper( width, height, { ...options, count } );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, Controls, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RAD2DEG, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDepthPacking, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGDepthPacking, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, arrayNeedsUint32, cloneUniforms, createCanvasElement, createElementNS, getByteLength, getUnlitUniformColorSpace, mergeUniforms, probeAsync, toNormalizedProjectionMatrix, toReversedProjectionMatrix, warnOnce };\n","/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nimport { Color, Matrix3, Vector2, mergeUniforms, Vector3, CubeUVReflectionMapping, Mesh, BoxGeometry, ShaderMaterial, cloneUniforms, BackSide, ColorManagement, SRGBTransfer, PlaneGeometry, FrontSide, getUnlitUniformColorSpace, Euler, Matrix4, IntType, RGBAFormat, HalfFloatType, UnsignedByteType, FloatType, Plane, EquirectangularReflectionMapping, EquirectangularRefractionMapping, WebGLCubeRenderTarget, CubeReflectionMapping, CubeRefractionMapping, PerspectiveCamera, NoToneMapping, MeshBasicMaterial, BufferGeometry, BufferAttribute, WebGLRenderTarget, NoBlending, OrthographicCamera, LinearFilter, LinearSRGBColorSpace, warnOnce, arrayNeedsUint32, Uint32BufferAttribute, Uint16BufferAttribute, Vector4, DataArrayTexture, LessEqualCompare, Texture, DepthTexture, Data3DTexture, CubeTexture, GLSL3, CustomToneMapping, NeutralToneMapping, AgXToneMapping, ACESFilmicToneMapping, CineonToneMapping, ReinhardToneMapping, LinearToneMapping, PCFShadowMap, PCFSoftShadowMap, VSMShadowMap, LinearTransfer, AddOperation, MixOperation, MultiplyOperation, ObjectSpaceNormalMap, TangentSpaceNormalMap, NormalBlending, DoubleSide, UniformsUtils, Layers, Frustum, MeshDepthMaterial, RGBADepthPacking, MeshDistanceMaterial, NearestFilter, LessEqualDepth, AddEquation, SubtractEquation, ReverseSubtractEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor, ConstantColorFactor, OneMinusConstantColorFactor, ConstantAlphaFactor, OneMinusConstantAlphaFactor, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, CullFaceNone, CullFaceBack, CullFaceFront, MinEquation, MaxEquation, NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessDepth, AlwaysDepth, NeverDepth, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestMipmapNearestFilter, NearestMipmapLinearFilter, LinearMipmapNearestFilter, LinearMipmapLinearFilter, NeverCompare, AlwaysCompare, LessCompare, EqualCompare, GreaterEqualCompare, GreaterCompare, NotEqualCompare, NoColorSpace, DepthStencilFormat, getByteLength, UnsignedIntType, UnsignedInt248Type, UnsignedShortType, DepthFormat, createElementNS, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedInt5999Type, ByteType, ShortType, AlphaFormat, RGBFormat, LuminanceFormat, LuminanceAlphaFormat, RedFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_BPTC_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RED_RGTC1_Format, SIGNED_RED_RGTC1_Format, RED_GREEN_RGTC2_Format, SIGNED_RED_GREEN_RGTC2_Format, Group, EventDispatcher, ArrayCamera, RAD2DEG, createCanvasElement, SRGBColorSpace, REVISION, toNormalizedProjectionMatrix, toReversedProjectionMatrix, probeAsync, WebGLCoordinateSystem } from './three.core.js';\nexport { AdditiveAnimationBlendMode, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxHelper, BufferGeometryLoader, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CircleGeometry, Clock, ColorKeyframeTrack, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, Controls, CubeCamera, CubeTextureLoader, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceFrontBack, Curve, CurvePath, CylinderGeometry, Cylindrical, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualStencilFunc, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Fog, FogExp2, FramebufferTexture, GLBufferAttribute, GLSL1, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NeverStencilFunc, NormalAnimationBlendMode, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, OctahedronGeometry, Path, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RGBDepthPacking, RGBIntegerFormat, RGDepthPacking, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RenderTarget, ReplaceStencilOp, RingGeometry, Scene, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, TOUCH, TetrahedronGeometry, TextureLoader, TextureUtils, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLMultipleRenderTargets, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroSlopeEnding, ZeroStencilOp } from './three.core.js';\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl ) {\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\t// Before applying update ranges, we merge any adjacent / overlapping\n\t\t\t// ranges to reduce load on `gl.bufferSubData`. Empirically, this has led\n\t\t\t// to performance improvements for applications which make heavy use of\n\t\t\t// update ranges. Likely due to GPU command overhead.\n\t\t\t//\n\t\t\t// Note that to reduce garbage collection between frames, we merge the\n\t\t\t// update ranges in-place. This is safe because this method will clear the\n\t\t\t// update ranges once updated.\n\n\t\t\tupdateRanges.sort( ( a, b ) => a.start - b.start );\n\n\t\t\t// To merge the update ranges in-place, we work from left to right in the\n\t\t\t// existing updateRanges array, merging ranges. This may result in a final\n\t\t\t// array which is smaller than the original. This index tracks the last\n\t\t\t// index representing a merged range, any data after this index can be\n\t\t\t// trimmed once the merge algorithm is completed.\n\t\t\tlet mergeIndex = 0;\n\n\t\t\tfor ( let i = 1; i < updateRanges.length; i ++ ) {\n\n\t\t\t\tconst previousRange = updateRanges[ mergeIndex ];\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\t// We add one here to merge adjacent ranges. This is safe because ranges\n\t\t\t\t// operate over positive integers.\n\t\t\t\tif ( range.start <= previousRange.start + previousRange.count + 1 ) {\n\n\t\t\t\t\tpreviousRange.count = Math.max(\n\t\t\t\t\t\tpreviousRange.count,\n\t\t\t\t\t\trange.start + range.count - previousRange.start\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\t++ mergeIndex;\n\t\t\t\t\tupdateRanges[ mergeIndex ] = range;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Trim the array to only contain the merged ranges.\n\t\t\tupdateRanges.length = mergeIndex + 1;\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\n\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\tdiffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\\n\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n\\t#endif\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\t#if ! defined( GL_ANGLE_multi_draw )\\n\\t#define gl_DrawID _gl_DrawID\\n\\tuniform int _gl_DrawID;\\n\\t#endif\\n\\tuniform highp sampler2D batchingTexture;\\n\\tuniform highp usampler2D batchingIdTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n\\tfloat getIndirectIndex( const in int i ) {\\n\\t\\tint size = textureSize( batchingIdTexture, 0 ).x;\\n\\t\\tint x = i % size;\\n\\t\\tint y = i / size;\\n\\t\\treturn float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\\n\\t}\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tuniform sampler2D batchingColorTexture;\\n\\tvec3 getBatchingColor( const in float i ) {\\n\\t\\tint size = textureSize( batchingColorTexture, 0 ).x;\\n\\t\\tint j = int( i );\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\treturn texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#ifdef ALPHA_TO_COVERAGE\\n\\t\\tfloat distanceToPlane, distanceGradient;\\n\\t\\tfloat clipOpacity = 1.0;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\tclipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\tif ( clipOpacity == 0.0 ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tfloat unionClipOpacity = 1.0;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tdistanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\\n\\t\\t\\t\\tdistanceGradient = fwidth( distanceToPlane ) / 2.0;\\n\\t\\t\\t\\tunionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tclipOpacity *= 1.0 - unionClipOpacity;\\n\\t\\t#endif\\n\\t\\tdiffuseColor.a *= clipOpacity;\\n\\t\\tif ( diffuseColor.a == 0.0 ) discard;\\n\\t#else\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\t\\tbool clipped = true;\\n\\t\\t\\t#pragma unroll_loop_start\\n\\t\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t\\t}\\n\\t\\t\\t#pragma unroll_loop_end\\n\\t\\t\\tif ( clipped ) discard;\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\\n#ifdef USE_BATCHING_COLOR\\n\\tvec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\\n\\tvColor.xyz *= batchingColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\\n\\t\\temissiveColor = sRGBTransferEOTF( emissiveColor );\\n\\t#endif\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"vec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferEOTF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform mat3 envMapRotation;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_DISPERSION\\n\\tmaterial.dispersion = dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\tfloat dispersion;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tgl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tvFragDepth = 1.0 + gl_Position.w;\\n\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphinstance_vertex = \"#ifdef USE_INSTANCING_MORPH\\n\\tfloat morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\tfloat morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tmorphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\\n\\t}\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_INSTANCING_MORPH\\n\\t\\tuniform float morphTargetBaseInfluence;\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t#endif\\n\\tuniform sampler2DArray morphTargetsTexture;\\n\\tuniform ivec2 morphTargetsTextureSize;\\n\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t}\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t}\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\\nconst float Inv255 = 1. / 255.;\\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec4( 0., 0., 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec4( 1., 1., 1., 1. );\\n\\tfloat vuf;\\n\\tfloat af = modf( v * PackFactors.a, vuf );\\n\\tfloat bf = modf( vuf * ShiftRight8, vuf );\\n\\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\\treturn vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\\n}\\nvec3 packDepthToRGB( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec3( 0., 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec3( 1., 1., 1. );\\n\\tfloat vuf;\\n\\tfloat bf = modf( v * PackFactors.b, vuf );\\n\\tfloat gf = modf( vuf * ShiftRight8, vuf );\\n\\treturn vec3( vuf * Inv255, gf * PackUpscale, bf );\\n}\\nvec2 packDepthToRG( const in float v ) {\\n\\tif( v <= 0.0 )\\n\\t\\treturn vec2( 0., 0. );\\n\\tif( v >= 1.0 )\\n\\t\\treturn vec2( 1., 1. );\\n\\tfloat vuf;\\n\\tfloat gf = modf( v * 256., vuf );\\n\\treturn vec2( vuf * Inv255, gf );\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors4 );\\n}\\nfloat unpackRGBToDepth( const in vec3 v ) {\\n\\treturn dot( v, UnpackFactors3 );\\n}\\nfloat unpackRGToDepth( const in vec2 v ) {\\n\\treturn v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\\n}\\nvec4 pack2HalfToRGBA( const in vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( const in vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\t\\n\\t\\tfloat lightToPositionLength = length( lightToPosition );\\n\\t\\tif ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\\n\\t\\t\\tfloat dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\t\\tdp += shadowBias;\\n\\t\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\t\\tshadow = (\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tshadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn mix( 1.0, shadow, shadowIntensity );\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowIntensity;\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 CineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.6605, - 0.1246, - 0.0182 ),\\n\\tvec3( - 0.5876, 1.1329, - 0.1006 ),\\n\\tvec3( - 0.0728, - 0.0083, 1.1187 )\\n);\\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\\n\\tvec3( 0.6274, 0.0691, 0.0164 ),\\n\\tvec3( 0.3293, 0.9195, 0.0880 ),\\n\\tvec3( 0.0433, 0.0113, 0.8956 )\\n);\\nvec3 agxDefaultContrastApprox( vec3 x ) {\\n\\tvec3 x2 = x * x;\\n\\tvec3 x4 = x2 * x2;\\n\\treturn + 15.5 * x4 * x2\\n\\t\\t- 40.14 * x4 * x\\n\\t\\t+ 31.96 * x4\\n\\t\\t- 6.868 * x2 * x\\n\\t\\t+ 0.4298 * x2\\n\\t\\t+ 0.1191 * x\\n\\t\\t- 0.00232;\\n}\\nvec3 AgXToneMapping( vec3 color ) {\\n\\tconst mat3 AgXInsetMatrix = mat3(\\n\\t\\tvec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\\n\\t\\tvec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\\n\\t\\tvec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\\n\\t);\\n\\tconst mat3 AgXOutsetMatrix = mat3(\\n\\t\\tvec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\\n\\t\\tvec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\\n\\t\\tvec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\\n\\t);\\n\\tconst float AgxMinEv = - 12.47393;\\tconst float AgxMaxEv = 4.026069;\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\\n\\tcolor = AgXInsetMatrix * color;\\n\\tcolor = max( color, 1e-10 );\\tcolor = log2( color );\\n\\tcolor = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\tcolor = agxDefaultContrastApprox( color );\\n\\tcolor = AgXOutsetMatrix * color;\\n\\tcolor = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\\n\\tcolor = LINEAR_REC2020_TO_LINEAR_SRGB * color;\\n\\tcolor = clamp( color, 0.0, 1.0 );\\n\\treturn color;\\n}\\nvec3 NeutralToneMapping( vec3 color ) {\\n\\tconst float StartCompression = 0.8 - 0.04;\\n\\tconst float Desaturation = 0.15;\\n\\tcolor *= toneMappingExposure;\\n\\tfloat x = min( color.r, min( color.g, color.b ) );\\n\\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\\n\\tcolor -= offset;\\n\\tfloat peak = max( color.r, max( color.g, color.b ) );\\n\\tif ( peak < StartCompression ) return color;\\n\\tfloat d = 1. - StartCompression;\\n\\tfloat newPeak = 1. - d * d / ( peak + d - StartCompression );\\n\\tcolor *= newPeak / peak;\\n\\tfloat g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\\n\\treturn mix( color, vec3( newPeak ), g );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec4 transmittedLight;\\n\\t\\tvec3 transmittance;\\n\\t\\t#ifdef USE_DISPERSION\\n\\t\\t\\tfloat halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\\n\\t\\t\\tvec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\\n\\t\\t\\tfor ( int i = 0; i < 3; i ++ ) {\\n\\t\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\\n\\t\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\n\\t\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\n\\t\\t\\t\\tvec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\\n\\t\\t\\t\\ttransmittedLight[ i ] = transmissionSample[ i ];\\n\\t\\t\\t\\ttransmittedLight.a += transmissionSample.a;\\n\\t\\t\\t\\ttransmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\\n\\t\\t\\t}\\n\\t\\t\\ttransmittedLight.a /= 3.0;\\n\\t\\t\\n\\t\\t#else\\n\\t\\t\\n\\t\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\t\\trefractionCoords += 1.0;\\n\\t\\t\\trefractionCoords /= 2.0;\\n\\t\\t\\ttransmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\t\\ttransmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\t\\n\\t\\t#endif\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nuniform mat3 backgroundRotation;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#elif DEPTH_PACKING == 3202\\n\\t\\tgl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\\n\\t#elif DEPTH_PACKING == 3203\\n\\t\\tgl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_DISPERSION\\n\\tuniform float dispersion;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphinstance_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix[ 3 ];\\n\\tvec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphinstance_vertex: morphinstance_vertex,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tenvMapRotation: { value: /*@__PURE__*/ new Matrix3() },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowIntensity: 1,\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 },\n\t\t\tbackgroundRotation: { value: /*@__PURE__*/ new Matrix3() }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tdispersion: { value: 0 },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\nconst _e1$1 = /*@__PURE__*/ new Euler();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction getBackground( scene ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\treturn background;\n\n\t}\n\n\tfunction render( scene ) {\n\n\t\tlet forceClear = false;\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t// buffers might not be writable which is required to ensure a correct clear\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t}\n\n\tfunction addToRenderList( renderList, scene ) {\n\n\t\tconst background = getBackground( scene );\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\t_e1$1.copy( scene.backgroundRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1$1.x *= - 1; _e1$1.y *= - 1; _e1$1.z *= - 1;\n\n\t\t\tif ( background.isCubeTexture && background.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1$1.y *= - 1;\n\t\t\t\t_e1$1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.uniforms.backgroundRotation.value.setFromMatrix4( _m1$1.makeRotationFromEuler( _e1$1 ) );\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\tfunction dispose() {\n\n\t\tif ( boxMesh !== undefined ) {\n\n\t\t\tboxMesh.geometry.dispose();\n\t\t\tboxMesh.material.dispose();\n\n\t\t}\n\n\t\tif ( planeMesh !== undefined ) {\n\n\t\t\tplaneMesh.geometry.dispose();\n\t\t\tplaneMesh.material.dispose();\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render,\n\t\taddToRenderList: addToRenderList,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, attributes ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tconst state = getBindingState( geometry, program, material );\n\n\t\tif ( currentState !== state ) {\n\n\t\t\tcurrentState = state;\n\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t}\n\n\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\treturn gl.createVertexArray();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\treturn gl.bindVertexArray( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\treturn gl.deleteVertexArray( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tgl.vertexAttribDivisor( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes\n\n\t\t\t\t\tconst integer = ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawArraysInstanced( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ], counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysInstancedWEBGL( mode, starts, 0, counts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ] * primcount[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters, utils ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction textureFormatReadable( textureFormat ) {\n\n\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction textureTypeReadable( textureType ) {\n\n\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) );\n\n\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== gl.getParameter( gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\ttextureType !== FloatType && ! halfFloatSupportedByExt ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\tconst reverseDepthBuffer = parameters.reverseDepthBuffer === true && extensions.has( 'EXT_clip_control' );\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\n\tconst maxSamples = gl.getParameter( gl.MAX_SAMPLES );\n\n\treturn {\n\n\t\tisWebGL2: true, // keeping this for backwards compatibility\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\ttextureFormatReadable: textureFormatReadable,\n\t\ttextureTypeReadable: textureTypeReadable,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\treverseDepthBuffer: reverseDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\nlet _oldXrEnabled = false;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported equirectangular image size is 64 x 32.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t * The smallest supported cube size is 16 x 16.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\tthis._renderer.xr.enabled = _oldXrEnabled;\n\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\t\t_oldXrEnabled = this._renderer.xr.enabled;\n\n\t\tthis._renderer.xr.enabled = false;\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\t\tconst n = this._lodPlanes.length;\n\n\t\tfor ( let i = 1; i < n; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( n - i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\tconst currentPMREMVersion = renderTarget !== undefined ? renderTarget.texture.pmremVersion : 0;\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.pmremVersion !== currentPMREMVersion ) {\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\trenderTarget.texture.pmremVersion = texture.pmremVersion;\n\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function () {\n\n\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\t\t\tgetExtension( 'WEBGL_clip_cull_distance' );\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\t\t\tgetExtension( 'WEBGL_render_shared_exponent' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\twarnOnce( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tgl.drawElementsInstanced( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\tlet elementCount = 0;\n\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\telementCount += counts[ i ];\n\n\t\t}\n\n\t\tinfo.update( elementCount, mode, 1 );\n\n\n\t}\n\n\tfunction renderMultiDrawInstances( starts, counts, drawCount, primcount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < starts.length; i ++ ) {\n\n\t\t\t\trenderInstances( starts[ i ] / bytesPerElement, counts[ i ], primcount[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsInstancedWEBGL( mode, counts, 0, type, starts, 0, primcount, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ] * primcount[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\tthis.renderMultiDrawInstances = renderMultiDrawInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// the following encodes morph targets into an array of data textures. Each layer represents a single morph target.\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet entry = morphTextures.get( geometry );\n\n\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\tlet vertexDataCount = 0;\n\n\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\tlet height = 1;\n\n\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t}\n\n\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\ttexture.type = FloatType;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\t// fill buffer\n\n\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tentry = {\n\t\t\t\tcount: morphTargetsCount,\n\t\t\t\ttexture: texture,\n\t\t\t\tsize: new Vector2( width, height )\n\t\t\t};\n\n\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\tfunction disposeTexture() {\n\n\t\t\t\ttexture.dispose();\n\n\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t}\n\n\t\t//\n\t\tif ( object.isInstancedMesh === true && object.morphTexture !== null ) {\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTexture', object.morphTexture, textures );\n\n\t\t} else {\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tlet emptyTexture2D;\n\n\tif ( this.type === gl.SAMPLER_2D_SHADOW ) {\n\n\t\temptyShadowTexture.compareFunction = LessEqualCompare; // #28670\n\t\temptyTexture2D = emptyShadowTexture;\n\n\t} else {\n\n\t\temptyTexture2D = emptyTexture;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nconst _m0 = /*@__PURE__*/ new Matrix3();\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tColorManagement._getMatrix( _m0, ColorManagement.workingColorSpace, colorSpace );\n\n\tconst encodingMatrix = `mat3( ${ _m0.elements.map( ( v ) => v.toFixed( 4 ) ) } )`;\n\n\tswitch ( ColorManagement.getTransfer( colorSpace ) ) {\n\n\t\tcase LinearTransfer:\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\n\n\t\tcase SRGBTransfer:\n\t\t\treturn [ encodingMatrix, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space: ', colorSpace );\n\t\t\treturn [ encodingMatrix, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\n\treturn [\n\n\t\t`vec4 ${functionName}( vec4 value ) {`,\n\n\t\t`\treturn ${components[ 1 ]}( vec4( value.rgb * ${components[ 0 ]}, value.a ) );`,\n\n\t\t'}',\n\n\t].join( '\\n' );\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'Cineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase AgXToneMapping:\n\t\t\ttoneMappingName = 'AgX';\n\t\t\tbreak;\n\n\t\tcase NeutralToneMapping:\n\t\t\ttoneMappingName = 'Neutral';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\n\nfunction getLuminanceFunction() {\n\n\tColorManagement.getLuminanceCoefficients( _v0 );\n\n\tconst r = _v0.x.toFixed( 4 );\n\tconst g = _v0.y.toFixed( 4 );\n\tconst b = _v0.z.toFixed( 4 );\n\n\treturn [\n\n\t\t'float luminance( const in vec3 rgb ) {',\n\n\t\t`\tconst vec3 weights = vec3( ${ r }, ${ g }, ${ b } );`,\n\n\t\t'\treturn dot( weights, rgb );',\n\n\t\t'}'\n\n\t].join( '\\n' );\n\n}\n\nfunction generateVertexExtensions( parameters ) {\n\n\tconst chunks = [\n\t\tparameters.extensionClipCullDistance ? '#extension GL_ANGLE_clip_cull_distance : require' : '',\n\t\tparameters.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map();\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = `precision ${parameters.precision} float;\n\tprecision ${parameters.precision} int;\n\tprecision ${parameters.precision} sampler2D;\n\tprecision ${parameters.precision} samplerCube;\n\tprecision ${parameters.precision} sampler3D;\n\tprecision ${parameters.precision} sampler2DArray;\n\tprecision ${parameters.precision} sampler2DShadow;\n\tprecision ${parameters.precision} samplerCubeShadow;\n\tprecision ${parameters.precision} sampler2DArrayShadow;\n\tprecision ${parameters.precision} isampler2D;\n\tprecision ${parameters.precision} isampler3D;\n\tprecision ${parameters.precision} isamplerCube;\n\tprecision ${parameters.precision} isampler2DArray;\n\tprecision ${parameters.precision} usampler2D;\n\tprecision ${parameters.precision} usampler3D;\n\tprecision ${parameters.precision} usamplerCube;\n\tprecision ${parameters.precision} usampler2DArray;\n\t`;\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customVertexExtensions = generateVertexExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.batchingColor ? '#define USE_BATCHING_COLOR' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\t\t\tparameters.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reverseDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_MORPH',\n\n\t\t\t'\tuniform sampler2D morphTexture;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.dispersion ? '#define USE_DISPERSION' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor || parameters.batchingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\t\t\tparameters.decodeVideoTextureEmissive ? '#define DECODE_VIDEO_TEXTURE_EMISSIVE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.reverseDepthBuffer ? '#define USE_REVERSEDEPTHBUF' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\t\t\tgetLuminanceFunction(),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\tcustomVertexExtensions,\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Material Name: ' + self.name + '\\n' +\n\t\t\t\t\t\t'Material Type: ' + self.type + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst _activeChannels = new Set();\n\tconst programs = [];\n\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\t_activeChannels.add( value );\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst reverseDepthBuffer = renderer.state.buffers.depth.getReversed();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_DISPERSION = material.dispersion > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tbatchingColor: IS_BATCHEDMESH && object._colorsTexture !== null,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\t\t\tinstancingMorph: IS_INSTANCEDMESH && object.morphTexture !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\t\t\talphaToCoverage: !! material.alphaToCoverage,\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tdispersion: HAS_DISPERSION,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending && material.alphaToCoverage === false,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( !! fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\treverseDepthBuffer: reverseDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\t\t\tdecodeVideoTextureEmissive: HAS_EMISSIVEMAP && ( material.emissiveMap.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.emissiveMap.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionClipCullDistance: HAS_EXTENSIONS && material.extensions.clipCullDistance === true && extensions.has( 'WEBGL_clip_cull_distance' ),\n\t\t\textensionMultiDraw: ( HAS_EXTENSIONS && material.extensions.multiDraw === true || IS_BATCHEDMESH ) && extensions.has( 'WEBGL_multi_draw' ),\n\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\t// the usage of getChannel() determines the active texture channels for this shader\n\n\t\tparameters.vertexUv1s = _activeChannels.has( 1 );\n\t\tparameters.vertexUv2s = _activeChannels.has( 2 );\n\t\tparameters.vertexUv3s = _activeChannels.has( 3 );\n\n\t\t_activeChannels.clear();\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingMorph )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.dispersion )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.batchingColor )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.reverseDepthBuffer )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.decodeVideoTextureEmissive )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.alphaToCoverage )\n\t\t\t_programLayers.enable( 21 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction has( object ) {\n\n\t\treturn properties.has( object );\n\n\t}\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\thas: has,\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowIntensity: 1,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowIntensity = shadow.intensity;\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions ) {\n\n\tconst lights = new WebGLLights( extensions );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init( camera ) {\n\n\t\tstate.camera = camera;\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tcamera: null,\n\n\t\tlights: lights,\n\n\t\ttransmissionRenderTarget: {}\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( renderer, objects, capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst activeCubeFace = renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst _state = renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( shadow.map );\n\t\t\trenderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\trenderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.mapPass );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\trenderer.setRenderTarget( shadow.map );\n\t\trenderer.clear();\n\t\trenderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\t\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\trenderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t// make sure to remove the unique distance/depth materials used for shadow map rendering\n\n\t\tfor ( const id in _materialCache ) {\n\n\t\t\tconst cache = _materialCache[ id ];\n\n\t\t\tconst uuid = event.target.uuid;\n\n\t\t\tif ( uuid in cache ) {\n\n\t\t\t\tconst shadowMaterial = cache[ uuid ];\n\t\t\t\tshadowMaterial.dispose();\n\t\t\t\tdelete cache[ uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst reversedFuncs = {\n\t[ NeverDepth ]: AlwaysDepth,\n\t[ LessDepth ]: GreaterDepth,\n\t[ EqualDepth ]: NotEqualDepth,\n\t[ LessEqualDepth ]: GreaterEqualDepth,\n\n\t[ AlwaysDepth ]: NeverDepth,\n\t[ GreaterDepth ]: LessDepth,\n\t[ NotEqualDepth ]: EqualDepth,\n\t[ GreaterEqualDepth ]: LessEqualDepth,\n};\n\nfunction WebGLState( gl, extensions ) {\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\t\tlet reversed = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetReversed: function ( value ) {\n\n\t\t\t\tif ( reversed !== value ) {\n\n\t\t\t\t\tconst ext = extensions.get( 'EXT_clip_control' );\n\n\t\t\t\t\tif ( reversed ) {\n\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.ZERO_TO_ONE_EXT );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\text.clipControlEXT( ext.LOWER_LEFT_EXT, ext.NEGATIVE_ONE_TO_ONE_EXT );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst oldDepth = currentDepthClear;\n\t\t\t\t\tcurrentDepthClear = null;\n\t\t\t\t\tthis.setClear( oldDepth );\n\n\t\t\t\t}\n\n\t\t\t\treversed = value;\n\n\t\t\t},\n\n\t\t\tgetReversed: function () {\n\n\t\t\t\treturn reversed;\n\n\t\t\t},\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( reversed ) depthFunc = reversedFuncs[ depthFunc ];\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tif ( reversed ) {\n\n\t\t\t\t\t\tdepth = 1 - depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\t\t\t\treversed = false;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t}\n\n\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tequationToGL[ MinEquation ] = gl.MIN;\n\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\n\t\tdepthBuffer.setReversed( false );\n\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _imageDimensions = new Vector2();\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\tconst dimensions = getDimensions( image );\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( dimensions.width > maxSize || dimensions.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( dimensions.width, dimensions.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ||\n\t\t\t\t( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) ) {\n\n\t\t\t\tconst width = Math.floor( scale * dimensions.width );\n\t\t\t\tconst height = Math.floor( scale * dimensions.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + dimensions.width + 'x' + dimensions.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + dimensions.width + 'x' + dimensions.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture ) {\n\n\t\treturn texture.generateMipmaps;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getTargetType( texture ) {\n\n\t\tif ( texture.isWebGLCubeRenderTarget ) return _gl.TEXTURE_CUBE_MAP;\n\t\tif ( texture.isWebGL3DRenderTarget ) return _gl.TEXTURE_3D;\n\t\tif ( texture.isWebGLArrayRenderTarget || texture.isCompressedArrayTexture ) return _gl.TEXTURE_2D_ARRAY;\n\t\treturn _gl.TEXTURE_2D;\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RG16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RG32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RG8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RG16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RG32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGB8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGB16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGB32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGB8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGB16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGB32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RGBA8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.RGBA16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.RGBA32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.RGBA8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.RGBA16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.RGBA32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_INT_5_9_9_9_REV ) internalFormat = _gl.RGB9_E5;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getInternalDepthFormat( useStencil, depthType ) {\n\n\t\tlet glInternalFormat;\n\t\tif ( useStencil ) {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH32F_STENCIL8;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\tconsole.warn( 'DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.' );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( depthType === null || depthType === UnsignedIntType || depthType === UnsignedInt248Type ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t} else if ( depthType === FloatType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( depthType === UnsignedShortType ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn glInternalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\tproperties.remove( renderTarget.depthTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\tinfo.memory.textures --;\n\n\t\t\t}\n\n\t\t\tproperties.remove( textures[ i ] );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture ) {\n\n\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false &&\n\t\t\t( texture.magFilter === LinearFilter || texture.magFilter === LinearMipmapNearestFilter || texture.magFilter === NearestMipmapLinearFilter || texture.magFilter === LinearMipmapLinearFilter ||\n\t\t\ttexture.minFilter === LinearFilter || texture.minFilter === LinearMipmapNearestFilter || texture.minFilter === NearestMipmapLinearFilter || texture.minFilter === LinearMipmapLinearFilter ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.' );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t}\n\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tlet image = resizeImage( texture.image, false, capabilities.maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tlet glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tconst levels = getMipLevels( texture, image );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\tglInternalFormat = getInternalDepthFormat( texture.format === DepthStencilFormat, texture.type );\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst layerByteLength = getByteLength( mipmap.width, mipmap.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst layerData = mipmap.data.subarray(\n\t\t\t\t\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / mipmap.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / mipmap.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, layerIndex, mipmap.width, mipmap.height, 1, glFormat, layerData );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tif ( texture.layerUpdates.size > 0 ) {\n\n\t\t\t\t\t\t\tconst layerByteLength = getByteLength( image.width, image.height, texture.format, texture.type );\n\n\t\t\t\t\t\t\tfor ( const layerIndex of texture.layerUpdates ) {\n\n\t\t\t\t\t\t\t\tconst layerData = image.data.subarray(\n\t\t\t\t\t\t\t\t\tlayerIndex * layerByteLength / image.data.BYTES_PER_ELEMENT,\n\t\t\t\t\t\t\t\t\t( layerIndex + 1 ) * layerByteLength / image.data.BYTES_PER_ELEMENT\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, layerIndex, image.width, image.height, 1, glFormat, glType, layerData );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttexture.clearLayerUpdates();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tconst dimensions = getDimensions( mipmaps[ 0 ] );\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tconst dimensions = getDimensions( image );\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], true, capabilities.maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst dataReady = source.dataReady;\n\t\t\tlet levels = getMipLevels( texture, image );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tconst dimensions = getDimensions( cubeImage[ 0 ] );\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, dimensions.width, dimensions.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tif ( dataReady ) {\n\n\t\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\ttextureProperties.__renderTarget = renderTarget;\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, textureProperties.__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, textureProperties.__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t// retrieve the depth attachment types\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tconst depthType = depthTexture && depthTexture.isDepthTexture ? depthTexture.type : null;\n\t\t\tconst glInternalFormat = getInternalDepthFormat( renderTarget.stencilBuffer, depthType );\n\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t// set up the attachment\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\tconst isUseMultisampledRTT = useMultisampledRTT( renderTarget );\n\t\t\tif ( isUseMultisampledRTT ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( isMultisample ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.textures;\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\tconst textureProperties = properties.get( renderTarget.depthTexture );\n\t\ttextureProperties.__renderTarget = renderTarget;\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! textureProperties.__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = textureProperties.__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\t// if the bound depth texture has changed\n\t\tif ( renderTargetProperties.__boundDepthTexture !== renderTarget.depthTexture ) {\n\n\t\t\t// fire the dispose event to get rid of stored state associated with the previously bound depth buffer\n\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\tif ( renderTargetProperties.__depthDisposeCallback ) {\n\n\t\t\t\trenderTargetProperties.__depthDisposeCallback();\n\n\t\t\t}\n\n\t\t\t// set up dispose listeners to track when the currently attached buffer is implicitly unbound\n\t\t\tif ( depthTexture ) {\n\n\t\t\t\tconst disposeEvent = () => {\n\n\t\t\t\t\tdelete renderTargetProperties.__boundDepthTexture;\n\t\t\t\t\tdelete renderTargetProperties.__depthDisposeCallback;\n\t\t\t\t\tdepthTexture.removeEventListener( 'dispose', disposeEvent );\n\n\t\t\t\t};\n\n\t\t\t\tdepthTexture.addEventListener( 'dispose', disposeEvent );\n\t\t\t\trenderTargetProperties.__depthDisposeCallback = disposeEvent;\n\n\t\t\t}\n\n\t\t\trenderTargetProperties.__boundDepthTexture = depthTexture;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer[ i ] === undefined ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// attach buffer if it's been created already\n\t\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer[ i ];\n\t\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer === undefined ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// attach buffer if it's been created already\n\t\t\t\t\tconst glAttachmentType = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\t\tconst renderbuffer = renderTargetProperties.__webglDepthbuffer;\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, glAttachmentType, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\tif ( ! isMultipleRenderTargets ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture );\n\n\t\t\tif ( texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst textures = renderTarget.textures;\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture ) ) {\n\n\t\t\t\tconst targetType = getTargetType( renderTarget );\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( targetType, webglTexture );\n\t\t\t\tgenerateMipmap( targetType );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst invalidationArrayRead = [];\n\tconst invalidationArrayDraw = [];\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.samples > 0 ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = renderTarget.textures;\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\t\tconst isMultipleRenderTargets = ( textures.length > 1 );\n\n\t\t\t\t// If MRT we need to remove FBO attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTarget.resolveDepthBuffer ) {\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t\t\t\t// resolving stencil is slow with a D3D backend. disable it for all transmission render targets (see #27799)\n\n\t\t\t\t\t\tif ( renderTarget.stencilBuffer && renderTarget.resolveStencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\t\tif ( supportsInvalidateFramebuffer === true ) {\n\n\t\t\t\t\t\tinvalidationArrayRead.length = 0;\n\t\t\t\t\t\tinvalidationArrayDraw.length = 0;\n\n\t\t\t\t\t\tinvalidationArrayRead.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false ) {\n\n\t\t\t\t\t\t\tinvalidationArrayRead.push( depthStyle );\n\t\t\t\t\t\t\tinvalidationArrayDraw.push( depthStyle );\n\n\t\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, invalidationArrayDraw );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArrayRead );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderTarget.depthBuffer && renderTarget.resolveDepthBuffer === false && supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( capabilities.maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction getDimensions( image ) {\n\n\t\tif ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) {\n\n\t\t\t// if intrinsic data are not available, fallback to width/height\n\n\t\t\t_imageDimensions.width = image.naturalWidth || image.width;\n\t\t\t_imageDimensions.height = image.naturalHeight || image.height;\n\n\t\t} else if ( typeof VideoFrame !== 'undefined' && image instanceof VideoFrame ) {\n\n\t\t\t_imageDimensions.width = image.displayWidth;\n\t\t\t_imageDimensions.height = image.displayHeight;\n\n\t\t} else {\n\n\t\t\t_imageDimensions.width = image.width;\n\t\t\t_imageDimensions.height = image.height;\n\n\t\t}\n\n\t\treturn _imageDimensions;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedInt5999Type ) return gl.UNSIGNED_INT_5_9_9_9_REV;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\t\tif ( p === HalfFloatType ) return gl.HALF_FLOAT;\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC\n\n\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC1_Format || p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) return gl.UNSIGNED_INT_24_8;\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nconst _occlusion_vertex = `\nvoid main() {\n\n\tgl_Position = vec4( position, 1.0 );\n\n}`;\n\nconst _occlusion_fragment = `\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n\tvec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n\tif ( coord.x >= 1.0 ) {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n\t} else {\n\n\t\tgl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n\t}\n\n}`;\n\nclass WebXRDepthSensing {\n\n\tconstructor() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t\tthis.depthNear = 0;\n\t\tthis.depthFar = 0;\n\n\t}\n\n\tinit( renderer, depthData, renderState ) {\n\n\t\tif ( this.texture === null ) {\n\n\t\t\tconst texture = new Texture();\n\n\t\t\tconst texProps = renderer.properties.get( texture );\n\t\t\ttexProps.__webglTexture = depthData.texture;\n\n\t\t\tif ( ( depthData.depthNear != renderState.depthNear ) || ( depthData.depthFar != renderState.depthFar ) ) {\n\n\t\t\t\tthis.depthNear = depthData.depthNear;\n\t\t\t\tthis.depthFar = depthData.depthFar;\n\n\t\t\t}\n\n\t\t\tthis.texture = texture;\n\n\t\t}\n\n\t}\n\n\tgetMesh( cameraXR ) {\n\n\t\tif ( this.texture !== null ) {\n\n\t\t\tif ( this.mesh === null ) {\n\n\t\t\t\tconst viewport = cameraXR.cameras[ 0 ].viewport;\n\t\t\t\tconst material = new ShaderMaterial( {\n\t\t\t\t\tvertexShader: _occlusion_vertex,\n\t\t\t\t\tfragmentShader: _occlusion_fragment,\n\t\t\t\t\tuniforms: {\n\t\t\t\t\t\tdepthColor: { value: this.texture },\n\t\t\t\t\t\tdepthWidth: { value: viewport.z },\n\t\t\t\t\t\tdepthHeight: { value: viewport.w }\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tthis.mesh = new Mesh( new PlaneGeometry( 20, 20 ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this.mesh;\n\n\t}\n\n\treset() {\n\n\t\tthis.texture = null;\n\t\tthis.mesh = null;\n\n\t}\n\n\tgetDepthTexture() {\n\n\t\treturn this.texture;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\n\t\tconst depthSensing = new WebXRDepthSensing();\n\t\tconst attributes = gl.getContextAttributes();\n\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\tdepthSensing.reset();\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( session.renderState.layers === undefined ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0,\n\t\t\t\t\t\t\tresolveDepthBuffer: ( glProjLayer.ignoreDepthValues === false )\n\t\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getDepthTexture = function () {\n\n\t\t\treturn depthSensing.getDepthTexture();\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Check if the projection uses an infinite far plane.\n\t\t\tif ( projL[ 10 ] === - 1.0 ) {\n\n\t\t\t\t// Use the projection matrix from the left eye.\n\t\t\t\t// The camera offset is sufficient to include the view volumes\n\t\t\t\t// of both eyes (assuming symmetric projections).\n\t\t\t\tcamera.projectionMatrix.copy( cameraL.projectionMatrix );\n\t\t\t\tcamera.projectionMatrixInverse.copy( cameraL.projectionMatrixInverse );\n\n\t\t\t} else {\n\n\t\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t\t// although must now be relative to the new union camera.\n\t\t\t\tconst near2 = near + zOffset;\n\t\t\t\tconst far2 = far + zOffset;\n\t\t\t\tconst left2 = left - xOffset;\n\t\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tlet depthNear = camera.near;\n\t\t\tlet depthFar = camera.far;\n\n\t\t\tif ( depthSensing.texture !== null ) {\n\n\t\t\t\tif ( depthSensing.depthNear > 0 ) depthNear = depthSensing.depthNear;\n\t\t\t\tif ( depthSensing.depthFar > 0 ) depthFar = depthSensing.depthFar;\n\n\t\t\t}\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = depthNear;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = depthFar;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tcameraL.layers.mask = camera.layers.mask | 0b010;\n\t\t\tcameraR.layers.mask = camera.layers.mask | 0b100;\n\t\t\tcameraXR.layers.mask = cameraL.layers.mask | cameraR.layers.mask;\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.hasDepthSensing = function () {\n\n\t\t\treturn depthSensing.texture !== null;\n\n\t\t};\n\n\t\tthis.getDepthSensingMesh = function () {\n\n\t\t\treturn depthSensing.getMesh( cameraXR );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tconst enabledFeatures = session.enabledFeatures;\n\n\t\t\t\tif ( enabledFeatures && enabledFeatures.includes( 'depth-sensing' ) ) {\n\n\t\t\t\t\tconst depthData = glBinding.getDepthInformation( views[ 0 ] );\n\n\t\t\t\t\tif ( depthData && depthData.isValid && depthData.texture ) {\n\n\t\t\t\t\t\tdepthSensing.init( renderer, depthData, session.renderState );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nconst _e1 = /*@__PURE__*/ new Euler();\nconst _m1 = /*@__PURE__*/ new Matrix4();\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst envMap = materialProperties.envMap;\n\t\tconst envMapRotation = materialProperties.envMapRotation;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\t_e1.copy( envMapRotation );\n\n\t\t\t// accommodate left-handed frame\n\t\t\t_e1.x *= - 1; _e1.y *= - 1; _e1.z *= - 1;\n\n\t\t\tif ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) {\n\n\t\t\t\t// environment maps which are not cube render targets or PMREMs follow a different convention\n\t\t\t\t_e1.y *= - 1;\n\t\t\t\t_e1.z *= - 1;\n\n\t\t\t}\n\n\t\t\tuniforms.envMapRotation.value.setFromMatrix4( _m1.makeRotationFromEuler( _e1 ) );\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.dispersion > 0 ) {\n\n\t\t\tuniforms.dispersion.value = material.dispersion;\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ); // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tif ( hasUniformChanged( uniform, i, j, cache ) === true ) {\n\n\t\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\t\tfor ( let k = 0; k < values.length; k ++ ) {\n\n\t\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\t\t// TODO add integer and struct support\n\t\t\t\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\t\tuniform.__data[ 3 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\t\tuniform.__data[ 7 ] = 0;\n\t\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\t\tuniform.__data[ 11 ] = 0;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, indexArray, cache ) {\n\n\t\tconst value = uniform.value;\n\t\tconst indexString = index + '_' + indexArray;\n\n\t\tif ( cache[ indexString ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tcache[ indexString ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ indexString ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tconst cachedObject = cache[ indexString ];\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t\tif ( cachedObject !== value ) {\n\n\t\t\t\t\tcache[ indexString ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniformArray = Array.isArray( uniforms[ i ] ) ? uniforms[ i ] : [ uniforms[ i ] ];\n\n\t\t\tfor ( let j = 0, jl = uniformArray.length; j < jl; j ++ ) {\n\n\t\t\t\tconst uniform = uniformArray[ j ];\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tfor ( let k = 0, kl = values.length; k < kl; k ++ ) {\n\n\t\t\t\t\tconst value = values[ k ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tconst chunkOffset = offset % chunkSize; // offset in the current chunk\n\t\t\t\t\tconst chunkPadding = chunkOffset % info.boundary; // required padding to match boundary\n\t\t\t\t\tconst chunkStart = chunkOffset + chunkPadding; // the start position in the current chunk for the data\n\n\t\t\t\t\toffset += chunkPadding;\n\n\t\t\t\t\t// Check for chunk overflow\n\t\t\t\t\tif ( chunkStart !== 0 && ( chunkSize - chunkStart ) < info.storage ) {\n\n\t\t\t\t\t\t// Add padding and adjust offset\n\t\t\t\t\t\toffset += ( chunkSize - chunkStart );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following two properties will be used for partial buffer updates\n\t\t\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t\t// Update the global offset\n\t\t\t\t\toffset += info.storage;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tconst chunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' || typeof value === 'boolean' ) {\n\n\t\t\t// float/int/bool\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = false,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t\treverseDepthBuffer = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && context instanceof WebGLRenderingContext ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer: WebGL 1 is not supported since r163.' );\n\n\t\t\t}\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// camera matrices cache\n\n\t\tconst _currentProjectionMatrix = new Matrix4();\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _vector4 = new Vector4();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tlet _renderBackground = false;\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextName, contextAttributes ) {\n\n\t\t\treturn canvas.getContext( contextName, contextAttributes );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextName = 'webgl2';\n\n\t\t\t\t_gl = getContext( contextName, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextName ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\t\t\textensions.init();\n\n\t\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters, utils );\n\n\t\t\tstate = new WebGLState( _gl, extensions );\n\n\t\t\tif ( capabilities.reverseDepthBuffer && reverseDepthBuffer ) {\n\n\t\t\t\tstate.buffers.depth.setReversed( true );\n\n\t\t\t}\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, attributes );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).round() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) {\n\n\t\t\t\tbits |= _gl.DEPTH_BUFFER_BIT;\n\n\t\t\t}\n\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tbackground.dispose();\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tif ( object._multiDrawInstances !== null ) {\n\n\t\t\t\t\trenderer.renderMultiDrawInstances( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount, object._multiDrawInstances );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! extensions.get( 'WEBGL_multi_draw' ) ) {\n\n\t\t\t\t\t\tconst starts = object._multiDrawStarts;\n\t\t\t\t\t\tconst counts = object._multiDrawCounts;\n\t\t\t\t\t\tconst drawCount = object._multiDrawCount;\n\t\t\t\t\t\tconst bytesPerElement = index ? attributes.get( index ).bytesPerElement : 1;\n\t\t\t\t\t\tconst uniforms = properties.get( material ).currentProgram.getUniforms();\n\t\t\t\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\t\t\t\tuniforms.setValue( _gl, '_gl_DrawID', i );\n\t\t\t\t\t\t\trenderer.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( ! ( object.isMesh || object.isPoints || object.isLine || object.isSprite ) ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init( camera );\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tconst depthSensingMesh = _this.xr.getDepthSensingMesh();\n\n\t\t\t\tif ( depthSensingMesh !== null ) {\n\n\t\t\t\t\tprojectObject( depthSensingMesh, camera, - Infinity, _this.sortObjects );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t_renderBackground = xr.enabled === false || xr.isPresenting === false || xr.hasDepthSensing() === false;\n\t\t\tif ( _renderBackground ) {\n\n\t\t\t\tbackground.addToRenderList( currentRenderList, scene );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\t\t// render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\n\t\t\tcurrentRenderState.setupLights();\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) {\n\n\t\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\t\trenderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, currentRenderState.state.camera );\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector4.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector4.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector4\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector4.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector4.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( currentRenderState.state.transmissionRenderTarget[ camera.id ] === undefined ) {\n\n\t\t\t\tcurrentRenderState.state.transmissionRenderTarget[ camera.id ] = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: ( extensions.has( 'EXT_color_buffer_half_float' ) || extensions.has( 'EXT_color_buffer_float' ) ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: 4,\n\t\t\t\t\tstencilBuffer: stencil,\n\t\t\t\t\tresolveDepthBuffer: false,\n\t\t\t\t\tresolveStencilBuffer: false,\n\t\t\t\t\tcolorSpace: ColorManagement.workingColorSpace,\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\tconst transmissionRenderTarget = currentRenderState.state.transmissionRenderTarget[ camera.id ];\n\n\t\t\tconst activeViewport = camera.viewport || _currentViewport;\n\t\t\ttransmissionRenderTarget.setSize( activeViewport.z, activeViewport.w );\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\tif ( _renderBackground ) background.render( scene );\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\t// Remove viewport from camera to avoid nested render calls resetting viewport to it (e.g Reflector).\n\t\t\t// Transmission render pass requires viewport to match the transmissionRenderTarget.\n\t\t\tconst currentCameraViewport = camera.viewport;\n\t\t\tif ( camera.viewport !== undefined ) camera.viewport = undefined;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === false ) { // see #28131\n\n\t\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\t\tconst object = renderItem.object;\n\t\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\t\tconst material = renderItem.material;\n\t\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\t\ttextures.updateMultisampleRenderTarget( transmissionRenderTarget );\n\t\t\t\t\ttextures.updateRenderTargetMipmap( transmissionRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\tif ( currentCameraViewport !== undefined ) camera.viewport = currentCameraViewport;\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\t\t\tmaterialProperties.envMapRotation = ( materialProperties.environment !== null && material.envMap === null ) ? scene.environmentRotation : material.envMapRotation;\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.batchingColor = parameters.batchingColor;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.instancingMorph = parameters.instancingMorph;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === true && object.colorTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batchingColor === false && object.colorTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === true && object.morphTexture === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingMorph === false && object.morphTexture !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tconst reverseDepthBuffer = state.buffers.depth.getReversed();\n\n\t\t\t\tif ( reverseDepthBuffer ) {\n\n\t\t\t\t\t_currentProjectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\t\ttoNormalizedProjectionMatrix( _currentProjectionMatrix );\n\t\t\t\t\ttoReversedProjectionMatrix( _currentProjectionMatrix );\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', _currentProjectionMatrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingIdTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingIdTexture', object._indirectTexture, textures );\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingColorTexture' );\n\t\t\t\tif ( object._colorsTexture !== null ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'batchingColorTexture', object._colorsTexture, textures );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshStandardMaterial && material.envMap === null && scene.environment !== null ) {\n\n\t\t\t\tm_uniforms.envMapIntensity.value = scene.environmentIntensity;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, currentRenderState.state.transmissionRenderTarget[ camera.id ] );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t} else if ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t// check if the depth texture is already bound to the frame buffer and that it's been initialized\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\t\t\t\t\tif ( renderTargetProperties.__boundDepthTexture !== depthTexture ) {\n\n\t\t\t\t\t\t// check if the depth texture is compatible\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tdepthTexture !== null &&\n\t\t\t\t\t\t\tproperties.has( depthTexture ) &&\n\t\t\t\t\t\t\t( renderTarget.width !== depthTexture.image.width || renderTarget.height !== depthTexture.image.height )\n\t\t\t\t\t\t) {\n\n\t\t\t\t\t\t\tthrow new Error( 'WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Swap the depth buffer to the currently attached one\n\t\t\t\t\t\ttextures.setupDepthRenderbuffer( renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixelsAsync = async function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( ! capabilities.textureFormatReadable( textureFormat ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.' );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! capabilities.textureTypeReadable( textureType ) ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\n\t\t\t\t}\n\n\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t// set the active frame buffer to the one we want to read\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t\tconst glBuffer = _gl.createBuffer();\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t_gl.bufferData( _gl.PIXEL_PACK_BUFFER, buffer.byteLength, _gl.STREAM_READ );\n\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), 0 );\n\n\t\t\t\t\t// reset the frame buffer to the currently set buffer before waiting\n\t\t\t\t\tconst currFramebuffer = _currentRenderTarget !== null ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, currFramebuffer );\n\n\t\t\t\t\t// check if the commands have finished every 8 ms\n\t\t\t\t\tconst sync = _gl.fenceSync( _gl.SYNC_GPU_COMMANDS_COMPLETE, 0 );\n\n\t\t\t\t\t_gl.flush();\n\n\t\t\t\t\tawait probeAsync( _gl, sync, 4 );\n\n\t\t\t\t\t// read the data and delete the buffer\n\t\t\t\t\t_gl.bindBuffer( _gl.PIXEL_PACK_BUFFER, glBuffer );\n\t\t\t\t\t_gl.getBufferSubData( _gl.PIXEL_PACK_BUFFER, 0, buffer );\n\t\t\t\t\t_gl.deleteBuffer( glBuffer );\n\t\t\t\t\t_gl.deleteSync( sync );\n\n\t\t\t\t\treturn buffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( texture, position = null, level = 0 ) {\n\n\t\t\t// support previous signature with position first\n\t\t\tif ( texture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyFramebufferToTexture function signature has changed.' );\n\n\t\t\t\tposition = arguments[ 0 ] || null;\n\t\t\t\ttexture = arguments[ 1 ];\n\n\t\t\t}\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\tconst x = position !== null ? position.x : 0;\n\t\t\tconst y = position !== null ? position.y : 0;\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, x, y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tconst _srcFramebuffer = _gl.createFramebuffer();\n\t\tconst _dstFramebuffer = _gl.createFramebuffer();\n\t\tthis.copyTextureToTexture = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, srcLevel = 0, dstLevel = null ) {\n\n\t\t\t// support previous signature with dstPosition first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture function signature has changed.' );\n\n\t\t\t\tdstPosition = arguments[ 0 ] || null;\n\t\t\t\tsrcTexture = arguments[ 1 ];\n\t\t\t\tdstTexture = arguments[ 2 ];\n\t\t\t\tdstLevel = arguments[ 3 ] || 0;\n\t\t\t\tsrcRegion = null;\n\n\t\t\t}\n\n\t\t\t// support the previous signature with just a single dst mipmap level\n\t\t\tif ( dstLevel === null ) {\n\n\t\t\t\tif ( srcLevel !== 0 ) {\n\n\t\t\t\t\t// @deprecated, r171\n\t\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels.' );\n\t\t\t\t\tdstLevel = srcLevel;\n\t\t\t\t\tsrcLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdstLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// gather the necessary dimensions to copy\n\t\t\tlet width, height, depth, minX, minY, minZ;\n\t\t\tlet dstX, dstY, dstZ;\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ dstLevel ] : srcTexture.image;\n\t\t\tif ( srcRegion !== null ) {\n\n\t\t\t\twidth = srcRegion.max.x - srcRegion.min.x;\n\t\t\t\theight = srcRegion.max.y - srcRegion.min.y;\n\t\t\t\tdepth = srcRegion.isBox3 ? srcRegion.max.z - srcRegion.min.z : 1;\n\t\t\t\tminX = srcRegion.min.x;\n\t\t\t\tminY = srcRegion.min.y;\n\t\t\t\tminZ = srcRegion.isBox3 ? srcRegion.min.z : 0;\n\n\t\t\t} else {\n\n\t\t\t\tconst levelScale = Math.pow( 2, - srcLevel );\n\t\t\t\twidth = Math.floor( image.width * levelScale );\n\t\t\t\theight = Math.floor( image.height * levelScale );\n\t\t\t\tif ( srcTexture.isDataArrayTexture ) {\n\n\t\t\t\t\tdepth = image.depth;\n\n\t\t\t\t} else if ( srcTexture.isData3DTexture ) {\n\n\t\t\t\t\tdepth = Math.floor( image.depth * levelScale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdepth = 1;\n\n\t\t\t\t}\n\n\t\t\t\tminX = 0;\n\t\t\t\tminY = 0;\n\t\t\t\tminZ = 0;\n\n\t\t\t}\n\n\t\t\tif ( dstPosition !== null ) {\n\n\t\t\t\tdstX = dstPosition.x;\n\t\t\t\tdstY = dstPosition.y;\n\t\t\t\tdstZ = dstPosition.z;\n\n\t\t\t} else {\n\n\t\t\t\tdstX = 0;\n\t\t\t\tdstY = 0;\n\t\t\t\tdstZ = 0;\n\n\t\t\t}\n\n\t\t\t// Set up the destination target\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture || dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\t// used for copying data from cpu\n\t\t\tconst currentUnpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst currentUnpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst currentUnpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst currentUnpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst currentUnpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, minX );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, minY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, minZ );\n\n\t\t\t// set up the src texture\n\t\t\tconst isSrc3D = srcTexture.isDataArrayTexture || srcTexture.isData3DTexture;\n\t\t\tconst isDst3D = dstTexture.isDataArrayTexture || dstTexture.isData3DTexture;\n\t\t\tif ( srcTexture.isDepthTexture ) {\n\n\t\t\t\tconst srcTextureProperties = properties.get( srcTexture );\n\t\t\t\tconst dstTextureProperties = properties.get( dstTexture );\n\t\t\t\tconst srcRenderTargetProperties = properties.get( srcTextureProperties.__renderTarget );\n\t\t\t\tconst dstRenderTargetProperties = properties.get( dstTextureProperties.__renderTarget );\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, srcRenderTargetProperties.__webglFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, dstRenderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < depth; i ++ ) {\n\n\t\t\t\t\t// if the source or destination are a 3d target then a layer needs to be bound\n\t\t\t\t\tif ( isSrc3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, properties.get( srcTexture ).__webglTexture, srcLevel, minZ + i );\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, properties.get( dstTexture ).__webglTexture, dstLevel, dstZ + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.blitFramebuffer( minX, minY, width, height, dstX, dstY, width, height, _gl.DEPTH_BUFFER_BIT, _gl.NEAREST );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t} else if ( srcLevel !== 0 || srcTexture.isRenderTargetTexture || properties.has( srcTexture ) ) {\n\n\t\t\t\t// get the appropriate frame buffers\n\t\t\t\tconst srcTextureProperties = properties.get( srcTexture );\n\t\t\t\tconst dstTextureProperties = properties.get( dstTexture );\n\n\t\t\t\t// bind the frame buffer targets\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, _srcFramebuffer );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, _dstFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < depth; i ++ ) {\n\n\t\t\t\t\t// assign the correct layers and mip maps to the frame buffers\n\t\t\t\t\tif ( isSrc3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, srcTextureProperties.__webglTexture, srcLevel, minZ + i );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, srcTextureProperties.__webglTexture, srcLevel );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isDst3D ) {\n\n\t\t\t\t\t\t_gl.framebufferTextureLayer( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, dstTextureProperties.__webglTexture, dstLevel, dstZ + i );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, dstTextureProperties.__webglTexture, dstLevel );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// copy the data using the fastest function that can achieve the copy\n\t\t\t\t\tif ( srcLevel !== 0 ) {\n\n\t\t\t\t\t\t_gl.blitFramebuffer( minX, minY, width, height, dstX, dstY, width, height, _gl.COLOR_BUFFER_BIT, _gl.NEAREST );\n\n\t\t\t\t\t} else if ( isDst3D ) {\n\n\t\t\t\t\t\t_gl.copyTexSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ + i, minX, minY, width, height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.copyTexSubImage2D( glTarget, dstLevel, dstX, dstY, minX, minY, width, height );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// unbind read, draw buffers\n\t\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isDst3D ) {\n\n\t\t\t\t\t// copy data into the 3d texture\n\t\t\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t\t\t_gl.texSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t\t\t} else if ( dstTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.texSubImage3D( glTarget, dstLevel, dstX, dstY, dstZ, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// copy data into the 2d texture\n\t\t\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, width, height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else if ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, image.width, image.height, glFormat, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, dstLevel, dstX, dstY, width, height, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// reset values\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, currentUnpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, currentUnpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, currentUnpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, currentUnpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, currentUnpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( dstLevel === 0 && dstTexture.generateMipmaps ) {\n\n\t\t\t\t_gl.generateMipmap( glTarget );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( srcTexture, dstTexture, srcRegion = null, dstPosition = null, level = 0 ) {\n\n\t\t\t// support previous signature with source box first\n\t\t\tif ( srcTexture.isTexture !== true ) {\n\n\t\t\t\t// @deprecated, r165\n\t\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture3D function signature has changed.' );\n\n\t\t\t\tsrcRegion = arguments[ 0 ] || null;\n\t\t\t\tdstPosition = arguments[ 1 ] || null;\n\t\t\t\tsrcTexture = arguments[ 2 ];\n\t\t\t\tdstTexture = arguments[ 3 ];\n\t\t\t\tlevel = arguments[ 4 ] || 0;\n\n\t\t\t}\n\n\t\t\t// @deprecated, r170\n\t\t\twarnOnce( 'WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use \"copyTextureToTexture\" instead.' );\n\n\t\t\treturn this.copyTextureToTexture( srcTexture, dstTexture, srcRegion, dstPosition, level );\n\n\t\t};\n\n\t\tthis.initRenderTarget = function ( target ) {\n\n\t\t\tif ( properties.get( target ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( target );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorspace = ColorManagement._getDrawingBufferColorSpace( colorSpace );\n\t\tgl.unpackColorSpace = ColorManagement._getUnpackColorSpace();\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, ArrayCamera, BackSide, BoxGeometry, BufferAttribute, BufferGeometry, ByteType, CineonToneMapping, ClampToEdgeWrapping, Color, ColorManagement, ConstantAlphaFactor, ConstantColorFactor, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeUVReflectionMapping, CullFaceBack, CullFaceFront, CullFaceNone, CustomBlending, CustomToneMapping, Data3DTexture, DataArrayTexture, DepthFormat, DepthStencilFormat, DepthTexture, DoubleSide, DstAlphaFactor, DstColorFactor, EqualCompare, EqualDepth, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, FloatType, FrontSide, Frustum, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, Group, HalfFloatType, IntType, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LinearFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, LuminanceAlphaFormat, LuminanceFormat, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NoBlending, NoColorSpace, NoToneMapping, NormalBlending, NotEqualCompare, NotEqualDepth, ObjectSpaceNormalMap, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, PerspectiveCamera, Plane, PlaneGeometry, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReverseSubtractEquation, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, ShaderChunk, ShaderLib, ShaderMaterial, ShortType, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, SubtractEquation, SubtractiveBlending, TangentSpaceNormalMap, Texture, Uint16BufferAttribute, Uint32BufferAttribute, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLRenderTarget, WebGLRenderer, WebGLUtils, ZeroFactor, createCanvasElement };\n","import {\n  EventDispatcher,\n  Matrix4,\n  MOUSE,\n  OrthographicCamera,\n  PerspectiveCamera,\n  Quaternion,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3,\n  Ray,\n  Plane,\n} from 'three'\n\nconst _ray = new Ray()\nconst _plane = new Plane()\nconst TILT_LIMIT = Math.cos(70 * (Math.PI / 180))\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst moduloWrapAround = (offset: number, capacity: number) => ((offset % capacity) + capacity) % capacity\n\nclass OrbitControls extends EventDispatcher {\n  object: PerspectiveCamera | OrthographicCamera\n  domElement: HTMLElement | undefined\n  // Set to false to disable this control\n  enabled = true\n  // \"target\" sets the location of focus, where the object orbits around\n  target = new Vector3()\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  minDistance = 0\n  maxDistance = Infinity\n  // How far you can zoom in and out ( OrthographicCamera only )\n  minZoom = 0\n  maxZoom = Infinity\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  minPolarAngle = 0 // radians\n  maxPolarAngle = Math.PI // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  minAzimuthAngle = -Infinity // radians\n  maxAzimuthAngle = Infinity // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  enableDamping = false\n  dampingFactor = 0.05\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  enableZoom = true\n  zoomSpeed = 1.0\n  // Set to false to disable rotating\n  enableRotate = true\n  rotateSpeed = 1.0\n  // Set to false to disable panning\n  enablePan = true\n  panSpeed = 1.0\n  screenSpacePanning = true // if false, pan orthogonal to world-space direction camera.up\n  keyPanSpeed = 7.0 // pixels moved per arrow key push\n  zoomToCursor = false\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  autoRotate = false\n  autoRotateSpeed = 2.0 // 30 seconds per orbit when fps is 60\n  reverseOrbit = false // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n  reverseHorizontalOrbit = false // true if you want to reverse the horizontal orbit direction\n  reverseVerticalOrbit = false // true if you want to reverse the vertical orbit direction\n  // The four arrow keys\n  keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' }\n  // Mouse buttons\n  mouseButtons: Partial<{\n    LEFT: MOUSE\n    MIDDLE: MOUSE\n    RIGHT: MOUSE\n  }> = {\n    LEFT: MOUSE.ROTATE,\n    MIDDLE: MOUSE.DOLLY,\n    RIGHT: MOUSE.PAN,\n  }\n  // Touch fingers\n  touches: Partial<{\n    ONE: TOUCH\n    TWO: TOUCH\n  }> = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN }\n  target0: Vector3\n  position0: Vector3\n  zoom0: number\n  // the target DOM element for key events\n  _domElementKeyEvents: any = null\n\n  getPolarAngle: () => number\n  getAzimuthalAngle: () => number\n  setPolarAngle: (x: number) => void\n  setAzimuthalAngle: (x: number) => void\n  getDistance: () => number\n  // Not used in most scenarios, however they can be useful for specific use cases\n  getZoomScale: () => number\n\n  listenToKeyEvents: (domElement: HTMLElement) => void\n  stopListenToKeyEvents: () => void\n  saveState: () => void\n  reset: () => void\n  update: () => void\n  connect: (domElement: HTMLElement) => void\n  dispose: () => void\n\n  // Dolly in programmatically\n  dollyIn: (dollyScale?: number) => void\n  // Dolly out programmatically\n  dollyOut: (dollyScale?: number) => void\n  // Get the current scale\n  getScale: () => number\n  // Set the current scale (these are not used in most scenarios, however they can be useful for specific use cases)\n  setScale: (newScale: number) => void\n  \n\n  constructor(object: PerspectiveCamera | OrthographicCamera, domElement?: HTMLElement) {\n    super()\n\n    this.object = object\n    this.domElement = domElement\n\n    // for reset\n    this.target0 = this.target.clone()\n    this.position0 = this.object.position.clone()\n    this.zoom0 = this.object.zoom\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = (): number => spherical.phi\n\n    this.getAzimuthalAngle = (): number => spherical.theta\n\n    this.setPolarAngle = (value: number): void => {\n      // use modulo wrapping to safeguard value\n      let phi = moduloWrapAround(value, 2 * Math.PI)\n      let currentPhi = spherical.phi\n\n      // convert to the equivalent shortest angle\n      if (currentPhi < 0) currentPhi += 2 * Math.PI\n      if (phi < 0) phi += 2 * Math.PI\n      let phiDist = Math.abs(phi - currentPhi)\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI\n        } else {\n          currentPhi += 2 * Math.PI\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi\n      scope.update()\n    }\n\n    this.setAzimuthalAngle = (value: number): void => {\n      // use modulo wrapping to safeguard value\n      let theta = moduloWrapAround(value, 2 * Math.PI)\n      let currentTheta = spherical.theta\n\n      // convert to the equivalent shortest angle\n      if (currentTheta < 0) currentTheta += 2 * Math.PI\n      if (theta < 0) theta += 2 * Math.PI\n      let thetaDist = Math.abs(theta - currentTheta)\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI\n        } else {\n          currentTheta += 2 * Math.PI\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta\n      scope.update()\n    }\n\n    this.getDistance = (): number => scope.object.position.distanceTo(scope.target)\n\n    this.listenToKeyEvents = (domElement: HTMLElement): void => {\n      domElement.addEventListener('keydown', onKeyDown)\n      this._domElementKeyEvents = domElement\n    }\n\n    this.stopListenToKeyEvents = (): void => {\n      this._domElementKeyEvents.removeEventListener('keydown', onKeyDown)\n      this._domElementKeyEvents = null\n    }\n\n    this.saveState = (): void => {\n      scope.target0.copy(scope.target)\n      scope.position0.copy(scope.object.position)\n      scope.zoom0 = scope.object.zoom\n    }\n\n    this.reset = (): void => {\n      scope.target.copy(scope.target0)\n      scope.object.position.copy(scope.position0)\n      scope.object.zoom = scope.zoom0\n      scope.object.updateProjectionMatrix()\n\n      // @ts-ignore\n      scope.dispatchEvent(changeEvent)\n\n      scope.update()\n\n      state = STATE.NONE\n    }\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = ((): (() => void) => {\n      const offset = new Vector3()\n      const up = new Vector3(0, 1, 0)\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(object.up, up)\n      const quatInverse = quat.clone().invert()\n\n      const lastPosition = new Vector3()\n      const lastQuaternion = new Quaternion()\n\n      const twoPI = 2 * Math.PI\n\n      return function update(): boolean {\n        const position = scope.object.position\n\n        // update new up direction\n        quat.setFromUnitVectors(object.up, up)\n        quatInverse.copy(quat).invert()\n\n        offset.copy(position).sub(scope.target)\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat)\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset)\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle())\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor\n        } else {\n          spherical.theta += sphericalDelta.theta\n          spherical.phi += sphericalDelta.phi\n        }\n\n        // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle\n        let max = scope.maxAzimuthAngle\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI\n          else if (min > Math.PI) min -= twoPI\n\n          if (max < -Math.PI) max += twoPI\n          else if (max > Math.PI) max -= twoPI\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta))\n          } else {\n            spherical.theta =\n              spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta)\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi))\n        spherical.makeSafe()\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor)\n        } else {\n          scope.target.add(panOffset)\n        }\n\n        // adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n        // we adjust zoom later in these cases\n        if ((scope.zoomToCursor && performCursorZoom) || (scope.object as OrthographicCamera).isOrthographicCamera) {\n          spherical.radius = clampDistance(spherical.radius)\n        } else {\n          spherical.radius = clampDistance(spherical.radius * scale)\n        }\n\n        offset.setFromSpherical(spherical)\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse)\n\n        position.copy(scope.target).add(offset)\n\n        if (!scope.object.matrixAutoUpdate) scope.object.updateMatrix()\n        scope.object.lookAt(scope.target)\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor\n          sphericalDelta.phi *= 1 - scope.dampingFactor\n\n          panOffset.multiplyScalar(1 - scope.dampingFactor)\n        } else {\n          sphericalDelta.set(0, 0, 0)\n\n          panOffset.set(0, 0, 0)\n        }\n\n        // adjust camera position\n        let zoomChanged = false\n        if (scope.zoomToCursor && performCursorZoom) {\n          let newRadius = null\n          if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n            // move the camera down the pointer ray\n            // this method avoids floating point error\n            const prevRadius = offset.length()\n            newRadius = clampDistance(prevRadius * scale)\n\n            const radiusDelta = prevRadius - newRadius\n            scope.object.position.addScaledVector(dollyDirection, radiusDelta)\n            scope.object.updateMatrixWorld()\n          } else if ((scope.object as OrthographicCamera).isOrthographicCamera) {\n            // adjust the ortho camera position based on zoom changes\n            const mouseBefore = new Vector3(mouse.x, mouse.y, 0)\n            mouseBefore.unproject(scope.object)\n\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale))\n            scope.object.updateProjectionMatrix()\n            zoomChanged = true\n\n            const mouseAfter = new Vector3(mouse.x, mouse.y, 0)\n            mouseAfter.unproject(scope.object)\n\n            scope.object.position.sub(mouseAfter).add(mouseBefore)\n            scope.object.updateMatrixWorld()\n\n            newRadius = offset.length()\n          } else {\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.')\n            scope.zoomToCursor = false\n          }\n\n          // handle the placement of the target\n          if (newRadius !== null) {\n            if (scope.screenSpacePanning) {\n              // position the orbit target in front of the new camera position\n              scope.target\n                .set(0, 0, -1)\n                .transformDirection(scope.object.matrix)\n                .multiplyScalar(newRadius)\n                .add(scope.object.position)\n            } else {\n              // get the ray and translation plane to compute target\n              _ray.origin.copy(scope.object.position)\n              _ray.direction.set(0, 0, -1).transformDirection(scope.object.matrix)\n\n              // if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n              // extremely large values\n              if (Math.abs(scope.object.up.dot(_ray.direction)) < TILT_LIMIT) {\n                object.lookAt(scope.target)\n              } else {\n                _plane.setFromNormalAndCoplanarPoint(scope.object.up, scope.target)\n                _ray.intersectPlane(_plane, scope.target)\n              }\n            }\n          }\n        } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          zoomChanged = scale !== 1\n\n          if (zoomChanged) {\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale))\n            scope.object.updateProjectionMatrix()\n          }\n        }\n\n        scale = 1\n        performCursorZoom = false\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          // @ts-ignore\n          scope.dispatchEvent(changeEvent)\n\n          lastPosition.copy(scope.object.position)\n          lastQuaternion.copy(scope.object.quaternion)\n          zoomChanged = false\n\n          return true\n        }\n\n        return false\n      }\n    })()\n\n    // https://github.com/mrdoob/three.js/issues/20575\n    this.connect = (domElement: HTMLElement): void => {\n      scope.domElement = domElement\n      // disables touch scroll\n      // touch-action needs to be defined for pointer events to work on mobile\n      // https://stackoverflow.com/a/48254578\n      scope.domElement.style.touchAction = 'none'\n      scope.domElement.addEventListener('contextmenu', onContextMenu)\n      scope.domElement.addEventListener('pointerdown', onPointerDown)\n      scope.domElement.addEventListener('pointercancel', onPointerUp)\n      scope.domElement.addEventListener('wheel', onMouseWheel)\n    }\n\n    this.dispose = (): void => {\n      // Enabling touch scroll\n      if (scope.domElement) {\n        scope.domElement.style.touchAction = 'auto'\n      }\n      scope.domElement?.removeEventListener('contextmenu', onContextMenu)\n      scope.domElement?.removeEventListener('pointerdown', onPointerDown)\n      scope.domElement?.removeEventListener('pointercancel', onPointerUp)\n      scope.domElement?.removeEventListener('wheel', onMouseWheel)\n      scope.domElement?.ownerDocument.removeEventListener('pointermove', onPointerMove)\n      scope.domElement?.ownerDocument.removeEventListener('pointerup', onPointerUp)\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown)\n      }\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    }\n\n    //\n    // internals\n    //\n\n    const scope = this\n\n    const changeEvent = { type: 'change' }\n    const startEvent = { type: 'start' }\n    const endEvent = { type: 'end' }\n\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6,\n    }\n\n    let state = STATE.NONE\n\n    const EPS = 0.000001\n\n    // current position in spherical coordinates\n    const spherical = new Spherical()\n    const sphericalDelta = new Spherical()\n\n    let scale = 1\n    const panOffset = new Vector3()\n\n    const rotateStart = new Vector2()\n    const rotateEnd = new Vector2()\n    const rotateDelta = new Vector2()\n\n    const panStart = new Vector2()\n    const panEnd = new Vector2()\n    const panDelta = new Vector2()\n\n    const dollyStart = new Vector2()\n    const dollyEnd = new Vector2()\n    const dollyDelta = new Vector2()\n\n    const dollyDirection = new Vector3()\n    const mouse = new Vector2()\n    let performCursorZoom = false\n\n    const pointers: PointerEvent[] = []\n    const pointerPositions: { [key: string]: Vector2 } = {}\n\n    function getAutoRotationAngle(): number {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed\n    }\n\n    function getZoomScale(): number {\n      return Math.pow(0.95, scope.zoomSpeed)\n    }\n\n    function rotateLeft(angle: number): void {\n      if (scope.reverseOrbit || scope.reverseHorizontalOrbit) {\n        sphericalDelta.theta += angle\n      } else {\n        sphericalDelta.theta -= angle\n      }\n    }\n\n    function rotateUp(angle: number): void {\n      if (scope.reverseOrbit || scope.reverseVerticalOrbit) {\n        sphericalDelta.phi += angle\n      } else {\n        sphericalDelta.phi -= angle\n      }\n    }\n\n    const panLeft = (() => {\n      const v = new Vector3()\n\n      return function panLeft(distance: number, objectMatrix: Matrix4) {\n        v.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n        v.multiplyScalar(-distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    const panUp = (() => {\n      const v = new Vector3()\n\n      return function panUp(distance: number, objectMatrix: Matrix4) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1)\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0)\n          v.crossVectors(scope.object.up, v)\n        }\n\n        v.multiplyScalar(distance)\n\n        panOffset.add(v)\n      }\n    })()\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    const pan = (() => {\n      const offset = new Vector3()\n\n      return function pan(deltaX: number, deltaY: number) {\n        const element = scope.domElement\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position\n          offset.copy(position).sub(scope.target)\n          let targetDistance = offset.length()\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0)\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft((2 * deltaX * targetDistance) / element.clientHeight, scope.object.matrix)\n          panUp((2 * deltaY * targetDistance) / element.clientHeight, scope.object.matrix)\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) / scope.object.zoom / element.clientWidth,\n            scope.object.matrix,\n          )\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) / scope.object.zoom / element.clientHeight,\n            scope.object.matrix,\n          )\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.')\n          scope.enablePan = false\n        }\n      }\n    })()\n\n    function setScale(newScale: number) {\n      if (\n        (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) ||\n        (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera)\n      ) {\n        scale = newScale\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.')\n        scope.enableZoom = false\n      }\n    }\n\n    function dollyOut(dollyScale: number) {\n      setScale(scale / dollyScale)\n    }\n\n    function dollyIn(dollyScale: number) {\n      setScale(scale * dollyScale)\n    }\n\n    function updateMouseParameters(event: MouseEvent): void {\n      if (!scope.zoomToCursor || !scope.domElement) {\n        return\n      }\n\n      performCursorZoom = true\n\n      const rect = scope.domElement.getBoundingClientRect()\n      const x = event.clientX - rect.left\n      const y = event.clientY - rect.top\n      const w = rect.width\n      const h = rect.height\n\n      mouse.x = (x / w) * 2 - 1\n      mouse.y = -(y / h) * 2 + 1\n\n      dollyDirection.set(mouse.x, mouse.y, 1).unproject(scope.object).sub(scope.object.position).normalize()\n    }\n\n    function clampDistance(dist: number): number {\n      return Math.max(scope.minDistance, Math.min(scope.maxDistance, dist))\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event: MouseEvent) {\n      rotateStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownDolly(event: MouseEvent) {\n      updateMouseParameters(event)\n      dollyStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseDownPan(event: MouseEvent) {\n      panStart.set(event.clientX, event.clientY)\n    }\n\n    function handleMouseMoveRotate(event: MouseEvent) {\n      rotateEnd.set(event.clientX, event.clientY)\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      if (element) {\n        rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n        rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n      }\n      rotateStart.copy(rotateEnd)\n      scope.update()\n    }\n\n    function handleMouseMoveDolly(event: MouseEvent) {\n      dollyEnd.set(event.clientX, event.clientY)\n      dollyDelta.subVectors(dollyEnd, dollyStart)\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale())\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale())\n      }\n\n      dollyStart.copy(dollyEnd)\n      scope.update()\n    }\n\n    function handleMouseMovePan(event: MouseEvent) {\n      panEnd.set(event.clientX, event.clientY)\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n      pan(panDelta.x, panDelta.y)\n      panStart.copy(panEnd)\n      scope.update()\n    }\n\n    function handleMouseWheel(event: WheelEvent) {\n      updateMouseParameters(event)\n\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale())\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale())\n      }\n\n      scope.update()\n    }\n\n    function handleKeyDown(event: KeyboardEvent) {\n      let needsUpdate = false\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed)\n          needsUpdate = true\n          break\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed)\n          needsUpdate = true\n          break\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0)\n          needsUpdate = true\n          break\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0)\n          needsUpdate = true\n          break\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault()\n        scope.update()\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        rotateStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY)\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX)\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY)\n\n        panStart.set(x, y)\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX\n      const dy = pointers[0].pageY - pointers[1].pageY\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyStart.set(0, distance)\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly()\n      if (scope.enablePan) handleTouchStartPan()\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly()\n      if (scope.enableRotate) handleTouchStartRotate()\n    }\n\n    function handleTouchMoveRotate(event: PointerEvent) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n        rotateEnd.set(x, y)\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed)\n\n      const element = scope.domElement\n\n      if (element) {\n        rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n        rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n      }\n      rotateStart.copy(rotateEnd)\n    }\n\n    function handleTouchMovePan(event: PointerEvent) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY)\n      } else {\n        const position = getSecondPointerPosition(event)\n        const x = 0.5 * (event.pageX + position.x)\n        const y = 0.5 * (event.pageY + position.y)\n        panEnd.set(x, y)\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n      pan(panDelta.x, panDelta.y)\n      panStart.copy(panEnd)\n    }\n\n    function handleTouchMoveDolly(event: PointerEvent) {\n      const position = getSecondPointerPosition(event)\n      const dx = event.pageX - position.x\n      const dy = event.pageY - position.y\n      const distance = Math.sqrt(dx * dx + dy * dy)\n\n      dollyEnd.set(0, distance)\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed))\n      dollyOut(dollyDelta.y)\n      dollyStart.copy(dollyEnd)\n    }\n\n    function handleTouchMoveDollyPan(event: PointerEvent) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n      if (scope.enablePan) handleTouchMovePan(event)\n    }\n\n    function handleTouchMoveDollyRotate(event: PointerEvent) {\n      if (scope.enableZoom) handleTouchMoveDolly(event)\n      if (scope.enableRotate) handleTouchMoveRotate(event)\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event: PointerEvent) {\n      if (scope.enabled === false) return\n\n      if (pointers.length === 0) {\n        scope.domElement?.ownerDocument.addEventListener('pointermove', onPointerMove)\n        scope.domElement?.ownerDocument.addEventListener('pointerup', onPointerUp)\n      }\n\n      addPointer(event)\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event)\n      } else {\n        onMouseDown(event)\n      }\n    }\n\n    function onPointerMove(event: PointerEvent) {\n      if (scope.enabled === false) return\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event)\n      } else {\n        onMouseMove(event)\n      }\n    }\n\n    function onPointerUp(event: PointerEvent) {\n      removePointer(event)\n\n      if (pointers.length === 0) {\n        scope.domElement?.releasePointerCapture(event.pointerId)\n\n        scope.domElement?.ownerDocument.removeEventListener('pointermove', onPointerMove)\n        scope.domElement?.ownerDocument.removeEventListener('pointerup', onPointerUp)\n      }\n\n      // @ts-ignore\n      scope.dispatchEvent(endEvent)\n\n      state = STATE.NONE\n    }\n\n    function onMouseDown(event: MouseEvent) {\n      let mouseAction\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT\n          break\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE\n          break\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT\n          break\n\n        default:\n          mouseAction = -1\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return\n          handleMouseDownDolly(event)\n          state = STATE.DOLLY\n          break\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return\n            handleMouseDownPan(event)\n            state = STATE.PAN\n          } else {\n            if (scope.enableRotate === false) return\n            handleMouseDownRotate(event)\n            state = STATE.ROTATE\n          }\n          break\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return\n            handleMouseDownRotate(event)\n            state = STATE.ROTATE\n          } else {\n            if (scope.enablePan === false) return\n            handleMouseDownPan(event)\n            state = STATE.PAN\n          }\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        // @ts-ignore\n        scope.dispatchEvent(startEvent)\n      }\n    }\n\n    function onMouseMove(event: MouseEvent) {\n      if (scope.enabled === false) return\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return\n          handleMouseMoveRotate(event)\n          break\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return\n          handleMouseMoveDolly(event)\n          break\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return\n          handleMouseMovePan(event)\n          break\n      }\n    }\n\n    function onMouseWheel(event: WheelEvent) {\n      if (scope.enabled === false || scope.enableZoom === false || (state !== STATE.NONE && state !== STATE.ROTATE)) {\n        return\n      }\n\n      event.preventDefault()\n\n      // @ts-ignore\n      scope.dispatchEvent(startEvent)\n\n      handleMouseWheel(event)\n\n      // @ts-ignore\n      scope.dispatchEvent(endEvent)\n    }\n\n    function onKeyDown(event: KeyboardEvent) {\n      if (scope.enabled === false || scope.enablePan === false) return\n      handleKeyDown(event)\n    }\n\n    function onTouchStart(event: PointerEvent) {\n      trackPointer(event)\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return\n              handleTouchStartRotate()\n              state = STATE.TOUCH_ROTATE\n              break\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return\n              handleTouchStartPan()\n              state = STATE.TOUCH_PAN\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return\n              handleTouchStartDollyPan()\n              state = STATE.TOUCH_DOLLY_PAN\n              break\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return\n              handleTouchStartDollyRotate()\n              state = STATE.TOUCH_DOLLY_ROTATE\n              break\n\n            default:\n              state = STATE.NONE\n          }\n\n          break\n\n        default:\n          state = STATE.NONE\n      }\n\n      if (state !== STATE.NONE) {\n        // @ts-ignore\n        scope.dispatchEvent(startEvent)\n      }\n    }\n\n    function onTouchMove(event: PointerEvent) {\n      trackPointer(event)\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return\n          handleTouchMoveRotate(event)\n          scope.update()\n          break\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return\n          handleTouchMovePan(event)\n          scope.update()\n          break\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return\n          handleTouchMoveDollyPan(event)\n          scope.update()\n          break\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return\n          handleTouchMoveDollyRotate(event)\n          scope.update()\n          break\n\n        default:\n          state = STATE.NONE\n      }\n    }\n\n    function onContextMenu(event: Event) {\n      if (scope.enabled === false) return\n      event.preventDefault()\n    }\n\n    function addPointer(event: PointerEvent) {\n      pointers.push(event)\n    }\n\n    function removePointer(event: PointerEvent) {\n      delete pointerPositions[event.pointerId]\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1)\n          return\n        }\n      }\n    }\n\n    function trackPointer(event: PointerEvent) {\n      let position = pointerPositions[event.pointerId]\n\n      if (position === undefined) {\n        position = new Vector2()\n        pointerPositions[event.pointerId] = position\n      }\n\n      position.set(event.pageX, event.pageY)\n    }\n\n    function getSecondPointerPosition(event: PointerEvent) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0]\n      return pointerPositions[pointer.pointerId]\n    }\n\n    // Add dolly in/out methods for public API\n\n    this.dollyIn = (dollyScale = getZoomScale()) => {\n      dollyIn(dollyScale)\n      scope.update()\n    }\n\n    this.dollyOut = (dollyScale = getZoomScale()) => {\n        dollyOut(dollyScale)\n        scope.update()\n    }\n\n    this.getScale = () => {\n        return scale;\n    }\n\n    this.setScale = (newScale) => {\n        setScale(newScale)\n        scope.update()\n    }\n\n    this.getZoomScale = () => {\n        return getZoomScale();\n    }\n\n    // connect events\n    if (domElement !== undefined) this.connect(domElement)\n    // force an update at start\n    this.update()\n  }\n}\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n  constructor(object: PerspectiveCamera | OrthographicCamera, domElement?: HTMLElement) {\n    super(object, domElement)\n\n    this.screenSpacePanning = false // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN\n    this.mouseButtons.RIGHT = MOUSE.ROTATE\n\n    this.touches.ONE = TOUCH.PAN\n    this.touches.TWO = TOUCH.DOLLY_ROTATE\n  }\n}\n\nexport { OrbitControls, MapControls }\n","import { Loader, FileLoader, ShapePath } from 'three'\n\nimport type { LoadingManager, Shape } from 'three'\n\ntype Options = {\n  lineHeight: number\n  letterSpacing: number\n}\n\nexport class FontLoader extends Loader {\n  constructor(manager?: LoadingManager) {\n    super(manager)\n  }\n\n  public load(\n    url: string,\n    onLoad?: (responseFont: Font) => void,\n    onProgress?: (event: ProgressEvent) => void,\n    onError?: (event: ErrorEvent) => void,\n  ): void {\n    const loader = new FileLoader(this.manager)\n\n    loader.setPath(this.path)\n    loader.setRequestHeader(this.requestHeader)\n    loader.setWithCredentials(this.withCredentials)\n\n    loader.load(\n      url,\n      (response) => {\n        if (typeof response !== 'string') throw new Error('unsupported data type')\n\n        const json = JSON.parse(response)\n\n        const font = this.parse(json)\n\n        if (onLoad) onLoad(font)\n      },\n      onProgress,\n      onError as (event: unknown) => void,\n    )\n  }\n\n  loadAsync(url: string, onProgress?: (event: ProgressEvent) => void): Promise<Font> {\n    // @ts-ignore\n    return super.loadAsync(url, onProgress)\n  }\n\n  public parse(json: FontData): Font {\n    return new Font(json)\n  }\n}\n\ntype Glyph = {\n  _cachedOutline: string[]\n  ha: number\n  o: string\n}\n\ntype FontData = {\n  boundingBox: { yMax: number; yMin: number }\n  familyName: string\n  glyphs: { [k: string]: Glyph }\n  resolution: number\n  underlineThickness: number\n}\n\nexport class Font {\n  public data: FontData\n  public static isFont: true\n  public static type: 'Font'\n\n  constructor(data: FontData) {\n    this.data = data\n  }\n\n  public generateShapes(text: string, size = 100, _options?: Partial<Options>): Shape[] {\n    const shapes: Shape[] = []\n    const options = { letterSpacing: 0, lineHeight: 1, ..._options }\n    const paths = createPaths(text, size, this.data, options)\n    for (let p = 0, pl = paths.length; p < pl; p++) {\n      Array.prototype.push.apply(shapes, paths[p].toShapes(false))\n    }\n    return shapes\n  }\n}\n\nfunction createPaths(text: string, size: number, data: FontData, options: Options): ShapePath[] {\n  const chars = Array.from(text)\n  const scale = size / data.resolution\n  const line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale\n\n  const paths: ShapePath[] = []\n\n  let offsetX = 0,\n    offsetY = 0\n\n  for (let i = 0; i < chars.length; i++) {\n    const char = chars[i]\n\n    if (char === '\\n') {\n      offsetX = 0\n      offsetY -= line_height * options.lineHeight\n    } else {\n      const ret = createPath(char, scale, offsetX, offsetY, data)\n      if (ret) {\n        offsetX += ret.offsetX + options.letterSpacing\n        paths.push(ret.path)\n      }\n    }\n  }\n\n  return paths\n}\n\nfunction createPath(\n  char: string,\n  scale: number,\n  offsetX: number,\n  offsetY: number,\n  data: FontData,\n): { offsetX: number; path: ShapePath } | undefined {\n  const glyph = data.glyphs[char] || data.glyphs['?']\n\n  if (!glyph) {\n    console.error('THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.')\n    return\n  }\n\n  const path = new ShapePath()\n\n  let x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2\n\n  if (glyph.o) {\n    const outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '))\n\n    for (let i = 0, l = outline.length; i < l; ) {\n      const action = outline[i++]\n\n      switch (action) {\n        case 'm': // moveTo\n          x = parseInt(outline[i++]) * scale + offsetX\n          y = parseInt(outline[i++]) * scale + offsetY\n\n          path.moveTo(x, y)\n\n          break\n\n        case 'l': // lineTo\n          x = parseInt(outline[i++]) * scale + offsetX\n          y = parseInt(outline[i++]) * scale + offsetY\n\n          path.lineTo(x, y)\n\n          break\n\n        case 'q': // quadraticCurveTo\n          cpx = parseInt(outline[i++]) * scale + offsetX\n          cpy = parseInt(outline[i++]) * scale + offsetY\n          cpx1 = parseInt(outline[i++]) * scale + offsetX\n          cpy1 = parseInt(outline[i++]) * scale + offsetY\n\n          path.quadraticCurveTo(cpx1, cpy1, cpx, cpy)\n\n          break\n\n        case 'b': // bezierCurveTo\n          cpx = parseInt(outline[i++]) * scale + offsetX\n          cpy = parseInt(outline[i++]) * scale + offsetY\n          cpx1 = parseInt(outline[i++]) * scale + offsetX\n          cpy1 = parseInt(outline[i++]) * scale + offsetY\n          cpx2 = parseInt(outline[i++]) * scale + offsetX\n          cpy2 = parseInt(outline[i++]) * scale + offsetY\n\n          path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy)\n\n          break\n      }\n    }\n  }\n\n  return { offsetX: glyph.ha * scale, path }\n}\n","import { ExtrudeGeometry } from 'three'\n\nimport type { Font } from '../loaders/FontLoader'\n\nexport type TextGeometryParameters = {\n  bevelEnabled?: boolean\n  bevelOffset?: number\n  bevelSize?: number\n  bevelThickness?: number\n  curveSegments?: number\n  font: Font\n  height?: number\n  size?: number\n  lineHeight?: number\n  letterSpacing?: number\n}\n\nexport class TextGeometry extends ExtrudeGeometry {\n  constructor(text: string, parameters: TextGeometryParameters = {} as TextGeometryParameters) {\n    const {\n      bevelEnabled = false,\n      bevelSize = 8,\n      bevelThickness = 10,\n      font,\n      height = 50,\n      size = 100,\n      lineHeight = 1,\n      letterSpacing = 0,\n      ...rest\n    } = parameters\n\n    if (font === undefined) {\n      // @ts-ignore\n      super() // generate default extrude geometry\n    } else {\n      const shapes = font.generateShapes(text, size, { lineHeight, letterSpacing })\n      super(shapes, { ...rest, bevelEnabled, bevelSize, bevelThickness, depth: height })\n    }\n    // @ts-ignore\n    this.type = 'TextGeometry'\n  }\n}\n\nexport { TextGeometry as TextBufferGeometry }\n","// Use installed dependencies\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three-stdlib/controls/OrbitControls.js';\r\nimport { FontLoader } from 'three-stdlib/loaders/FontLoader.js';\r\nimport { TextGeometry } from 'three-stdlib/geometries/TextGeometry.js';\r\n\r\n// Scene setup\r\nconst scene = new THREE.Scene();\r\nscene.background = new THREE.Color(0xf0f0f0);\r\n\r\nconst camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 150);\r\ncamera.position.set(-15, 10, 15);\r\n\r\nconst renderer = new THREE.WebGLRenderer();\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\ndocument.body.appendChild(renderer.domElement);\r\n\r\nconst controls = new OrbitControls(camera, renderer.domElement);\r\ncontrols.enableDamping = true;\r\n\r\n// Lighting\r\nconst ambientLight = new THREE.AmbientLight(0xffffff, 0.8);\r\nscene.add(ambientLight);\r\n\r\nconst directionalLight = new THREE.DirectionalLight(0xffffff, 0.6);\r\ndirectionalLight.position.set(5, 5, 10);\r\nscene.add(directionalLight);\r\n\r\n// Floor\r\nconst floorGeometry = new THREE.PlaneGeometry(80, 60);\r\nconst floorMaterial = new THREE.MeshStandardMaterial({ color: 0xaaaaaa });\r\nconst floor = new THREE.Mesh(floorGeometry, floorMaterial);\r\nfloor.rotation.x = -Math.PI / 2;\r\nscene.add(floor);\r\n\r\n// Materials\r\nconst columnMaterial = new THREE.MeshStandardMaterial({ color: 0xffffff });\r\n\r\n// Adjusted sizes\r\nconst wallHeight = 3.2; // Chiều cao tường 3.2 mét\r\nconst columnHeight = 3.2; // Chiều cao cột 3.2 mét\r\nconst boardWidth = 2.4; // Tấm bảng rộng 240cm\r\nconst boardHeight = 1.8; // Tấm bảng cao 180cm\r\n\r\n// Tường giữa (nối hai cột)\r\nconst centerWall = new THREE.Mesh(new THREE.BoxGeometry(11, wallHeight, 0.2), columnMaterial);\r\ncenterWall.position.set(0, wallHeight / 2, -2.5);\r\nscene.add(centerWall);\r\n\r\n// Cột hình chữ nhật bên trái\r\nconst leftRectColumn = new THREE.Mesh(new THREE.BoxGeometry(0.75, columnHeight, 0.6), columnMaterial);\r\nleftRectColumn.position.set(-5.5, columnHeight / 2, -2.5);\r\nscene.add(leftRectColumn);\r\n\r\n// Cột hình chữ nhật bên phải\r\nconst rightRectColumn = new THREE.Mesh(new THREE.BoxGeometry(0.75, columnHeight, 0.6), columnMaterial);\r\nrightRectColumn.position.set(5.5, columnHeight / 2, -2.5);\r\nscene.add(rightRectColumn);\r\n\r\n// Cột hình tròn bên trái\r\nconst leftColumn = new THREE.Mesh(new THREE.CylinderGeometry(0.5, 0.5, columnHeight, 32), columnMaterial);\r\nleftColumn.position.set(-5.5, columnHeight / 2, 1);\r\nscene.add(leftColumn);\r\n\r\n// Cột hình tròn bên phải\r\nconst rightColumn = new THREE.Mesh(new THREE.CylinderGeometry(0.5, 0.5, columnHeight, 32), columnMaterial);\r\nrightColumn.position.set(5.5, columnHeight / 2, 1);\r\nscene.add(rightColumn);\r\n\r\n// Bảng\r\nconst boardMaterial = new THREE.MeshStandardMaterial({ color: 0x87CEFA });\r\nconst board = new THREE.Mesh(new THREE.BoxGeometry(boardWidth, boardHeight, 0.1), boardMaterial);\r\nboard.position.set(-2, 1.7, -2.4);\r\nscene.add(board);\r\n\r\n// Bức tường mới sát cột chữ nhật phải\r\nconst rightWall = new THREE.Mesh(new THREE.BoxGeometry(11, wallHeight, 0.2), columnMaterial);\r\nrightWall.position.set(11, wallHeight / 2, -2.5);\r\nscene.add(rightWall);\r\n\r\n// Cột hình chữ nhật bên phải (sát tường mới)\r\nconst newRightRectColumn = new THREE.Mesh(new THREE.BoxGeometry(0.75, columnHeight, 0.6), columnMaterial);\r\nnewRightRectColumn.position.set(16.5, columnHeight / 2, -2.5);\r\nscene.add(newRightRectColumn);\r\n\r\n// Cột hình tròn bên phải (sát tường mới)\r\nconst newRightColumn = new THREE.Mesh(new THREE.CylinderGeometry(0.5, 0.5, columnHeight, 32), columnMaterial);\r\nnewRightColumn.position.set(16.5, columnHeight / 2, 1);\r\nscene.add(newRightColumn);\r\n\r\n// Bàn\r\nconst tableMaterial = new THREE.MeshStandardMaterial({ color: 0x8B4513 }); // Màu gỗ\r\nconst tableGeometry = new THREE.BoxGeometry(2.0, 0.3 , 0.6); // Chiều dài, cao, rộng\r\nconst table = new THREE.Mesh(tableGeometry, tableMaterial);\r\ntable.position.set(2, 0.75, -1.9);\r\nscene.add(table);\r\n\r\n// Chân bàn (4 chân hình cột)\r\nconst legMaterial = new THREE.MeshStandardMaterial({ color: 0x8B4513 });\r\nconst legGeometry = new THREE.CylinderGeometry(0.05, 0.05, 0.75, 32); // Hình trụ: đường kính 0.05, cao 0.75\r\nconst cylinderLegs = [\r\n    new THREE.Mesh(legGeometry, legMaterial), // Chân 1\r\n    new THREE.Mesh(legGeometry, legMaterial), // Chân 2\r\n    new THREE.Mesh(legGeometry, legMaterial), // Chân 3\r\n    new THREE.Mesh(legGeometry, legMaterial)  // Chân 4\r\n];\r\n\r\n// Tính toán vị trí các chân dựa trên vị trí mới của mặt bàn\r\nconst tableLength = 2.0; // Chiều dài mặt bàn\r\nconst tableWidth = 0.6;  // Chiều rộng mặt bàn\r\nconst offsetX = tableLength / 2 - 0.1; // Vị trí chân dọc trục X (từ mép vào trong)\r\nconst offsetZ = tableWidth / 2 - 0.1;  // Vị trí chân dọc trục Z (từ mép vào trong)\r\nconst tableY = 0.75 / 2;               // Độ cao của chân tính từ giữa mặt bàn\r\n\r\n// Đặt vị trí mới cho từng chân\r\ncylinderLegs[0].position.set(2 - offsetX, tableY, -1.9 + offsetZ);  // Chân 1: góc trên trái\r\ncylinderLegs[1].position.set(2 - offsetX, tableY, -1.9 - offsetZ);  // Chân 2: góc dưới trái\r\ncylinderLegs[2].position.set(2 + offsetX, tableY, -1.9 + offsetZ);  // Chân 3: góc trên phải\r\ncylinderLegs[3].position.set(2 + offsetX, tableY, -1.9 - offsetZ);  // Chân 4: góc dưới phải\r\n// Thêm các chân bàn vào scene\r\ncylinderLegs.forEach((leg) => scene.add(leg));\r\n\r\n// Cánh cửa và khung cửa\r\nconst doorMaterial = new THREE.MeshStandardMaterial({ color: 0x000000 });\r\nconst doorGeometry = new THREE.BoxGeometry(1.2, 2.2, 0.05);\r\nconst door = new THREE.Mesh(doorGeometry, doorMaterial);\r\ndoor.position.set(10.0, 1.1, -2.4);\r\nscene.add(door);\r\n\r\nconst doorFrameMaterial = new THREE.MeshStandardMaterial({ color: 0x000000 });\r\nconst doorFrameGeometry = new THREE.BoxGeometry(1.3, 2.4, 0.05);\r\nconst doorFrame = new THREE.Mesh(doorFrameGeometry, doorFrameMaterial);\r\ndoorFrame.position.set(10.0, 1.2, -2.4);\r\nscene.add(doorFrame);\r\n\r\n// Bảng màu đen (Bảng 2) với khung treo chữ L\r\nconst blackBoardMaterial = new THREE.MeshStandardMaterial({ color: 0x000000 }); // Màu đen\r\nconst blackBoard = new THREE.Mesh(\r\n    new THREE.BoxGeometry(0.1, 1.8, 1.8), // Kích thước bảng: 1.8 x 1.8\r\n    blackBoardMaterial\r\n);\r\n\r\n// Vị trí đặt bảng:\r\n// Đặt ở giữa cột chữ nhật và cột tròn, bên dưới thanh ngang\r\nblackBoard.position.set(16.0, 1.9, -1.0); \r\nscene.add(blackBoard);\r\n\r\n// Khung treo chữ L (Bảng 2)\r\nconst boardFrameMaterial = new THREE.MeshStandardMaterial({ color: 0x333333 }); // Màu xám\r\n\r\n// Cột đứng bên phải của khung chữ L\r\nconst verticalPoleRight = new THREE.Mesh(\r\n  new THREE.BoxGeometry(0.1, 3.0, 0.1), // Cột đứng: cao 3m, tiết diện vuông 0.1\r\n  boardFrameMaterial\r\n);\r\nverticalPoleRight.position.set(16.0, 1.5, -1.85); // Đặt sát phía sau bảng đen (bên phải)\r\nscene.add(verticalPoleRight);\r\n\r\n// Cột đứng bên trái của khung chữ L\r\nconst verticalPoleLeft = new THREE.Mesh(\r\n  new THREE.BoxGeometry(0.1, 3.0, 0.1), // Cột đứng: cao 3m, tiết diện vuông 0.1\r\n  boardFrameMaterial\r\n);\r\nverticalPoleLeft.position.set(16.0, 1.5, -0.15); // Đặt sát phía sau bảng đen (bên trái)\r\nscene.add(verticalPoleLeft);\r\n\r\n// Thanh ngang gắn trên đỉnh cột đứng\r\nconst horizontalPole = new THREE.Mesh(\r\n    new THREE.BoxGeometry(0.1, 0.1, 1.8), // Thanh ngang: dài 1.8m, tiết diện vuông 0.1\r\n    boardFrameMaterial\r\n);\r\nhorizontalPole.position.set(16.0, 3.0, -1.0); // Đặt trên đỉnh cột đứng, giữ nguyên thông số\r\nscene.add(horizontalPole);\r\n\r\n// Gắn bảng đen (Bảng 2) vào thanh ngang\r\nblackBoard.position.y = 2.1; // Điều chỉnh bảng đen để gắn ngay bên dưới thanh ngang\r\n\r\n// Bàn mới (bàn 2) - Cùng hướng với bảng 2\r\nconst newTable = new THREE.Mesh(tableGeometry, tableMaterial);\r\nnewTable.position.set(15, 0.75, 0); // Vị trí gần bảng 2\r\nnewTable.rotation.y = Math.PI / 2; // Xoay bàn 90 độ quanh trục Y\r\nscene.add(newTable);\r\n\r\n// Chân bàn mới (4 chân hình cột)\r\nconst newCylinderLegs = [\r\n    new THREE.Mesh(legGeometry, legMaterial), // Chân 1\r\n    new THREE.Mesh(legGeometry, legMaterial), // Chân 2\r\n    new THREE.Mesh(legGeometry, legMaterial), // Chân 3\r\n    new THREE.Mesh(legGeometry, legMaterial)  // Chân 4\r\n];\r\n\r\n// Vị trí các chân của bàn mới\r\nnewCylinderLegs[0].position.set(15 - offsetZ, tableY, 0 - offsetX);  // Chân 1: góc trên trái\r\nnewCylinderLegs[1].position.set(15 + offsetZ, tableY, 0 - offsetX);  // Chân 2: góc dưới trái\r\nnewCylinderLegs[2].position.set(15 - offsetZ, tableY, 0 + offsetX);  // Chân 3: góc trên phải\r\nnewCylinderLegs[3].position.set(15 + offsetZ, tableY, 0 + offsetX);  // Chân 4: góc dưới phải\r\n\r\n// Thêm các chân bàn mới vào scene\r\nnewCylinderLegs.forEach((leg) => scene.add(leg));\r\n\r\n// Render loop\r\nconst animate = () => {\r\n    controls.update();\r\n    renderer.render(scene, camera);\r\n    requestAnimationFrame(animate);\r\n};\r\nanimate();"]}